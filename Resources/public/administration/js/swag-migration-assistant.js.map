{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-page-information/swag-migration-profile-shopware-api-page-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/local/swag-migration-profile-shopware57-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/swag-migration-progress-bar.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/swag-migration-confirm-warning.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/swag-migration-premapping.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/api/swag-migration-profile-shopware57-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/api/swag-migration-profile-shopware54-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/swag-migration-dashboard-card.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/api/swag-migration-profile-shopware55-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/swag-migration-empty-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-credential-form/swag-migration-profile-shopware6-api-credential-form.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/swag-migration-assistant.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/api/swag-migration-profile-shopware55-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/swag-migration-expand-div.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/swag-migration-loading-screen-takeover.scss","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/api/swag-migration-profile-shopware56-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/swag-migration-loading-screen-connection-lost.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/local/swag-migration-profile-shopware54-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/api/swag-migration-profile-shopware54-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-credential-form/swag-migration-profile-shopware-api-credential-form.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/swag-migration-history.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/local/swag-migration-profile-shopware-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/local/swag-migration-profile-shopware-local-credential-form/swag-migration-profile-shopware-local-credential-form.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/swag-migration-main-page.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile sync \\.\\/[a-z0-9-]+\\/[a-z0-9-]+\\/[a-z0-9-]+\\/index\\.js$","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/local/swag-migration-profile-shopware56-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/api/swag-migration-profile-shopware56-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/swag-migration-history-detail-errors.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/swag-migration-tab-card.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/swag-migration-profile-shopware6-api-page-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/swag-migration-history-detail-data.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/swag-migration-shop-information.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/swag-migration-settings-icon.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/swag-migration-process-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/swag-migration-history-detail.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/swag-migration-data-selector.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/swag-migration-result-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/swag-migration-wizard-page-connection-create.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/worker-notification.init.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/swag-migration-wizard.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/local/swag-migration-profile-shopware55-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/swag-migration-grid-selection.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/swag-migration-profile-shopware6-api-page-information.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-extended/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-extended/swag-migration-grid-extended.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-history-selected-data/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-history-selected-data/swag-migration-history-selected-data.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker-status-manager.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/swag-migration-loading-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/swag-migration-result-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/swag-migration-loading-screen-takeover.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/swag-migration-loading-screen-connection-lost.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/swag-migration-pause-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/swag-migration-shop-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/swag-migration-data-selector.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/swag-migration-premapping.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/data/migrationUI.store.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/swag-migration-progress-bar.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/swag-migration-assistant.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/swag-migration-confirm-warning.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/swag-migration-media-process.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/swag-migration-tab-card.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card-item/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card-item/swag-migration-tab-card-item.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/swag-migration-grid-selection.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/swag-migration-expand-div.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/swag-migration-shop-avatar.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/swag-migration-settings-icon.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/swag-migration-dashboard-card.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-index/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-index/swag-migration-index.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/swag-migration-empty-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/swag-migration-main-page.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/swag-migration-history.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/swag-migration-history-detail.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/swag-migration-history-detail-errors.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/swag-migration-history-detail-data.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/storage-broadcaster.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker-request.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/swag-migration-process-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/swag-migration-wizard.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-introduction/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-introduction/swag-migration-wizard-page-introduction.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/swag-migration-wizard-page-profile-installation.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-select/swag-migration-wizard-page-connection-select.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-select/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/swag-migration-wizard-page-connection-create.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-information/swag-migration-wizard-page-profile-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials/swag-migration-wizard-page-credentials.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-success/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-success/swag-migration-wizard-page-credentials-success.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-error/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-error/swag-migration-wizard-page-credentials-error.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/extension/sw-dashboard-index/sw-dashboard-index.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/extension/sw-dashboard-index/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/data/migrationProcess.store.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/api/swag-migration.api.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-process-store-init.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-ui-store-init.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/api/swag-migration-indexing.api.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/api-service.init.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-indexing-worker.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/migration-worker-service.init.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/api/swag-migration-profile-shopware57-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/mixin/swag-wizard.mixin.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/swag-migration-shop-avatar.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/swag-migration-pause-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/swag-migration-wizard-page-profile-installation.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/swag-migration-loading-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/swag-migration-media-process.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Shopware","Component","register","template","extend","content","default","locals","add","context","require","keys","forEach","props","credentials","type","data","inputCredentials","endpoint","apiUser","apiPassword","computed","apiPasswordLength","this","length","watch","immediate","handler","newCredentials","emitCredentials","emitOnChildRouteReadyChanged","areCredentialsValid","deep","newInputCredentials","bearer_token","methods","apiPasswordValid","validateInput","input","isReady","$emit","onKeyPressEnter","listToStyles","parentId","list","styles","newStyles","item","id","part","css","media","sourceMap","parts","push","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","index","replacement","filter","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","ShopwareError","Classes","apiKey","apiKeyErrorCode","apiKeyLength","apiKeyError","code","meta","parameters","apiKeyValid","dbHost","dbPort","dbUser","dbPassword","dbName","installationRoot","map","webpackContext","req","webpackContextResolve","e","resolve","notificationId","WorkerNotification","fn","next","_ref","$root","entry","notification","mediaFileCount","size","config","title","$t","message","$tc","variant","metadata","growl","isLoading","then","uuid","disabledAttribute","String","isDisabled","extendedGridRowClasses","classes","isSelected","isDeleted","isLocal","concat","entityGroups","Array","dataSnippets","snippets","group","snippet","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","reject","record","result","_typeof","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_defineProperties","target","descriptor","hint","prim","toPrimitive","res","Number","_toPrimitive","State","MIGRATION_STATUS","freeze","WAITING","PREMAPPING","FETCH_DATA","WRITE_DATA","PROCESS_MEDIA_FILES","FINISHED","MIGRATION_DISPLAY_STATUS","WorkerStatusManager","migrationService","instance","Constructor","_classCallCheck","_migrationService","_migrationProcessState","protoProps","staticProps","runId","_this","newStatus","statusIndex","onStatusPreparationFinished","onFinish","beforeProcessMedia","beforeWriteProgress","commit","_this2","_callee","requestRetry","requestFailedCount","_context","updateWriteProgress","response","_x","_x2","_this3","_ref2","_callee2","_context2","updateMediaFilesProgress","newEntityGroups","_x3","_x4","_this4","_ref3","_callee3","_context3","finishMigration","_x5","_x6","_Shopware","_Shopware$Component$g","getComponentHelper","mapState","mapGetters","_objectSpread","currentStatus","progressBarValue","displayEntityGroups","reduce","sum","currentCount","progressBarMaxValue","total","progressBarTitle","currentEntityGroupId","progressBarLeftPointDescription","caption","statusLong","created","createdComponent","required","TAKEOVER_STATE","RUNNING","INTERRUPTED","ABORTED","inject","migrationWorkerService","isTakeoverForbidden","isMigrationInterrupted","possibleState","showTakeoverModal","showAbortModal","showRedirectModal","titleSnippet","messageSnippet","refreshState","isMigrationRunningInOtherTab","isRunning","checkForRunningMigration","runState","isMigrationRunning","onCheckButtonClick","status","onCloseTakeoverModal","onTakeover","$nextTick","onCloseAbortModal","onAbort","onCloseRedirectModal","onRedirect","_this5","$router","onNavigateMainClick","window","location","reload","Mixin","format","Utils","Criteria","Data","BADGE_TYPE","SUCCESS","DANGER","migrationProcessStoreInitService","repositoryFactory","mixins","getByName","filters","localizedNumberFormat","locale","adminLocaleLanguage","adminLocaleRegion","Intl","NumberFormat","connected","showMoreInformation","confirmModalIsLoading","showRemoveCredentialsConfirmModal","showResetChecksumsConfirmModal","showResetMigrationConfirmModal","lastConnectionCheck","lastMigrationDate","connection","api","displayEnvironmentInformation","environmentInformation","migrationRunRepository","migrationConnectionRepository","connectionName","shopUrl","sourceSystemDomain","replace","shopUrlPrefix","match","sslActive","shopUrlPrefixClass","connectionBadgeLabel","serverUnreachable","connectionBadgeVariant","shopFirstLetter","sourceSystemName","profile","version","author","profileIcon","icon","gateway","lastConnectionCheckDateTimeParams","date","getDateString","time","getTimeString","lastMigrationDateTimeParams","$route","resetMigration","connectionId","newConnectionId","fetchConnection","updateLastMigrationDate","openResetMigrationModal","onCloseResetModal","criteria","addSorting","sort","search","runs","first","createdAt","credentialFields","Date","getProfileInformation","profileName","gatewayName","profileInformation","day","month","year","hour","minute","onClickEditConnectionCredentials","params","onClickCreateConnection","onClickSelectConnection","onClickProfileInstallation","onClickRemoveConnectionCredentials","updateConnectionCredentials","go","onClickResetChecksums","resetChecksums","onClickResetMigration","cleanupMigrationData","initProcessStore","createNotificationError","displayWarnings","fetchTableData","dataSelectionTableData","$refs","tableDataGrid","dataSelectionIds","_this$$refs$tableData","selectItem","onGridSelectItem","selection","selectionIds","requiredSelection","includes","showHelptext","entityTotals","getHelptext","string","entityNames","UI_COMPONENT_INDEX","WARNING_CONFIRM","DATA_SELECTOR","LOADING_SCREEN","MEDIA_SCREEN","RESULT_SUCCESS","PAUSE_SCREEN","TAKEOVER","CONNECTION_LOST","namespaced","componentIndex","isPaused","isPremappingValid","premapping","unfilledPremapping","filledPremapping","mutations","setComponentIndex","newIndex","setIsLoading","setIsPaused","setIsPremappingValid","isValid","setDataSelectionIds","newIds","setDataSelectionTableData","newTableData","setPremapping","newPremapping","unfilledMapping","filledMapping","newFilledGroup","choices","entity","mapping","newUnfilledGroup","destinationUuid","getters","isMigrationAllowed","tableDataIds","some","premappingInput","displayUnfilledPremapping","displayFilledPremapping","newRunId","fetchPremapping","notifyPremappingValidWatchers","validatePremapping","generatePremapping","startMigration","onInvalidMigrationAccessToken","updateStore","leftPointDescription","rightPointDescription","maxValue","rightPointClasses","isCurrencyChecked","isLanguageChecked","hasDifferentCurrency","sourceSystemCurrency","targetSystemCurrency","hasDifferentLanguage","sourceSystemLanguage","targetSystemLanguage","sourceSystemLocale","targetSystemLocale","isContinuable","onCheckboxValueChanged","items","selectedNumber","tabItems","swTabsItems","mounted","mountedComponent","tabs","checkIfNeedScroll","addScrollbarOffset","setActiveItem","onNewActiveItem","contentContainer","setActive","getErrorCountForGroupTab","currentValue","active","disableRouteParams","limit","paginationSteps","getList","start","page","end","Math","min","onInput","getClassesAfterValidation","expandTitle","collapseTitle","isExpanded","onClick","color","fontSize","lineHeight","avatarStyle","width","height","generateAvatarInitialsSize","avatarSize","shopAvatar","offsetHeight","round","migrationUiStoreInitService","storesInitializing","metaInfo","$createTitle","storeIsMigrationAllowed","migrationDisabled","migrateButtonDisabled","isMigrating","initUiStore","finally","onMigrate","contentComponent","onActionButtonClick","onConnectClick","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","connectionEstablished","requestStatus","isWarning","migrationRuns","migrationDateOptions","second","sortBy","sortDirection","oldParams","logDownloadEndpoint","runIdForLogDownload","runIdForRunClear","showRunClearConfirmModal","runClearConfirmModalIsLoading","isMediaProcessing","migrationColumns","getMigrationColumns","getApiBasePath","dataIndex","label","primary","allowResize","visible","align","normalizeListingParams","getMainListingParams","naturalSorting","parseInt","onMigrateButtonClick","onContextDownloadLogFile","downloadLogsOfRunForm","submit","clearDataOfRun","onContextClearRunClicked","onClearRunConfirmed","migrationRun","showModal","currentTab","runStatusSnippet","runStatusClasses","onCloseModal","addFilter","equals","tabReference","dataTabItem","newActiveTabItem","allMigrationErrors","migrationErrors","downloadUrl","columns","sortable","startIndex","endIndex","loadAllMigrationErrors","applySorting","getGroupedLogsOfRun","getErrorTitleSnippet","snippetKey","$te","submitDownload","downloadForm","allMigrationData","migrationData","progress","utils","StorageBroadcastService","receiveCallback","channelKey","_clientId","createId","_channelKey","_receiveCallback","addEventListener","messageReceived","localStorage","setItem","event","parse","getItem","removeItem","Application","WORKER_API_OPERATION","1","2","3","WorkerRequest","requestParams","workerStatusManager","onInterruptCB","_MAX_REQUEST_TIME","_DEFAULT_CHUNK_SIZE","_CHUNK_PROPORTION_UP_WEIGHT","_CHUNK_PROPORTION_DOWN_WEIGHT","_runId","runUuid","_requestParams","_workerStatusManager","_interrupt","_chunkSize","_lastChunkSize","_successfulChunk","_onInterruptCB","_migrateEntity2","_migrateProcess","set","_callInterruptCB","groupStartIndex","entityStartIndex","entityOffset","_args2","statusChangedError","groupIndex","groupProgress","entityIndex","entityName","entityCount","changeStatus","interrupt","WORKER_INTERRUPT_TYPE","STOP","entities","_migrateEntity","currentOffset","newOffset","_args3","_migrateEntityRequest","groupId","groupCurrentCount","groupTotal","offset","_callee4","_loop","_context5","beforeRequestTime","_context4","operation","_handleChunkSize","validToken","afterRequestTime","getTime","PAUSE","_x7","requestTime","factor","weightedFactor","ceil","_applicationRoot","getApplicationRoot","MIGRATION_ACCESS_TOKEN_NAME","MigrationWorkerService","migrationIndexingWorker","_broadcastResponseFlag","_broadcastService","_onBroadcastReceived","_migrationIndexingWorker","_workRunner","_interruptSubscriber","_restoreState","onBrowserTabClosing","token","preventDefault","returnValue","_callInterruptSubscriber","getState","swagMigrationAccessToken","migrationAccessToken","processStateResponse","isMigrationAccessTokenValid","accessToken","requestErrorCode","createMigration","returnState","runProgress","validMigrationRunToken","migrationRunning","indicies","_getIndiciesByEntityName","finishedCount","takeoverMigration","callback","processMediaFiles","_onInterrupt","_startWorkRunner","_migrateFinish","_resetProgress","migrateProcess","_this6","oldFlag","sendMessage","migrationMessage","setTimeout","_this7","_showFinishNotification","_assignThemes","_handleIndexing","dispatch","applicationRoot","actions","route","assignThemes","_this8","visited","errorList","isOtherMigrationRunning","showAbortMigrationConfirmDialog","isPausedBeforeAbortDialog","displayFlowChart","flowChartItemIndex","flowChartItemVariant","flowChartInitialItemVariants","isWarningConfirmed","abortMigrationBackText","componentIndexIsResult","abortButtonVisible","backButtonVisible","migrateButtonVisible","isFetching","startButtonVisible","premappingIsNotReady","warningIsNotReady","startButtonDisabled","pauseButtonVisible","pauseButtonDisabled","continueButtonVisible","onProcessMediaFiles","onFinishWithoutErrors","valid","beforeDestroy","beforeDestroyedComponent","otherInstanceMigrating","restoreFlowChart","checkConnection","connectionCheckResponse","restoreRunningMigration","unsubscribeInterrupt","resetFlowChart","subscribeInterrupt","onInterrupt","onAbortButtonClick","pauseMigration","onSaveButtonClick","writePremapping","createNotificationSuccess","onBackButtonClick","onStartButtonClick","onPauseButtonClick","onContinueButtonClick","_callee5","onCloseAbortMigrationConfirmDialog","onTakeoverMigration","_callee6","_context6","onAbortOtherMigration","_this9","_callee7","_context7","abortMigration","onConfiscatedMigration","onStop","onPause","onConnectionLost","_this10","loadingScreenTakeover","_this11","onWarningConfirmationChanged","confirmed","SSL_REQUIRED_ERROR_CODE","CONNECTION_NAME_ERRORS","NAME_TO_SHORT","NAME_ALREADY_EXISTS","routes","getRoutes","childIsLoading","selectedProfile","childRouteReady","errorMessageSnippet","connectionNameErrorCode","currentErrorCode","migrationGeneralSettingRepository","modalSize","credentialsSuccess","credentialsError","currentRoute","modalTitleSnippet","buttonBackSnippet","buttonBackVisible","profileInformationComponentIsLoaded","buttonSecondarySnippet","buttonSecondaryVisible","buttonPrimarySnippet","introduction","connectionCreate","connectionSelect","buttonPrimaryDisabled","profileInformationComponent","getComponentRegistry","has","credentialsComponent","beforeRouteLeave","to","from","loadSelectedConnection","onChildRouteChanged","profileInstallation","trimCredentials","field","trim","onConnect","errors","onResponseError","doConnectionCheck","navigateToRoute","errorCode","checkForDisabledRoute","primaryButton","$el","focus","onNoConnectionSelected","onButtonBackClick","onButtonSecondaryClick","triggerPrimaryClick","onButtonPrimaryClick","navigateToNext","saveSelectedConnection","createNewConnection","selectedConnectionId","connectionResponse","chooseAction","checkConnectionName","newConnection","save","setting","onChildRouteReadyChanged","onCredentialsChanged","onProfileSelected","onChangeConnectionName","onChildIsLoadingChanged","onConnectionSelected","pluginIsLoading","pluginIsSaveSuccessful","isInstalled","pluginName","pluginRepository","refreshPlugin","pluginCriteria","setLimit","onInstall","setupPlugin","extensionHelperService","downloadStoreExtension","installStoreExtension","activateStoreExtension","cacheApiService","clear","currentConnectionId","connections","find","con","profiles","gateways","connectionNameError","profileHint","getProfiles","pushLinkToProfiles","selectDefaultProfile","profileSearch","searchParams","searchTerm","option","gatewaySearch","getText","onSelectProfile","onSelectGateway","getGateways","componentIsLoaded","override","runExists","loading","run","$super","acl","isAdmin","setConnectionId","setEnvironmentInformation","setRunId","setIsMigrating","setStatusIndex","setCurrentEntityGroupId","newId","setEntityGroups","setEntityProgress","targetGroup","resetProgress","Module","registerModule","MigrationProcessStore","MigrationUIStore","description","targetVersion","emptyScreen","component","path","parentPath","privilege","redirect","children","main","history","detail","dataSelector","processScreen","wizard","settingsItem","iconComponent","ApiService","MigrationApiService","_ApiService","_inherits","_super","_createSuper","httpClient","loginService","apiEndpoint","basicConfig","timeout","apiVersion","additionalHeaders","headers","getBasicHeaders","post","handleResponse","additionalParams","ProcessStoreInitService","_migrationGeneralSettingRepository","settings","UiStoreInitService","getDataSelection","dataSelection","selectedIds","MigrationIndexingApiService","lastIndexer","timestamp","addServiceProvider","container","initContainer","getContainer","MigrationIndexingWorker","indexingApiService","_indexingApiService","running","lastResult","indexing","migrationIndexingWorkerService","migrationIndexingApiService","debug","routeIndex","floor","routeCount","routeIndices","routePrevious","previousRoute","routeNext","nextRoute","navigateToPreviousPossible","navigateToNextPossible","matchCurrentRoute","updated","notifyCallback","currentRouteFound","warn","console","navigateToPrevious"],"mappings":"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","file":"static/js/swag-migration-assistant.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/swagmigrationassistant/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"p+FR\");\n","import template from './swag-migration-profile-shopware-api-page-information.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-api-page-information', {\n    template,\n});\n","export default \"{% block swag_migration_wizard_page_plugin_information %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-plugin-information\\\">\\n\\n        {% block swag_migration_wizard_page_plugin_information_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_plugin_information_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_plugin_information_svg %}\\n                            <img class=\\\"swag-migration-wizard__plugin\\\" :src=\\\"'/swagmigrationassistant/static/img/wizard-shopware55-api-plugin-information.svg' | asset\\\">\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_title %}\\n                            <h3 class=\\\"information__header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_api_hint %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_plugin_link %}\\n                            <div class=\\\"swag-migration-wizard__link\\\">\\n                                <a class=\\\"link\\\" target=\\\"_blank\\\" href=\\\"https://store.shopware.com/search?sSearch=Swag226607479310\\\">{{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.pluginLink') }}</a>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-progress-bar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3beeac96\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-confirm-warning.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d6a5275e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-premapping.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0ac262a6\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-dashboard-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"571c32b7\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-empty-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3dae60e0\", content, true, {});","const context = require.context('./', true, /\\.\\/[a-z0-9-]+\\/[a-z0-9-]+\\/[a-z0-9-]+\\/index\\.js$/);\ncontext.keys().forEach((key) => {\n    context(key);\n});\n","import template from './swag-migration-profile-shopware6-api-credential-form.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware6major-api-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                endpoint: '',\n                apiUser: '',\n                apiPassword: '',\n            },\n        };\n    },\n\n    computed: {\n        apiPasswordLength() {\n            if (this.inputCredentials.apiPassword === null) {\n                return 0;\n            }\n\n            return this.inputCredentials.apiPassword.length;\n        },\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                delete newInputCredentials.bearer_token;\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (\n                this.apiPasswordValid(newInputCredentials.apiPassword) &&\n                this.validateInput(newInputCredentials.endpoint) &&\n                this.validateInput(newInputCredentials.apiUser) &&\n                newInputCredentials.endpoint !== 'http://' &&\n                newInputCredentials.endpoint !== 'https://'\n            );\n        },\n\n        validateInput(input) {\n            return input !== null && input !== '';\n        },\n\n        apiPasswordValid(apiPassword) {\n            return apiPassword !== null && apiPassword.length >= 1;\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_api_hint %}\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc('swag-migration.wizard.pages.credentials.shopware6.api.contentInformation') }}\\n                        </p>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n                <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_apiuser_field %}\\n                        <sw-text-field\\n                                       v-autofocus\\n                                       v-model=\\\"inputCredentials.apiUser\\\"\\n                                       name=\\\"sw-field--apiUser\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserPlaceholder')\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserTooltip')\\\"\\n                                       validation=\\\"required\\\"\\n                                       required>\\n\\n                            {% block swag_migration_wizard_page_credentials_apiuser_icon %}\\n                                <template #suffix>\\n                                    <sw-icon name=\\\"regular-user\\\"></sw-icon>\\n                                </template>\\n                            {% endblock %}\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_apiPassword_field %}\\n                        <sw-password-field\\n                                       v-model=\\\"inputCredentials.apiPassword\\\"\\n                                       name=\\\"sw-field--apiPassword\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordPlaceholder')\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordTooltip')\\\"\\n                                       validation=\\\"required\\\"\\n                                       required>\\n                        </sw-password-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_endpoint_field %}\\n                        <sw-url-field v-model=\\\"inputCredentials.endpoint\\\"\\n                                      :validation=\\\"inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'\\\"\\n                                      :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointLabel')\\\"\\n                                      :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointPlaceholder')\\\"\\n                                      :switchLabel=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointSSLLabel')\\\"\\n                                      required>\\n                        </sw-url-field>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-assistant.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d44256fc\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-expand-div.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2f7a5e42\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-loading-screen-takeover.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1462d730\", content, true, {});","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-loading-screen-connection-lost.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"66842850\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_api_hint %}\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc('swag-migration.wizard.pages.credentials.shopware55.api.contentInformation') }}\\n                        </p>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n            <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_apikey_field %}\\n                    <sw-text-field v-autofocus\\n                                   v-model=\\\"inputCredentials.apiKey\\\"\\n                                   name=\\\"sw-field--apiKey\\\"\\n                                   :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyLabel')\\\"\\n                                   :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyPlaceholder')\\\"\\n                                   :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyTooltip')\\\"\\n                                   :error=\\\"apiKeyError\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_apikey_icon %}\\n                            <template #suffix>\\n                                <sw-icon name=\\\"regular-key\\\"></sw-icon>\\n                            </template>\\n                        {% endblock %}\\n                    </sw-text-field>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_apiuser_field %}\\n                    <sw-text-field v-model=\\\"inputCredentials.apiUser\\\"\\n                                   name=\\\"sw-field--apiUser\\\"\\n                                   :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserLabel')\\\"\\n                                   :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserPlaceholder')\\\"\\n                                   :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserTooltip')\\\"\\n                                   validation=\\\"required\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_apiuser_icon %}\\n                            <template #suffix>\\n                                <sw-icon name=\\\"regular-user\\\"></sw-icon>\\n                            </template>\\n                        {% endblock %}\\n                    </sw-text-field>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_endpoint_field %}\\n                    <sw-url-field v-model=\\\"inputCredentials.endpoint\\\"\\n                                  :validation=\\\"inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'\\\"\\n                                  :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointLabel')\\\"\\n                                  :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointPlaceholder')\\\"\\n                                  :switchLabel=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointSSLLabel')\\\">\\n                    </sw-url-field>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","import template from './swag-migration-profile-shopware-api-credential-form.html.twig';\n\nconst { Component } = Shopware;\nconst ShopwareError = Shopware.Classes.ShopwareError;\nconst API_KEY_INVALID_ERROR_CODE = 'SWAG_MIGRATION_INVALID_API_KEY';\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-api-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                endpoint: '',\n                apiUser: '',\n                apiKey: '',\n            },\n            apiKeyErrorCode: '',\n        };\n    },\n\n    computed: {\n        apiKeyLength() {\n            if (this.inputCredentials.apiKey === null) {\n                return 0;\n            }\n\n            return this.inputCredentials.apiKey.length;\n        },\n\n        apiKeyError() {\n            if (this.apiKeyErrorCode === '') {\n                return null;\n            }\n\n            return new ShopwareError({\n                code: this.apiKeyErrorCode,\n                meta: {\n                    parameters: {\n                        length: this.apiKeyLength,\n                    },\n                },\n            });\n        },\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (\n                this.apiKeyValid(newInputCredentials.apiKey) &&\n                this.validateInput(newInputCredentials.endpoint) &&\n                this.validateInput(newInputCredentials.apiUser) &&\n                newInputCredentials.endpoint !== 'http://' &&\n                newInputCredentials.endpoint !== 'https://'\n            );\n        },\n\n        validateInput(input) {\n            return input !== null && input !== '';\n        },\n\n        apiKeyValid(apiKey) {\n            if (apiKey === null || apiKey.length < 40 || apiKey.length > 40) {\n                this.apiKeyErrorCode = API_KEY_INVALID_ERROR_CODE;\n                return false;\n            }\n\n            this.apiKeyErrorCode = '';\n            return true;\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-history.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d12f4bc8\", content, true, {});","import template from './swag-migration-profile-shopware-local-credential-form.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-local-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                dbHost: '',\n                dbPort: '3306',\n                dbUser: '',\n                dbPassword: '',\n                dbName: '',\n                installationRoot: '',\n            },\n        };\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (newInputCredentials.dbHost !== '' &&\n                newInputCredentials.dbPort !== '' &&\n                newInputCredentials.dbName !== '' &&\n                newInputCredentials.dbUser !== '' &&\n                newInputCredentials.dbPassword !== '' &&\n                newInputCredentials.installationRoot !== ''\n            );\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_local_hint %}\\n                        {{ $tc('swag-migration.wizard.pages.credentials.shopware55.local.contentInformation') }}\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n                <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_local_db_host_port_group %}\\n                        <sw-container columns=\\\"1fr 80px\\\"\\n                                      gap=\\\"16px\\\">\\n\\n                            {% block swag_migration_wizard_page_credentials_local_dbhost_field %}\\n                                <sw-text-field v-autofocus\\n                                               v-model=\\\"inputCredentials.dbHost\\\"\\n                                               name=\\\"sw-field--dbHost\\\"\\n                                               :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostLabel')\\\"\\n                                               :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostPlaceholder')\\\">\\n                                </sw-text-field>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_page_credentials_local_dbport_field %}\\n                                <sw-text-field v-model=\\\"inputCredentials.dbPort\\\"\\n                                               name=\\\"sw-field--dbPort\\\"\\n                                               :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPortLabel')\\\">\\n                                </sw-text-field>\\n                            {% endblock %}\\n                        </sw-container>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbuser_field %}\\n                        <sw-text-field v-model=\\\"inputCredentials.dbUser\\\"\\n                                       name=\\\"sw-field--dbUser\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserPlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbpassword_field %}\\n                        <sw-password-field v-model=\\\"inputCredentials.dbPassword\\\"\\n                                           name=\\\"sw-field--dbPassword\\\"\\n                                           :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordLabel')\\\"\\n                                           :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordPlaceholder')\\\">\\n                        </sw-password-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbname_field %}\\n                        <sw-text-field v-model=\\\"inputCredentials.dbName\\\"\\n                                       name=\\\"sw-field--dbName\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNameLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNamePlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_installationroot_field %}\\n                        <sw-text-field v-model=\\\"inputCredentials.installationRoot\\\"\\n                                       name=\\\"sw-field--installationRoot\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRoot')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRootPlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-main-page.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"27b2c14d\", content, true, {});","var map = {\n\t\"./shopware/api/swag-migration-profile-shopware-api-credential-form/index.js\": \"S74U\",\n\t\"./shopware/api/swag-migration-profile-shopware-api-page-information/index.js\": \"1IpX\",\n\t\"./shopware/local/swag-migration-profile-shopware-local-credential-form/index.js\": \"Sj8j\",\n\t\"./shopware54/api/swag-migration-profile-shopware54-api-credential-form/index.js\": \"CtuJ\",\n\t\"./shopware54/api/swag-migration-profile-shopware54-api-page-information/index.js\": \"RHoj\",\n\t\"./shopware54/local/swag-migration-profile-shopware54-local-credential-form/index.js\": \"PxKa\",\n\t\"./shopware55/api/swag-migration-profile-shopware55-api-credential-form/index.js\": \"G90u\",\n\t\"./shopware55/api/swag-migration-profile-shopware55-api-page-information/index.js\": \"LT5b\",\n\t\"./shopware55/local/swag-migration-profile-shopware55-local-credential-form/index.js\": \"m64i\",\n\t\"./shopware56/api/swag-migration-profile-shopware56-api-credential-form/index.js\": \"V2My\",\n\t\"./shopware56/api/swag-migration-profile-shopware56-api-page-information/index.js\": \"PFh6\",\n\t\"./shopware56/local/swag-migration-profile-shopware56-local-credential-form/index.js\": \"UWos\",\n\t\"./shopware57/api/swag-migration-profile-shopware57-api-credential-form/index.js\": \"BeaA\",\n\t\"./shopware57/api/swag-migration-profile-shopware57-api-page-information/index.js\": \"rDrH\",\n\t\"./shopware57/local/swag-migration-profile-shopware57-local-credential-form/index.js\": \"1p9f\",\n\t\"./shopware6/api/swag-migration-profile-shopware6-api-credential-form/index.js\": \"Jw9O\",\n\t\"./shopware6/api/swag-migration-profile-shopware6-api-page-information/index.js\": \"awJz\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Toqh\";","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-history-detail-errors.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a107e17c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-tab-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"099f77d8\", content, true, {});","import template from './swag-migration-profile-shopware6-api-page-information.html.twig';\nimport './swag-migration-profile-shopware6-api-page-information.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware6major-api-page-information', {\n    template,\n});\n","export default \"{% block swag_migration_wizard_page_plugin_information_shopware6 %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-plugin-information swag-migration-profile-shopware6-api-page-information\\\">\\n\\n        {% block swag_migration_wizard_page_plugin_information_shopware6_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_plugin_information_shopware6_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_icon %}\\n                            <div class=\\\"swag-migration-profile-shopware6-api-page-information__icon sw-settings-item\\\">\\n                                <div class=\\\"sw-settings-item__icon background--enabled\\\">\\n                                    <sw-icon name=\\\"regular-cog\\\">\\n                                    </sw-icon>\\n                                </div>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_title %}\\n                            <h3 class=\\\"information__header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint %}\\n\\n                            {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_plugin %}\\n                                <div class=\\\"swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card\\\">\\n                                    <h4 class=\\\"information__header\\\">\\n                                        {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.title') }}\\n                                    </h4>\\n                                    <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.description') }}</p>\\n\\n                                    <div class=\\\"swag-migration-wizard__link\\\">\\n                                        <a class=\\\"link\\\"\\n                                           target=\\\"_blank\\\"\\n                                           :href=\\\"$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.link')\\\">\\n                                            {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.linkText') }}\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_integration %}\\n                                <div class=\\\"swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card\\\">\\n                                    <h4 class=\\\"information__header\\\">\\n                                        {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.title') }}\\n                                    </h4>\\n                                    <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.description') }}</p>\\n\\n                                    <div class=\\\"swag-migration-wizard__link\\\">\\n                                        <a class=\\\"link\\\"\\n                                           target=\\\"_blank\\\"\\n                                           :href=\\\"$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.link')\\\">\\n                                            {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.linkText') }}\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-history-detail-data.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"47686f43\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-shop-information.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0a997862\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-settings-icon.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4894833a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-process-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"8d3f3874\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-history-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e9276534\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-data-selector.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7613af84\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-result-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"647bdc97\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-wizard-page-connection-create.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5eb55b3e\", content, true, {});","let notificationId = null;\n\nShopware.WorkerNotification.register('newsletterRecipientTask', {\n    name: 'SwagMigrationAssistant\\\\Migration\\\\MessageQueue\\\\Message\\\\ProcessMediaMessage',\n    fn: onMediaProcessingMessageFound,\n});\n\n/**\n * @package services-settings\n */\nfunction onMediaProcessingMessageFound(next, { $root, entry, notification }) {\n    const mediaFileCount = entry.size * 5;\n\n    // Create notification config object\n    const config = {\n        title: $root.$t('swag-migration.worker-listener.mediaProcessing.title'),\n        message: $root.$tc(\n            'swag-migration.worker-listener.mediaProcessing.message',\n            mediaFileCount,\n        ),\n        variant: 'info',\n        metadata: {\n            size: mediaFileCount,\n        },\n        growl: false,\n        isLoading: true,\n    };\n\n    // Create new notification\n    if (mediaFileCount && notificationId === null) {\n        notification.create(config).then((uuid) => {\n            notificationId = uuid;\n        });\n        next();\n    }\n\n    // Update existing notification\n    if (notificationId !== null) {\n        config.uuid = notificationId;\n\n        if (mediaFileCount === 0) {\n            config.title = $root.$t(\n                'swag-migration.worker-listener.mediaProcessing.titleSuccess',\n            );\n            config.message = $root.$t(\n                'swag-migration.worker-listener.mediaProcessing.messageSuccess',\n            );\n            config.isLoading = false;\n        }\n        notification.update(config);\n    }\n\n    next();\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-wizard.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"bf8dd72c\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-grid-selection.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c83272ca\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-profile-shopware6-api-page-information.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"93fec1f4\", content, true, {});","import template from './swag-migration-grid-extended.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend('swag-migration-grid-extended', 'sw-grid', {\n    template,\n\n    props: {\n        disabledAttribute: {\n            type: String,\n            default: 'disabled',\n        },\n    },\n\n    methods: {\n        isDisabled(item) {\n            return item[this.disabledAttribute];\n        },\n\n        extendedGridRowClasses(item, index) {\n            const classes = {\n                'is--selected': this.isSelected(item.id) && !this.isDisabled(item),\n                'is--deleted': item.isDeleted,\n                'is--new': item.isLocal,\n                'is--disabled': this.isDisabled(item),\n            };\n\n            classes[`sw-grid__row--${index}`] = true;\n\n            return classes;\n        },\n    },\n});\n","export default \"{% block sw_grid_body_slot_items %}\\n    <sw-grid-row :class=\\\"extendedGridRowClasses(item, index)\\\"\\n                 :style=\\\"columnFlex\\\"\\n                 :key=\\\"item.id\\\"\\n                 :item=\\\"item\\\"\\n                 :index=\\\"index\\\"\\n                 @inline-edit-finish=\\\"onInlineEditFinish\\\"\\n                 @inline-edit-start=\\\"onInlineEditStart\\\">\\n\\n        {% block sw_grid_body_item_selectable %}\\n            <div v-if=\\\"selectable\\\" class=\\\"sw-grid-column\\\">\\n                <div class=\\\"sw-grid__cell-content\\\">\\n                    <sw-checkbox-field :value=\\\"isSelected(item.id)\\\"\\n                                       :disabled=\\\"isDisabled(item)\\\"\\n                                       @change=\\\"selectItem($event, item)\\\">\\n                    </sw-checkbox-field>\\n                </div>\\n            </div>\\n        {% endblock %}\\n\\n        <slot name=\\\"columns\\\" :item=\\\"item\\\">\\n            {% block sw_grid_slot_columns %}{% endblock %}\\n        </slot>\\n    </sw-grid-row>\\n{% endblock %}\\n\";","import template from './swag-migration-history-selected-data.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-selected-data', {\n    template,\n\n    props: {\n        entityGroups: {\n            type: Array,\n            default: () => { return []; },\n        },\n    },\n\n    computed: {\n        dataSnippets() {\n            const snippets = [];\n            this.entityGroups.forEach((group) => {\n                if (group.id !== 'processMediaFiles') {\n                    snippets.push(\n                        group.snippet,\n                    );\n                }\n            });\n\n            return snippets;\n        },\n    },\n});\n","export default \"{% block swag_migration_history_selected_data %}\\n    <div class=\\\"swag-migration-history-selected-data\\\">\\n        <template v-for=\\\"(snippet, index) in dataSnippets\\\">\\n\\n            {% block swag_migration_history_selected_data_entityGroupSnippet %}\\n                {{ $tc(snippet) }}<template v-if=\\\"index !== (dataSnippets.length - 1)\\\">, </template>\\n            {% endblock %}\\n        </template>\\n    </div>\\n{% endblock %}\";","const { State } = Shopware;\n\n/**\n * Describes the current step in the migration (status).\n *\n * @package services-settings\n * @type {Readonly<{\n *                  WAITING: number,\n *                  PREMAPPING:number,\n *                  FETCH_DATA: number,\n *                  WRITE_DATA: number,\n *                  PROCESS_MEDIA_FILES: number,\n *                  FINISHED: number\n *                 }>}\n */\nexport const MIGRATION_STATUS = Object.freeze({\n    WAITING: -1,\n    PREMAPPING: 0,\n    FETCH_DATA: 1,\n    WRITE_DATA: 2,\n    PROCESS_MEDIA_FILES: 3,\n    FINISHED: 4,\n});\n\nconst MIGRATION_DISPLAY_STATUS = {};\nObject.keys(MIGRATION_STATUS).forEach((key) => {\n    if (!(key === 'WAITING' || key === 'PREMAPPING' || key === 'FINISHED')) {\n        MIGRATION_DISPLAY_STATUS[MIGRATION_STATUS[key]] = key;\n    }\n});\n\n\nexport { MIGRATION_DISPLAY_STATUS };\n\n\nexport class WorkerStatusManager {\n    /**\n     * @param {MigrationApiService} migrationService\n     */\n    constructor(migrationService) {\n        this._migrationService = migrationService;\n        this._migrationProcessState = State.get('swagMigration/process');\n    }\n\n    /**\n     * This handles the necessary things before we start working on the new status.\n     * For example it resets the progress and updates the counts before the 'WRITE_DATA' operation.\n     *\n     * @param {string} runId\n     * @param {?number} newStatus\n     * @returns {Promise}\n     */\n    changeStatus(runId, newStatus = null) {\n        if (newStatus === null) {\n            newStatus = this._migrationProcessState.statusIndex;\n        }\n\n        return new Promise((resolve, reject) => {\n            if (newStatus === MIGRATION_STATUS.WRITE_DATA) {\n                this.beforeWriteProgress(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            if (newStatus === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                this.beforeProcessMedia(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            if (newStatus === MIGRATION_STATUS.FINISHED) {\n                this.onFinish(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            this.onStatusPreparationFinished(newStatus);\n            resolve();\n        });\n    }\n\n    onStatusPreparationFinished(newStatus) {\n        State.commit('swagMigration/process/setStatusIndex', newStatus);\n    }\n\n    beforeWriteProgress(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.updateWriteProgress(runId).then((response) => {\n                    response = response.filter((group) => {\n                        return group.id !== 'processMediaFiles';\n                    });\n                    State.commit('swagMigration/process/setEntityGroups', response);\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    beforeProcessMedia(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.updateMediaFilesProgress(runId).then((response) => {\n                    const newEntityGroups = response.filter(group => group.id === 'processMediaFiles');\n                    State.commit('swagMigration/process/setEntityGroups', newEntityGroups);\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    onFinish(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.finishMigration(runId).then(() => {\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n}\n\nexport default {\n    WorkerStatusManager,\n    MIGRATION_STATUS,\n};\n","import template from './swag-migration-loading-screen.html.twig';\nimport './swag-migration-loading-screen.scss';\nimport { MIGRATION_DISPLAY_STATUS } from\n'../../../../../core/service/migration/swag-migration-worker-status-manager.service';\n\nconst { Component, State } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen', {\n    template,\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'statusIndex',\n            'currentEntityGroupId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isPaused',\n        ]),\n\n        ...mapGetters('swagMigration/process', [\n            'displayEntityGroups',\n        ]),\n\n        currentStatus() {\n            return MIGRATION_DISPLAY_STATUS[this.statusIndex];\n        },\n\n        progressBarValue() {\n            return this.displayEntityGroups.reduce((sum, group) => sum + group.currentCount, 0);\n        },\n\n        progressBarMaxValue() {\n            return this.displayEntityGroups.reduce((sum, group) => sum + group.total, 0);\n        },\n\n        progressBarTitle() {\n            if (this.currentEntityGroupId === '') {\n                return '';\n            }\n\n            return `${this.$tc(\n                `swag-migration.index.selectDataCard.dataSelection.${this.currentEntityGroupId}`,\n            )}`;\n        },\n\n        progressBarLeftPointDescription() {\n            return this.currentStatus === undefined ? '' :\n                `${this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.short`)}`;\n        },\n\n        caption() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.caption`);\n        },\n\n        statusLong() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.long`);\n        },\n\n        hint() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.hint`);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swagMigration/process/resetProgress');\n        },\n    },\n});\n","export default \"{% block swag_migration_loading_screen %}\\n    <div class=\\\"swag-migration-loading-screen\\\">\\n\\n        {% block swag_migration_loading_screen_card %}\\n            <sw-card\\n                v-show=\\\"!isPaused\\\"\\n                class=\\\"swag-migration-loading-screen__card\\\"\\n                position-identifier=\\\"swag-migration-loading-screen__card\\\"\\n            >\\n\\n                {% block swag_migration_index_loading_screen_content %}\\n                    <div class=\\\"swag-migration-loading-screen__content\\\">\\n\\n                        {% block swag_migration_index_loading_screen_header %}\\n                            <div class=\\\"swag-migration-loading-screen__header\\\">\\n\\n                                {% block swag_migration_index_loading_screen_title %}\\n                                    <div class=\\\"swag-migration-loading-screen__title\\\">\\n                                        {{ statusLong }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_index_loading_screen_caption %}\\n                                    <div class=\\\"swag-migration-loading-screen__caption\\\">\\n                                        {{ caption }}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_loading_screen_progress_bar %}\\n                            <swag-migration-progress-bar\\n                                    :title=\\\"progressBarTitle\\\"\\n                                    :leftPointDescription=\\\"progressBarLeftPointDescription\\\"\\n                                    :rightPointDescription=\\\"$tc('swag-migration.index.loadingScreenCard.status.finish')\\\"\\n                                    :value=\\\"progressBarValue\\\"\\n                                    :maxValue=\\\"progressBarMaxValue\\\"></swag-migration-progress-bar>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_loading_screen_alert %}\\n                            <sw-alert class=\\\"swag-migration-loading-screen__hint\\\" variant=\\\"success\\\">\\n                                {{ hint }}\\n                                <template #customIcon>\\n                                    <sw-icon class=\\\"swag-migration-loading-screen__alert-icon\\\"\\n                                             name=\\\"regular-lightbulb\\\"\\n                                             size=\\\"20px\\\"\\n                                             decorative>\\n                                    </sw-icon>\\n                                </template>\\n                            </sw-alert>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_loading_screen_pause_overlay %}\\n            <swag-migration-pause-screen v-show=\\\"isPaused\\\"></swag-migration-pause-screen>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-result-screen.html.twig';\nimport './swag-migration-result-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-result-screen', {\n    template,\n\n    props: {\n        runId: {\n            type: String,\n            required: true,\n        },\n    },\n});\n","export default \"{% block swag_migration_result_screen %}\\n    <div>\\n\\n        {% block swag_migration_result_screen_card %}\\n            <sw-card class=\\\"swag-migration-result-screen\\\" position-identifier=\\\"swag-migration-result-screen\\\">\\n\\n                {% block swag_migration_result_screen_content %}\\n                    <div class=\\\"swag-migration-result-screen__content\\\">\\n\\n                        {% block swag_migration_result_screen_icon %}\\n                            <div class=\\\"swag-migration-result-screen__bubble\\\">\\n                                <sw-icon class=\\\"swag-migration-result-screen__icon\\\"\\n                                         name=\\\"regular-thumbs-up\\\"\\n                                         size=\\\"36px\\\"\\n                                         decorative>\\n                                </sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_title %}\\n                            <div class=\\\"swag-migration-result-screen__title\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.title') }}\\n                            </div>\\n                            <div class=\\\"swag-migration-result-screen__caption\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.caption') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_link %}\\n                            <router-link class=\\\"swag-migration-result-screen__link\\\"\\n                                         :to=\\\"{ name: 'swag.migration.index.history.detail', params: { id: runId } }\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.historyLink') }}\\n                            </router-link>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_result_screen_survey_card %}\\n            <sw-card class=\\\"swag-migration-result-survey\\\" position-identifier=\\\"swag-migration-result-survey\\\">\\n\\n                {% block swag_migration_result_screen_survey_content %}\\n                    <div class=\\\"swag-migration-result-survey__content\\\">\\n\\n                        {% block swag_migration_result_screen_survey_title %}\\n                            <div class=\\\"swag-migration-result-survey__title\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.title') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_caption %}\\n                            <div class=\\\"swag-migration-result-survey__caption\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.caption') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_link %}\\n                            <a class=\\\"sw-button sw-button--small\\\"\\n                               :href=\\\"$tc('swag-migration.index.loadingScreenCard.result.survey.link')\\\"\\n                               target=\\\"_blank\\\"\\n                               rel=\\\"noopener\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.buttonText') }}\\n                                <sw-icon class=\\\"swag-migration-result-survey__external-icon\\\" name=\\\"regular-external-link-s\\\" size=\\\"8\\\"></sw-icon>\\n                            </a>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_icon %}\\n                            <div>\\n                                <img class=\\\"swag-migration-result-survey__icon\\\"\\n                                     :src=\\\"'/swagmigrationassistant/static/img/wizard-result-survey-icon.svg' | asset\\\">\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_loading_screen_takeover %}\\n    <sw-card\\n        class=\\\"swag-migration-loading-screen-takeover\\\"\\n        :isLoading=\\\"isLoading\\\"\\n        position-identifier=\\\"swag-migration-loading-screen-takeover\\\"\\n    >\\n\\n        {% block swag_migration_loading_screen_takeover_content %}\\n            <div class=\\\"swag-migration-loading-screen-takeover__content\\\">\\n\\n                {% block swag_migration_loading_screen_takeover_content_icon %}\\n                    <div class=\\\"swag-migration-loading-screen-takeover__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-comment\\\" color=\\\"#189EFF\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_content_title %}\\n                    <h5 class=\\\"swag-migration-loading-screen-takeover__title\\\">\\n                        {{ $tc(titleSnippet) }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_content_message %}\\n                    {{ $tc(messageSnippet) }}\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_hint %}\\n                    <div class=\\\"swag-migration-loading-screen-takeover__actions\\\">\\n                        <sw-button v-if=\\\"state !== possibleState.ABORTED && !isTakeoverForbidden\\\"\\n                                   variant=\\\"ghost\\\"\\n                                   @click=\\\"onCheckButtonClick\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.buttonCheck') }}\\n                        </sw-button>\\n                        <sw-button v-if=\\\"state === possibleState.ABORTED\\\"\\n                                   variant=\\\"ghost\\\"\\n                                   @click=\\\"onRedirect\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.buttonRedirect') }}\\n                        </sw-button>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n\\n            {% block swag_migration_loading_screen_takeover_modal %}\\n                <sw-modal v-if=\\\"showTakeoverModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseTakeoverModal\\\">\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_hint %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-hint\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.hint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_loading_screen_takeover_modal_footer_cancelAction %}\\n                                <sw-button size=\\\"small\\\"\\n                                           @click=\\\"onCloseTakeoverModal\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_loading_screen_takeover_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onTakeover\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block swag_migration_loading_screen_abort_modal %}\\n                <sw-modal v-if=\\\"showAbortModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseAbortModal\\\">\\n\\n                    {% block swag_migration_loading_screen_abort_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_abort_modal_hint %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-hint\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.hint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_abort_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_loading_screen_abort_modal_footer_cancelAction %}\\n                                <sw-button size=\\\"small\\\"\\n                                           @click=\\\"onCloseAbortModal\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_loading_screen_abort_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onAbort\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block swag_migration_loading_screen_redirect_modal %}\\n                <sw-modal v-if=\\\"showRedirectModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseRedirectModal\\\">\\n\\n                    {% block swag_migration_loading_screen_redirect_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_redirect_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block swag_migration_loading_screen_redirect_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onRedirect\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-loading-screen-takeover.html.twig';\nimport './swag-migration-loading-screen-takeover.scss';\nimport { MIGRATION_STATUS } from '../../../../../core/service/migration/swag-migration-worker-status-manager.service';\n\nconst { Component, State } = Shopware;\n\nconst TAKEOVER_STATE = Object.freeze({\n    RUNNING: 'running',\n    INTERRUPTED: 'interrupted',\n    ABORTED: 'aborted',\n});\n\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen-takeover', {\n    template,\n\n    inject: {\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n    },\n\n    props: {\n        isTakeoverForbidden: {\n            type: Boolean,\n        },\n        isMigrationInterrupted: {\n            type: Boolean,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            possibleState: TAKEOVER_STATE,\n            state: TAKEOVER_STATE.RUNNING,\n            showTakeoverModal: false,\n            showAbortModal: false,\n            showRedirectModal: false,\n        };\n    },\n\n    computed: {\n        titleSnippet() {\n            if (this.isTakeoverForbidden) {\n                return 'swag-migration.index.loadingScreenCard.takeoverScreen.forbidden.title';\n            }\n\n            return `swag-migration.index.loadingScreenCard.takeoverScreen.${this.state}.title`;\n        },\n        messageSnippet() {\n            if (this.isTakeoverForbidden) {\n                return 'swag-migration.index.loadingScreenCard.takeoverScreen.forbidden.message';\n            }\n\n            return `swag-migration.index.loadingScreenCard.takeoverScreen.${this.state}.message`;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.isMigrationInterrupted) {\n                this.state = TAKEOVER_STATE.INTERRUPTED;\n            } else {\n                this.state = TAKEOVER_STATE.RUNNING;\n            }\n\n            this.isLoading = false;\n        },\n\n        refreshState() {\n            this.isLoading = true;\n            return this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    this.isLoading = false;\n                    return Promise.resolve();\n                }\n\n                return this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    if (runState.isMigrationRunning === false) {\n                        this.isLoading = false;\n                        this.state = TAKEOVER_STATE.ABORTED;\n                        return;\n                    }\n\n                    if (this.isMigrationInterrupted) {\n                        this.state = TAKEOVER_STATE.INTERRUPTED;\n                    } else {\n                        this.state = TAKEOVER_STATE.RUNNING;\n                    }\n\n                    this.isLoading = false;\n                }).catch(() => {\n                    this.isLoading = false;\n                });\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onCheckButtonClick() {\n            this.isLoading = true;\n            return this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    this.isLoading = false;\n                    this.showRedirectModal = true;\n                    return;\n                }\n\n                if (runState.status === MIGRATION_STATUS.PREMAPPING) {\n                    this.isLoading = false;\n                    this.showAbortModal = true;\n                    return;\n                }\n\n                this.isLoading = false;\n                this.showTakeoverModal = true;\n            });\n        },\n\n        onCloseTakeoverModal() {\n            this.showTakeoverModal = false;\n        },\n\n        onTakeover() {\n            this.showTakeoverModal = false;\n            this.$nextTick(() => {\n                // this will remove this component from the DOM so it must be called after the modal ist closed.\n                this.$emit('onTakeoverMigration');\n            });\n        },\n\n        onCloseAbortModal() {\n            this.showAbortModal = false;\n        },\n\n        onAbort() {\n            this.showAbortModal = false;\n            this.$nextTick(() => {\n                // this will remove this component from the DOM so it must be called after the modal ist closed.\n                this.$emit('onAbortMigration');\n            });\n        },\n\n        onCloseRedirectModal() {\n            this.showRedirectModal = false;\n        },\n\n        onRedirect() {\n            this.showRedirectModal = false;\n            this.$nextTick(() => {\n                State.commit('swagMigration/process/setIsMigrating', false);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                this.$router.push({ name: 'swag.migration.index.main' });\n            });\n        },\n    },\n});\n","import template from './swag-migration-loading-screen-connection-lost.html.twig';\nimport './swag-migration-loading-screen-connection-lost.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen-connection-lost', {\n    template,\n\n    methods: {\n        onNavigateMainClick() {\n            window.location.reload(); // trigger full page refresh, because the user can be still offline.\n        },\n    },\n});\n","export default \"{% block swag_migration_loading_screen_connection_lost %}\\n    <sw-card class=\\\"swag-migration-loading-screen-connection-lost\\\" position-identifier=\\\"swag-migration-loading-screen-connection-lost\\\">\\n\\n        {% block swag_migration_loading_screen_connection_lost_content %}\\n            <div class=\\\"swag-migration-loading-screen-connection-lost__content\\\">\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_icon %}\\n                    <div class=\\\"swag-migration-loading-screen-connection-lost__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-exclamation-triangle\\\" color=\\\"#ffb75d\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_title %}\\n                    <h5 class=\\\"swag-migration-loading-screen-connection-lost__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_message %}\\n                    <p class=\\\"swag-migration-loading-screen-connection-lost__content-message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_hint %}\\n                    <div class=\\\"swag-migration-loading-screen-connection-lost__actions\\\">\\n                        <sw-button variant=\\\"ghost\\\"\\n                                   @click=\\\"onNavigateMainClick\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.buttonNavigateToMain') }}\\n                        </sw-button>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-pause-screen.html.twig';\nimport './swag-migration-pause-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-pause-screen', {\n    template,\n});\n","export default \"{% block swag_migration_pause_screen %}\\n    <sw-card class=\\\"swag-migration-pause-screen\\\" position-identifier=\\\"swag-migration-pause-screen\\\">\\n\\n        {% block swag_migration_pause_screen_content %}\\n            <div class=\\\"swag-migration-pause-screen__content\\\">\\n\\n                {% block swag_migration_pause_screen_content_icon %}\\n                    <div class=\\\"swag-migration-pause-screen__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-sofa\\\" color=\\\"#189eff\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_pause_screen_content_title %}\\n                    <h5 class=\\\"swag-migration-pause-screen__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.pauseScreen.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_pause_screen_content_message %}\\n                    <p class=\\\"swag-migration-pause-screen__content-message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.pauseScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-shop-information.html.twig';\nimport './swag-migration-shop-information.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\nconst { format } = Shopware.Utils;\nconst { Criteria } = Shopware.Data;\n\nconst BADGE_TYPE = Object.freeze({\n    SUCCESS: 'success',\n    DANGER: 'danger',\n});\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-shop-information', {\n    template,\n    inject: {\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    filters: {\n        localizedNumberFormat(value) {\n            const locale = `${this.adminLocaleLanguage}-${this.adminLocaleRegion}`;\n            const formatter = new Intl.NumberFormat(locale);\n            return formatter.format(value);\n        },\n    },\n\n    props: {\n        connected: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showMoreInformation: true,\n            confirmModalIsLoading: false,\n            showRemoveCredentialsConfirmModal: false,\n            showResetChecksumsConfirmModal: false,\n            showResetMigrationConfirmModal: false,\n            lastConnectionCheck: '-',\n            lastMigrationDate: '-',\n            connection: null,\n            context: Shopware.Context.api,\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'connectionId',\n            'environmentInformation',\n        ]),\n\n        ...mapGetters([\n            'adminLocaleLanguage',\n            'adminLocaleRegion',\n        ]),\n\n        displayEnvironmentInformation() {\n            return this.environmentInformation === null ? {} :\n                this.environmentInformation;\n        },\n\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n\n        connectionName() {\n            return this.connection === null ? '' :\n                this.connection.name;\n        },\n\n        shopUrl() {\n            return this.displayEnvironmentInformation.sourceSystemDomain === undefined ? '' :\n                this.displayEnvironmentInformation.sourceSystemDomain.replace(/^\\s*https?:\\/\\//, '');\n        },\n\n        shopUrlPrefix() {\n            if (this.displayEnvironmentInformation.sourceSystemDomain === undefined) {\n                return '';\n            }\n\n            const match = this.displayEnvironmentInformation.sourceSystemDomain.match(/^\\s*https?:\\/\\//);\n            if (match === null) {\n                return '';\n            }\n\n            return match[0];\n        },\n\n        sslActive() {\n            return (this.shopUrlPrefix === 'https://');\n        },\n\n        shopUrlPrefixClass() {\n            return this.sslActive ? 'swag-migration-shop-information__shop-domain-prefix--is-ssl' : '';\n        },\n\n        connectionBadgeLabel() {\n            if (this.serverUnreachable) {\n                return 'swag-migration.index.shopInfoCard.serverUnreachable';\n            }\n\n            if (this.connected) {\n                return 'swag-migration.index.shopInfoCard.connected';\n            }\n\n            return 'swag-migration.index.shopInfoCard.notConnected';\n        },\n\n        connectionBadgeVariant() {\n            if (this.connected) {\n                return BADGE_TYPE.SUCCESS;\n            }\n\n            return BADGE_TYPE.DANGER;\n        },\n\n        shopFirstLetter() {\n            return this.displayEnvironmentInformation.sourceSystemName === undefined ? 'S' :\n                this.displayEnvironmentInformation.sourceSystemName[0];\n        },\n\n        profile() {\n            return this.connection === null || this.connection.profile === undefined ? '' :\n                `${this.connection.profile.sourceSystemName} ${this.connection.profile.version} - ${this.connection.profile.author}`;\n        },\n\n        profileIcon() {\n            return this.connection === null ||\n                this.connection.profile === undefined ||\n                this.connection.profile.icon === undefined ? null : this.connection.profile.icon;\n        },\n\n        gateway() {\n            return this.connection === null || this.connection.gateway === undefined ? '' :\n                this.connection.gateway.snippet;\n        },\n\n        lastConnectionCheckDateTimeParams() {\n            return {\n                date: this.getDateString(this.lastConnectionCheck),\n                time: this.getTimeString(this.lastConnectionCheck),\n            };\n        },\n\n        lastMigrationDateTimeParams() {\n            return {\n                date: this.getDateString(this.lastMigrationDate),\n                time: this.getTimeString(this.lastMigrationDate),\n            };\n        },\n    },\n\n    watch: {\n        $route: {\n            immediate: true,\n            handler() {\n                this.showResetMigrationConfirmModal = this.$route.meta.resetMigration;\n            },\n        },\n\n        connectionId: {\n            immediate: true,\n            /**\n             * @param {string} newConnectionId\n             */\n            handler(newConnectionId) {\n                this.fetchConnection(newConnectionId);\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateLastMigrationDate();\n        },\n\n        openResetMigrationModal() {\n            this.showResetMigrationConfirmModal = true;\n            this.$router.push({\n                name: 'swag.migration.index.resetMigration',\n            });\n        },\n\n        onCloseResetModal() {\n            this.showResetMigrationConfirmModal = false;\n            this.$router.push({\n                name: 'swag.migration.index.main',\n            });\n        },\n\n        updateLastMigrationDate() {\n            const criteria = new Criteria(1, 1);\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n                if (runs.length > 0) {\n                    this.lastMigrationDate = runs.first().createdAt;\n                } else {\n                    this.lastMigrationDate = '-';\n                }\n            });\n        },\n\n        /**\n         * @param {string} connectionId\n         */\n        fetchConnection(connectionId) {\n            return this.migrationConnectionRepository.get(connectionId, this.context).then((connection) => {\n                delete connection.credentialFields;\n                this.connection = connection;\n                this.lastConnectionCheck = new Date();\n\n                return this.migrationService.getProfileInformation(\n                    connection.profileName,\n                    connection.gatewayName,\n                ).then((profileInformation) => {\n                    this.connection.profile = profileInformation.profile;\n                    this.connection.gateway = profileInformation.gateway;\n                });\n            });\n        },\n\n        getTimeString(date) {\n            return format.date(date, {\n                day: undefined,\n                month: undefined,\n                year: undefined,\n                hour: 'numeric',\n                minute: '2-digit',\n            });\n        },\n\n        getDateString(date) {\n            return format.date(date);\n        },\n\n        onClickEditConnectionCredentials() {\n            this.$router.push({\n                name: 'swag.migration.wizard.credentials',\n                params: {\n                    connectionId: this.connectionId,\n                },\n            });\n        },\n\n        onClickCreateConnection() {\n            this.$router.push({\n                name: 'swag.migration.wizard.connectionCreate',\n            });\n        },\n\n        onClickSelectConnection() {\n            this.$router.push({\n                name: 'swag.migration.wizard.connectionSelect',\n            });\n        },\n\n        onClickProfileInstallation() {\n            this.$router.push({\n                name: 'swag.migration.wizard.profileInstallation',\n            });\n        },\n\n        onClickRemoveConnectionCredentials() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.updateConnectionCredentials(\n                this.connectionId,\n                { },\n            ).then(() => {\n                this.$router.go(); // Refresh the page\n            });\n        },\n\n        onClickResetChecksums() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.resetChecksums(this.connectionId).then(() => {\n                this.showResetChecksumsConfirmModal = false;\n                this.confirmModalIsLoading = false;\n            });\n        },\n\n        onClickResetMigration() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.cleanupMigrationData().then(() => {\n                this.showResetMigrationConfirmModal = false;\n                this.confirmModalIsLoading = false;\n                this.migrationProcessStoreInitService.initProcessStore();\n\n                this.$nextTick(() => {\n                    this.$router.push({ name: 'swag.migration.emptyScreen' });\n                });\n            }).catch(() => {\n                this.showResetMigrationConfirmModal = false;\n                this.confirmModalIsLoading = false;\n\n                this.createNotificationError({\n                    title: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.title'),\n                    message: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message'),\n                    variant: 'error',\n                    growl: true,\n                });\n            });\n        },\n    },\n});\n","export default \"{% block swag_migration_shop_information %}\\n    <sw-card\\n        class=\\\"swag-migration-shop-information\\\"\\n        :title=\\\"$tc('swag-migration.index.shopInfoCard.cardTitle')\\\"\\n        position-identifier=\\\"swag-migration-shop-information\\\"\\n    >\\n\\n        {% block swag_migration_shop_information_content %}\\n            <template #grid>\\n                <sw-container rows=\\\"auto auto\\\">\\n                    <sw-card-section :divider=\\\"showMoreInformation ? 'bottom' : ''\\\">\\n\\n                        {% block swag_migration_shop_information_connection %}\\n                            <div class=\\\"swag-migration-shop-information__connection\\\">\\n\\n                                {% block swag_migration_shop_information_connection_avatar %}\\n                                    <template v-if=\\\"profileIcon === null || profileIcon === ''\\\">\\n                                        <swag-migration-shop-avatar class=\\\"swag-migration-shop-information__connection-avatar\\\"\\n                                                                    color=\\\"#189EFF\\\"\\n                                                                    size=\\\"80px\\\">\\n                                            {{ shopFirstLetter }}\\n                                        </swag-migration-shop-avatar>\\n                                    </template>\\n\\n                                    <template v-else>\\n                                        <img class=\\\"swag-migration-shop-information__profile-avatar\\\"\\n                                             :src=\\\"profileIcon | asset\\\"\\n                                             size=\\\"80px\\\">\\n                                    </template>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_connection_info %}\\n                                    <div class=\\\"swag-migration-shop-information__connection-info\\\">\\n\\n                                        {% block swag_migration_shop_information_shop_system %}\\n                                            <div class=\\\"swag-migration-shop-information__connection-name\\\">\\n                                                {{ connectionName }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_shop_domain %}\\n                                            <div v-if=\\\"shopUrl !== ''\\\" class=\\\"swag-migration-shop-information__shop-domain\\\">\\n                                                <span class=\\\"swag-migration-shop-information__shop-domain-prefix\\\"\\n                                                      :class=\\\"shopUrlPrefixClass\\\">\\n                                                    <sw-icon v-if=\\\"sslActive\\\"\\n                                                             class=\\\"swag-migration-shop-information__shop-domain-prefix-icon\\\"\\n                                                             name=\\\"regular-lock\\\"\\n                                                             size=\\\"12px\\\">\\n                                                    </sw-icon>\\n                                                    <sw-icon v-else\\n                                                             class=\\\"swag-migration-shop-information__shop-domain-prefix-icon\\\"\\n                                                             name=\\\"regular-lock-open-s\\\"\\n                                                             size=\\\"12px\\\">\\n                                                    </sw-icon>\\n                                                    {{ shopUrlPrefix }}</span>{{ shopUrl }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_actions %}\\n                                            <div class=\\\"swag-migration-shop-information__actions\\\">\\n\\n                                                {% block swag_migration_shop_information_actions_editSettings %}\\n                                                    <sw-button size=\\\"small\\\"\\n                                                               @click=\\\"onClickEditConnectionCredentials\\\">\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.buttonEditSettings') }}\\n                                                    </sw-button>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_shop_information_actions_contextMenu %}\\n                                                    <sw-context-button>\\n                                                        <template #button>\\n                                                            <sw-button size=\\\"small\\\" square>\\n                                                                <sw-icon name=\\\"solid-ellipsis-h-s\\\" small></sw-icon>\\n                                                            </sw-button>\\n                                                        </template>\\n\\n                                                        {% block swag_migration_shop_information_actions_createConnectionItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickCreateConnection\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonCreateConnection') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_selectConnectionItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickSelectConnection\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonSelectConnection') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_profileInstallationItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickProfileInstallation\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonProfileInstallation') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_removeCredentialsItem %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"showRemoveCredentialsConfirmModal = true\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonRemoveCredentials') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_resetChecksumsItem %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"showResetChecksumsConfirmModal = true\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonResetChecksums') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_divider %}\\n                                                            <sw-context-menu-divider></sw-context-menu-divider>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_resetMigrationItem %}\\n                                                            <sw-context-menu-item @click=\\\"openResetMigrationModal\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonResetMigration') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_connection %}\\n                                    <div class=\\\"swag-migration-shop-information__connection\\\">\\n                                        <div class=\\\"swag-migration-shop-information__connection-badge\\\">\\n                                            <sw-label class=\\\"swag-migration-shop-information__connection-status\\\"\\n                                                      :variant=\\\"connectionBadgeVariant\\\"\\n                                                      appearance=\\\"pill\\\">\\n                                                <sw-color-badge class=\\\"swag-migration-shop-information__connection-status-dot\\\"\\n                                                                :variant=\\\"connectionBadgeVariant\\\"\\n                                                                rounded>\\n                                                </sw-color-badge>\\n                                                <span class=\\\"swag-migration-shop-information__connection-status-text\\\">\\n                                                    {{ $tc(connectionBadgeLabel) }}\\n                                                </span>\\n                                            </sw-label>\\n                                        </div>\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </sw-card-section>\\n\\n                    <sw-card-section v-if=\\\"showMoreInformation\\\" secondary slim>\\n                        <sw-container class=\\\"swag-migration-shop-information__metadata\\\"\\n                                      columns=\\\"repeat(auto-fit, minmax(250px, 1fr)\\\"\\n                                      gap=\\\"0px 15px\\\">\\n\\n                            {% block swag_migration_shop_information_metadata_columns %}\\n                                <div class=\\\"swag-migration-shop-information__metadata-columns\\\">\\n\\n                                    {% block swag_migration_shop_information_metadata_column_left %}\\n                                        {% block swag_migration_shop_information_metadata_profile %}\\n                                            <sw-description-list>\\n                                                <dt>{{ $tc('swag-migration.index.shopInfoCard.profile') }}</dt>\\n                                                <dd>{{ profile }}</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_metadata_gateway %}\\n                                            <sw-description-list>\\n                                                    <dt>{{ $tc('swag-migration.index.shopInfoCard.gateway') }}</dt>\\n                                                    <dd>{{ $tc(gateway) }}</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </div>\\n                                <div class=\\\"swag-migration-shop-information__metadata-columns\\\">\\n\\n                                    {% block swag_migration_shop_information_column_right %}\\n                                        {% block swag_migration_shop_information_metadata_lastConnectionCheck %}\\n                                            <sw-description-list>\\n                                                <dt>{{ $tc('swag-migration.index.shopInfoCard.connectionCheck') }}</dt>\\n                                                <dd v-if=\\\"lastConnectionCheck !== '-'\\\">\\n                                                    {{ $tc('swag-migration.index.shopInfoCard.displayDateTime', 0, lastConnectionCheckDateTimeParams) }}\\n                                                </dd>\\n                                                <dd v-else>-</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_metadata_lastMigration %}\\n                                            <sw-description-list>\\n                                                    <dt>{{ $tc('swag-migration.index.shopInfoCard.lastMigration') }}</dt>\\n                                                    <dd v-if=\\\"lastMigrationDate !== '-'\\\">\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.displayDateTime', 0, lastMigrationDateTimeParams) }}\\n                                                    </dd>\\n                                                    <dd v-else>\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.noMigrationDoneYet') }}\\n                                                    </dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card-section>\\n                </sw-container>\\n\\n                {% block swag_migration_shop_information_remove_credentials_confirm_modal %}\\n                    <sw-modal v-if=\\\"showRemoveCredentialsConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              size=\\\"460px\\\"\\n                              @modal-close=\\\"showRemoveCredentialsConfirmModal = false\\\">\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.content') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_shop_information_remove_credentials_confirm_modal_abort %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"showRemoveCredentialsConfirmModal = false\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.abortButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_remove_credentials_confirm_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"onClickRemoveConnectionCredentials\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.confirmButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block swag_migration_shop_information_reset_checksums_confirm_modal %}\\n                    <sw-modal v-if=\\\"showResetChecksumsConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              size=\\\"460px\\\"\\n                              @modal-close=\\\"showResetChecksumsConfirmModal = false\\\">\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.content')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_shop_information_reset_checksums_confirm_modal_abort %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"showResetChecksumsConfirmModal = false\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.abortButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_reset_checksums_confirm_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"onClickResetChecksums\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.confirmButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block swag_migration_shop_information_reset_migration_confirm_modal %}\\n                    <sw-modal v-if=\\\"showResetMigrationConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__reset-confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              @modal-close=\\\"onCloseResetModal\\\">\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_icon %}\\n                            <div class=\\\"swag-migration-shop-information__reset-confirm-modal-icon-wrapper\\\">\\n                                <sw-icon class=\\\"swag-migration-shop-information__confirm-modal-icon\\\" name=\\\"regular-trophy\\\" color=\\\"#37D046\\\" size=\\\"40\\\"></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_header %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-header\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.header')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-content\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.content')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_shop_information_reset_migration_confirm_modal_abort %}\\n                                <sw-button size=\\\"small\\\"\\n                                           :disabled=\\\"confirmModalIsLoading\\\"\\n                                           @click=\\\"onCloseResetModal\\\">\\n                                    {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.abortButtonText') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_shop_information_reset_migration_confirm_modal_confirm %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"confirmModalIsLoading\\\"\\n                                           @click=\\\"onClickResetMigration\\\">\\n                                    {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.confirmButtonText') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-data-selector.html.twig';\nimport './swag-migration-data-selector.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-data-selector', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'dataSelectionTableData',\n            'dataSelectionIds',\n        ]),\n\n        displayWarnings() {\n            return this.environmentInformation.displayWarnings;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchTableData();\n        },\n\n        fetchTableData() {\n            if (this.dataSelectionTableData.length > 0) {\n                this.$nextTick(() => {\n                    if (!this.$refs.tableDataGrid) {\n                        this.fetchTableData();\n                    }\n\n                    this.dataSelectionIds.forEach((id) => {\n                        this.$refs.tableDataGrid?.selectItem(true, { id });\n                    });\n                });\n            }\n        },\n\n        onGridSelectItem(selection) {\n            const selectionIds = Object.keys(selection);\n\n            this.dataSelectionTableData.forEach((data) => {\n                if (data.requiredSelection !== true) {\n                    return;\n                }\n\n                if (!selectionIds.includes(data.id)) {\n                    selectionIds.push(data.id);\n                    this.$nextTick(() => {\n                        this.$refs.tableDataGrid.selectItem(true, data);\n                    });\n                }\n            });\n\n            State.commit('swagMigration/ui/setDataSelectionIds', selectionIds);\n        },\n\n        showHelptext(entityTotals) {\n            return entityTotals !== undefined && Object.keys(entityTotals).length > 1;\n        },\n\n        getHelptext(item) {\n            if (item.entityTotals === undefined || Object.keys(item.entityTotals).length === 0) {\n                return '';\n            }\n\n            let string = '';\n            Object.keys(item.entityTotals).forEach((key) => {\n                string += `${this.$tc(item.entityNames[key])\n                } ${\n                    item.entityTotals[key]\n                }</br>`;\n            });\n\n            return string;\n        },\n    },\n});\n","export default \"{% block swag_migration_data_selector %}\\n    <div class=\\\"swag-migration-data-selector\\\">\\n\\n        {% block swag_migration_data_selector_warnings %}\\n            <div class=\\\"swag-migration-data-selector__warnings\\\">\\n                <sw-alert v-for=\\\"warning in displayWarnings\\\"\\n                          class=\\\"swag-migration-data-selector__warning\\\"\\n                          :key=\\\"warning.snippetKey\\\"\\n                          variant=\\\"warning\\\">\\n                    {{ $tc(warning.snippetKey, warning.pluralizationCount, warning.snippetArguments) }}\\n                </sw-alert>\\n            </div>\\n        {% endblock %}\\n\\n        <sw-card\\n            v-if=\\\"this.dataSelectionTableData.length > 0\\\"\\n            :title=\\\"$tc('swag-migration.index.selectDataCard.cardTitle')\\\"\\n            position-identifier=\\\"swag-migration-data-selector\\\"\\n        >\\n\\n            {% block swag_migration_data_selector_grid %}\\n                <template #grid>\\n                    <swag-migration-grid-extended\\n                        ref=\\\"tableDataGrid\\\"\\n                        :items=\\\"dataSelectionTableData\\\"\\n                        disabledAttribute=\\\"requiredSelection\\\"\\n                        table\\n                        @sw-grid-select-item=\\\"onGridSelectItem\\\"\\n                        @sw-grid-select-all=\\\"onGridSelectItem\\\">\\n                        <template #columns=\\\"{ item }\\\">\\n\\n                            {% block swag_migration_data_selector_grid_column_data %}\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.name')\\\">\\n                                    {{ $tc(item.snippet) }}\\n                                </sw-grid-column>\\n\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.dataType')\\\">\\n                                    {{ $tc('swag-migration.index.selectDataCard.dataTypes.' + item.dataType) }}\\n                                </sw-grid-column>\\n\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.total')\\\" align=\\\"right\\\">\\n                                    {{ item.total }}\\n\\n                                    <sw-help-text v-if=\\\"showHelptext(item.entityTotals)\\\"\\n                                                  class=\\\"swag-migration-data-selector__help-text\\\"\\n                                                  :text=\\\"getHelptext(item)\\\">\\n                                    </sw-help-text>\\n                                    <div v-else class=\\\"swag-migration-data-selector__help-text-placeholder\\\"></div>\\n                                </sw-grid-column>\\n                            {% endblock %}\\n                        </template>\\n                    </swag-migration-grid-extended>\\n                </template>\\n            {% endblock %}\\n        </sw-card>\\n\\n        <sw-card v-else class=\\\"swag-migration-data-selector\\\" position-identifier=\\\"swag-migration-data-selector-no-data\\\">\\n\\n            {% block swag_migration_data_selector_no_data %}\\n                <div class=\\\"swag-migration-index-data-selector__no-data\\\">\\n                    <p class=\\\"swag-migration-index-data-selector__no-data-label\\\">\\n                        {{ $tc('swag-migration.index.selectDataCard.noData') }}\\n                    </p>\\n                </div>\\n            {% endblock %}\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_premapping %}\\n    <div class=\\\"swag-migration-premapping\\\">\\n\\n        {% block swag_migration_premapping_unfilled_alert %}\\n            <sw-alert v-if=\\\"!isLoading && !isPremappingValid\\\"\\n                      class=\\\"swag-migration-premapping__alert\\\"\\n                      variant=\\\"error\\\">\\n                {{ $tc('swag-migration.index.premappingCard.unfilledAlert') }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_unfilled_card %}\\n            <sw-card\\n                v-if=\\\"!isLoading && !isPremappingValid\\\"\\n                class=\\\"swag-migration-premapping__unfilled-card\\\"\\n                position-identifier=\\\"swag-migration-premapping\\\"\\n            >\\n\\n                {% block swag_migration_premapping_unfilled_title %}\\n                    <div class=\\\"swag-migration-premapping__unfilled-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.unfilledTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_unfilled_caption %}\\n                    <div class=\\\"swag-migration-premapping__unfilled-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.unfilledCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_success_card %}\\n            <sw-card v-if=\\\"!isLoading && isPremappingValid\\\"\\n                     class=\\\"swag-migration-premapping__success-card\\\"\\n                     position-identifier=\\\"swag-migration-premapping__success-card\\\">\\n\\n                {% block swag_migration_premapping_success_bubble %}\\n                    <div class=\\\"swag-migration-premapping__success-bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-premapping__success-icon\\\"\\n                                 name=\\\"regular-checkmark\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_success_title %}\\n                    <div class=\\\"swag-migration-premapping__success-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.validTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_success_caption %}\\n                    <div class=\\\"swag-migration-premapping__success-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.validCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_unfilled_mapping %}\\n            <swag-migration-tab-card v-if=\\\"displayUnfilledPremapping\\\"\\n                                     class=\\\"swag-migration-premapping__tab-card\\\"\\n                                     :title=\\\"$tc('swag-migration.index.premappingCard.unfilledCardTitle')\\\"\\n                                     :items=\\\"unfilledPremapping\\\">\\n                <template slot=\\\"items\\\" slot-scope=\\\"slotProps\\\">\\n                    <swag-migration-grid-selection :choices=\\\"slotProps.item.choices\\\"\\n                                                   :mapping=\\\"slotProps.item.mapping\\\"\\n                                                   @input=\\\"validatePremapping\\\">\\n                    </swag-migration-grid-selection>\\n                </template>\\n            </swag-migration-tab-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_expand_div %}\\n            <swag-migration-expand-div v-if=\\\"!isLoading && displayFilledPremapping\\\"\\n                                       class=\\\"swag-migration-premapping__expand-div\\\"\\n                                       :expandTitle=\\\"$tc('swag-migration.index.premappingCard.expandTitle')\\\"\\n                                       :collapseTitle=\\\"$tc('swag-migration.index.premappingCard.collapseTitle')\\\">\\n\\n                {% block swag_migration_premapping_filled_mapping %}\\n                    <swag-migration-tab-card v-if=\\\"displayFilledPremapping\\\"\\n                                             class=\\\"swag-migration-premapping__filled-tab-card swag-migration-premapping__tab-card\\\"\\n                                             :title=\\\"$tc('swag-migration.index.premappingCard.filledCardTitle')\\\"\\n                                             :items=\\\"filledPremapping\\\">\\n                        <template slot=\\\"items\\\" slot-scope=\\\"slotProps\\\">\\n                            <swag-migration-grid-selection :choices=\\\"slotProps.item.choices\\\"\\n                                                           :mapping=\\\"slotProps.item.mapping\\\"\\n                                                           @input=\\\"validatePremapping\\\">\\n                            </swag-migration-grid-selection>\\n                        </template>\\n                    </swag-migration-tab-card>\\n                {% endblock %}\\n            </swag-migration-expand-div>\\n        {% endblock %}\\n\\n        <sw-card v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-premapping__loading-card\\\"\\n                 position-identifier=\\\"swag-migration-premapping__loading-card\\\">\\n            <div>\\n\\n                {% block swag_migration_premapping_loader %}\\n                    <sw-loader class=\\\"swag-migration-premapping__loader\\\"></sw-loader>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_loading_title %}\\n                    <div class=\\\"swag-migration-premapping__loading-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.loadingTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_loading_caption %}\\n                    <div class=\\\"swag-migration-premapping__loading-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.loadingCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nexport const UI_COMPONENT_INDEX = Object.freeze({\n    WARNING_CONFIRM: -1,\n    DATA_SELECTOR: 0,\n    PREMAPPING: 1,\n    LOADING_SCREEN: 2,\n    MEDIA_SCREEN: 3,\n    RESULT_SUCCESS: 4,\n    PAUSE_SCREEN: 5,\n    TAKEOVER: 6,\n    CONNECTION_LOST: 7,\n});\n\n/**\n * The vuex store for global data handling inside the UI components of the migration module.\n * These are used for preparing and supporting the migration process (which is running in the background)\n * and to display the correct things to the user.\n * @module\n * @package services-settings\n */\nexport default {\n    namespaced: true,\n\n    state: {\n        /**\n         * The current component to display in the migration process. This is very similar to the migration status,\n         * but only represents which component to render at the moment.\n         */\n        componentIndex: UI_COMPONENT_INDEX.DATA_SELECTOR,\n\n        /**\n         * Flag which sets the whole module into a loading state\n         */\n        isLoading: false,\n\n        /**\n         * Flag to set the migration ui into a pause state\n         */\n        isPaused: false,\n\n        /**\n         * Flag to specify that the premapping is valid\n         */\n        isPremappingValid: false,\n\n        /**\n         * The selected data ids that the user wants to migrate.\n         */\n        dataSelectionIds: [],\n\n        /**\n         * The possible data that the user can migrate.\n         */\n        dataSelectionTableData: [],\n\n        /**\n         * The premapping structure, that the user must match.\n         */\n        premapping: [],\n\n        /**\n         * Only the unfilled part of the premapping.\n         */\n        unfilledPremapping: [],\n\n        /**\n         * Only the filled part of the premapping.\n         */\n        filledPremapping: [],\n    },\n\n    mutations: {\n        setComponentIndex(state, newIndex) {\n            state.componentIndex = newIndex;\n        },\n\n        setIsLoading(state, isLoading) {\n            state.isLoading = isLoading;\n        },\n\n        setIsPaused(state, isPaused) {\n            state.isPaused = isPaused;\n        },\n\n        setIsPremappingValid(state, isValid) {\n            state.isPremappingValid = isValid;\n        },\n\n        setDataSelectionIds(state, newIds) {\n            state.dataSelectionIds = newIds;\n        },\n\n        setDataSelectionTableData(state, newTableData) {\n            state.dataSelectionTableData = newTableData;\n        },\n\n        setPremapping(state, newPremapping) {\n            if (newPremapping === undefined && newPremapping.length < 1) {\n                state.unfilledPremapping = [];\n                state.filledPremapping = [];\n                return;\n            }\n\n            const unfilledMapping = [];\n            const filledMapping = [];\n\n            newPremapping.forEach((group) => {\n                const newFilledGroup = {\n                    choices: group.choices,\n                    entity: group.entity,\n                    mapping: [],\n                };\n\n                const newUnfilledGroup = {\n                    choices: group.choices,\n                    entity: group.entity,\n                    mapping: [],\n                };\n\n                group.mapping.forEach((mapping) => {\n                    if (mapping.destinationUuid.length > 0) {\n                        newFilledGroup.mapping.push(mapping);\n                    } else {\n                        newUnfilledGroup.mapping.push(mapping);\n                    }\n                });\n\n                if (newFilledGroup.mapping.length > 0) {\n                    filledMapping.push(newFilledGroup);\n                }\n\n                if (newUnfilledGroup.mapping.length > 0) {\n                    unfilledMapping.push(newUnfilledGroup);\n                }\n            });\n\n            state.unfilledPremapping = unfilledMapping;\n            state.filledPremapping = filledMapping;\n            state.premapping = newPremapping;\n        },\n    },\n\n    getters: {\n        isMigrationAllowed(state) {\n            const tableDataIds = state.dataSelectionTableData.map((data) => {\n                if (data.requiredSelection === false) {\n                    return data.id;\n                }\n\n                return null;\n            });\n            return state.dataSelectionIds.some(id => tableDataIds.includes(id));\n        },\n    },\n};\n","import template from './swag-migration-premapping.html.twig';\nimport { UI_COMPONENT_INDEX } from '../../../../../core/data/migrationUI.store';\nimport './swag-migration-premapping.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-premapping', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            premappingInput: [],\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'runId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'unfilledPremapping',\n            'filledPremapping',\n            'isPremappingValid',\n            'premapping',\n        ]),\n\n        displayUnfilledPremapping() {\n            return this.unfilledPremapping.length > 0;\n        },\n\n        displayFilledPremapping() {\n            return this.filledPremapping.length > 0;\n        },\n    },\n\n    watch: {\n        runId: {\n            immediate: true,\n            handler(newRunId) {\n                if (newRunId.length < 1) {\n                    return;\n                }\n\n                this.fetchPremapping(newRunId);\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swagMigration/ui/setIsPremappingValid', false);\n        },\n\n        fetchPremapping(runId) {\n            this.isLoading = true;\n\n            if (this.premapping !== null && this.premapping.length > 0) {\n                this.$nextTick(() => {\n                    this.notifyPremappingValidWatchers(\n                        this.validatePremapping(false),\n                    );\n                    this.isLoading = false;\n                });\n                return Promise.resolve();\n            }\n\n            return this.migrationService.generatePremapping(runId).then((premapping) => {\n                if (premapping.length === 0) {\n                    State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                    this.migrationWorkerService.startMigration(this.runId).catch(() => {\n                        this.onInvalidMigrationAccessToken();\n                    });\n                } else {\n                    State.commit('swagMigration/ui/setPremapping', premapping);\n                    this.notifyPremappingValidWatchers(\n                        this.validatePremapping(false),\n                    );\n\n                    this.isLoading = false;\n                }\n            });\n        },\n\n        notifyPremappingValidWatchers(isValid) {\n            if (isValid !== this.isPremappingValid) {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n                return;\n            }\n\n            // It is needed to trigger a watcher event here, even if the value does not have been changed.\n            State.commit('swagMigration/ui/setIsPremappingValid', !isValid);\n            this.$nextTick(() => {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n            });\n        },\n\n        validatePremapping(updateStore = true) {\n            const isValid = !this.premapping.some((group) => {\n                return group.mapping.some((mapping) => {\n                    return mapping.destinationUuid === null || mapping.destinationUuid.length === 0;\n                });\n            });\n\n            if (updateStore) {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n            }\n\n            return isValid;\n        },\n    },\n});\n","import template from './swag-migration-progress-bar.html.twig';\nimport './swag-migration-progress-bar.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-progress-bar', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        leftPointDescription: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        rightPointDescription: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        value: {\n            type: Number,\n            default: 0,\n            required: false,\n        },\n        maxValue: {\n            type: Number,\n            default: 100,\n            required: false,\n        },\n    },\n\n    computed: {\n        rightPointClasses() {\n            return {\n                'swag-migration-progress-bar__bubble': true,\n                'swag-migration-progress-bar__bubble--disabled': this.value < this.maxValue,\n                'swag-migration-progress-bar__bubble--active': this.value >= this.maxValue,\n            };\n        },\n    },\n});\n","export default \"{% block swag_migration_progress_bar %}\\n    <div class=\\\"swag-migration-progress-bar\\\">\\n\\n        {% block swag_migration_progress_bar_heading %}\\n            <div class=\\\"swag-migration-progress-bar__heading\\\">\\n                {{ title }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_progress_bar %}\\n            <div class=\\\"swag-migration-progress-bar__progress-bar-container\\\">\\n\\n                {% block swag_migration_progress_bar_left_point %}\\n                    <div class=\\\"swag-migration-progress-bar__point swag-migration-progress-bar__left-point\\\">\\n\\n                        {% block swag_migration_progress_bar_left_bubble %}\\n                            <div class=\\\"swag-migration-progress-bar__bubble swag-migration-progress-bar__bubble--active\\\">\\n                                <sw-icon class=\\\"swag-migration-progress-bar__icon\\\" name=\\\"regular-circle-xs\\\" size=\\\"16px\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_left_description %}\\n                            <div class=\\\"swag-migration-progress-bar__left-description\\\">\\n                                {{ leftPointDescription }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_progress_bar_center_bar %}\\n                    <div class=\\\"swag-migration-progress-bar__center-bar\\\">\\n\\n                        {% block swag_migration_progress_bar_progress_bar %}\\n                            <sw-progress-bar class=\\\"swag-migration-progress-bar__progress-bar\\\" :value=\\\"value\\\" :maxValue=\\\"maxValue\\\"></sw-progress-bar>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_caption %}\\n                            <div class=\\\"swag-migration-progress-bar__caption\\\">\\n                                {{ value }} / {{ maxValue }}\\n                            </div>\\n                        {% endblock%}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_progress_bar_right_point %}\\n                    <div class=\\\"swag-migration-progress-bar__point swag-migration-progress-bar__right-point\\\">\\n\\n                        {% block swag_migration_progress_bar_right_bubble %}\\n                            <div :class=\\\"rightPointClasses\\\">\\n                                <sw-icon class=\\\"swag-migration-progress-bar__icon\\\" name=\\\"regular-checkmark-xs\\\" size=\\\"16px\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_right_description %}\\n                            <div class=\\\"swag-migration-progress-bar__right-description\\\">\\n                                {{ rightPointDescription }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-assistant.html.twig';\nimport './swag-migration-assistant.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-assistant', {\n    template,\n});\n","export default \"{% block swag_migration_assistant %}\\n    <sw-card class=\\\"swag-migration-assistant\\\"\\n             position-identifier=\\\"swag-migration-assistant\\\"\\n             :title=\\\"$tc('swag-migration.index.assistantCard.title')\\\">\\n\\n        {% block swag_migration_assistant_headline %}\\n            <h4 class=\\\"swag-migration-assistant__headline\\\">\\n                {{ $tc('swag-migration.index.assistantCard.headline') }}\\n            </h4>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_connection %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_connection_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"'/swagmigrationassistant/static/img/assistant-connection.svg' | asset\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.connection.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_content %}\\n                    <p class=\\\"swag-migration-assistant__content\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.connection.content') }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_content_link %}\\n                    <div class=\\\"swag-migration-assistant__link\\\">\\n                        <a class=\\\"link\\\" target=\\\"_blank\\\" href=\\\"http://docs.shopware.com/en/migration-en\\\">{{ $tc('swag-migration.index.assistantCard.connection.link') }}</a>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_dataSelection %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_dataSelection_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"'/swagmigrationassistant/static/img/assistant-dataSelection.svg' | asset\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_dataSelection_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.dataSelection.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_dataSelection_content %}\\n                    <p class=\\\"swag-migration-assistant__content\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.dataSelection.content') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_migrationOverview %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_migrationOverview_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"'/swagmigrationassistant/static/img/assistant-migrationOverview.svg' | asset\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_migrationOverview_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.migrationOverview.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_migrationOverview_content %}\\n                    <i18n class=\\\"swag-migration-assistant__content\\\"\\n                          path=\\\"swag-migration.index.assistantCard.migrationOverview.content\\\"\\n                          tag=\\\"p\\\">\\n                        <br place=\\\"linebreak\\\">\\n                    </i18n>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_finish %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_finish_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.finish') }}\\n                    </h5>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-confirm-warning.html.twig';\nimport './swag-migration-confirm-warning.scss';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-confirm-warning', {\n    template,\n\n    data() {\n        return {\n            isCurrencyChecked: false,\n            isLanguageChecked: false,\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n        ]),\n\n        hasDifferentCurrency() {\n            return this.sourceSystemCurrency !== this.targetSystemCurrency;\n        },\n\n        sourceSystemCurrency() {\n            return this.environmentInformation.sourceSystemCurrency;\n        },\n\n        targetSystemCurrency() {\n            return this.environmentInformation.targetSystemCurrency;\n        },\n\n        hasDifferentLanguage() {\n            return this.sourceSystemLanguage !== this.targetSystemLanguage;\n        },\n\n        sourceSystemLanguage() {\n            return this.environmentInformation.sourceSystemLocale;\n        },\n\n        targetSystemLanguage() {\n            return this.environmentInformation.targetSystemLocale;\n        },\n\n        isContinuable() {\n            return (!this.hasDifferentCurrency || this.isCurrencyChecked) &&\n                (!this.hasDifferentLanguage || this.isLanguageChecked);\n        },\n    },\n\n    methods: {\n        onCheckboxValueChanged() {\n            this.$emit('confirmation-change', this.isContinuable);\n        },\n    },\n});\n","export default \"{% block swag_migration_confirm_warning %}\\n    <div class=\\\"swag-migration-confirm-warning\\\">\\n\\n        {% block swag_migration_confirm_warning_card %}\\n            <sw-card\\n                v-if=\\\"hasDifferentCurrency\\\"\\n                class=\\\"swag-migration-confirm-warning\\\"\\n                position-identifier=\\\"swag-migration-confirm-warning\\\"\\n            >\\n\\n                {% block swag_migration_confirm_warning_bubble %}\\n                    <div class=\\\"swag-migration-confirm-warning__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-confirm-warning__bubble-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_title %}\\n                    <h5 class=\\\"swag-migration-confirm-warning__title\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_text %}\\n                    <p class=\\\"swag-migration-confirm-warning__text\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.text', 0, { sourceSystemCurrency, targetSystemCurrency }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_question %}\\n                    <p class=\\\"swag-migration-confirm-warning__question\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.question', 0, { targetSystemCurrency }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_checkbox %}\\n                    <sw-checkbox-field class=\\\"swag-migration-confirm-warning__checkbox\\\"\\n                                       :label=\\\"$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')\\\"\\n                                       v-model=\\\"isCurrencyChecked\\\"\\n                                       @change=\\\"onCheckboxValueChanged\\\">\\n                    </sw-checkbox-field>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_confirm_language_warning_card %}\\n            <sw-card\\n                v-if=\\\"hasDifferentLanguage\\\"\\n                class=\\\"swag-migration-confirm-warning__card\\\"\\n                position-identifier=\\\"swag-migration-confirm-warning__card\\\"\\n            >\\n\\n                {% block swag_migration_confirm_language_warning_bubble %}\\n                    <div class=\\\"swag-migration-confirm-warning__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-confirm-warning__bubble-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_title %}\\n                    <h5 class=\\\"swag-migration-confirm-warning__title\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_text %}\\n                    <p class=\\\"swag-migration-confirm-warning__text\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.text', 0, { sourceSystemLanguage, targetSystemLanguage }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_question %}\\n                    <p class=\\\"swag-migration-confirm-warning__question\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.question', 0, { targetSystemLanguage }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_checkbox %}\\n                    <sw-checkbox-field class=\\\"swag-migration-confirm-warning__checkbox\\\"\\n                                       :label=\\\"$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')\\\"\\n                                       v-model=\\\"isLanguageChecked\\\"\\n                                       @change=\\\"onCheckboxValueChanged\\\">\\n                    </sw-checkbox-field>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-media-process.html.twig';\nimport './swag-migration-media-process.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-media-process', {\n    template,\n});\n","export default \"{% block swag_migration_media_process %}\\n    <sw-card class=\\\"swag-migration-media-process\\\" position-identifier=\\\"swag-migration-media-process\\\">\\n\\n        {% block swag_migration_media_process_content %}\\n            <div class=\\\"swag-migration-media-process__content\\\">\\n\\n                {% block swag_migration_media_process_icon %}\\n                    <div class=\\\"swag-migration-media-process__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-media-process__icon\\\" name=\\\"regular-activity\\\" size=\\\"36px\\\" decorative></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_media_process_title %}\\n                    <div class=\\\"swag-migration-media-process__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.mediaProcessScreen.title') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_media_process_message %}\\n                    <p class=\\\"swag-migration-media-process__message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.mediaProcessScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-tab-card.html.twig';\nimport './swag-migration-tab-card.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @example\n * <swag-migration-tab-card>\n *  <swag-migration-tab-card-item title=\"Item 1\">\n *      My item content 1\n *  </swag-migration-tab-card-item>\n *  <swag-migration-tab-card-item title=\"Item 2\">\n *      My item content 2\n *  </swag-migration-tab-card-item>\n * </swag-migration-tab-card>\n *\n * @package services-settings\n */\nComponent.register('swag-migration-tab-card', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        items: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            selectedNumber: '',\n        };\n    },\n\n    computed: {\n        tabItems() {\n            return this.$refs.swTabsItems;\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.$nextTick(() => {\n                // let the tabs component know that the content may need a scrollbar\n                this.$refs.tabs.checkIfNeedScroll();\n                this.$refs.tabs.addScrollbarOffset();\n\n                // select first tab\n                if (this.tabItems !== undefined && this.tabItems.length > 0) {\n                    this.selectedNumber = this.tabItems[0].name;\n                    this.$refs.tabs.setActiveItem(this.tabItems[0]);\n                }\n            });\n        },\n\n        onNewActiveItem(item) {\n            this.$refs.contentContainer[this.selectedNumber].setActive(false);\n            this.selectedNumber = item.name;\n            this.$refs.contentContainer[this.selectedNumber].setActive(true);\n        },\n\n        getErrorCountForGroupTab(group) {\n            return group.mapping.reduce((currentValue, mapping) => {\n                if (mapping.destinationUuid === null || mapping.destinationUuid.length === 0) {\n                    return currentValue + 1;\n                }\n\n                return currentValue;\n            }, 0);\n        },\n    },\n});\n","export default \"{% block swag_migration_tab_card %}\\n    <div class=\\\"swag-migration-tab-card\\\">\\n        <sw-card class=\\\"sw-card--grid\\\" ref=\\\"card\\\" :title=\\\"title\\\" position-identifier=\\\"swag-migration-tab-card\\\">\\n            <template #tabs>\\n\\n                {% block swag_migration_tab_card_item_tab %}\\n                    <sw-tabs\\n                        :small=\\\"false\\\"\\n                        ref=\\\"tabs\\\"\\n                        @new-item-active=\\\"onNewActiveItem\\\"\\n                        position-identifier=\\\"swag-migration-tab-card-item-tab\\\"\\n                    >\\n                        <sw-tabs-item v-for=\\\"(item, key) in items\\\" :name=\\\"key.toString()\\\" :key=\\\"key.toString()\\\" ref=\\\"swTabsItems\\\">\\n\\n                            {% block swag_migration_tab_card_item_tab_content %}\\n                                <span class=\\\"swag-migration-tab-card__title\\\">\\n                                    {{ $tc(`swag-migration.index.premappingCard.group.${item.entity}`) }}\\n                                </span>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_tab_card_item_tab_invalid_badge %}\\n                                <span v-show=\\\"item.errorBadgeNumber\\\" class=\\\"swag-migration-tab-card__invalid-badge\\\">\\n                                    {{ getErrorCountForGroupTab(item) }}\\n                                </span>\\n                            {% endblock %}\\n                        </sw-tabs-item>\\n                    </sw-tabs>\\n                {% endblock %}\\n            </template>\\n            <template v-for=\\\"item in items\\\">\\n                    <swag-migration-tab-card-item ref=\\\"contentContainer\\\">\\n                        <slot name=\\\"items\\\" :item=\\\"item\\\">\\n                        </slot>\\n                    </swag-migration-tab-card-item>\\n            </template>\\n\\n            <slot>\\n                {% block swag_migration_tab_card_slot %}{% endblock %}\\n            </slot>\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-tab-card-item.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-tab-card-item', {\n    template,\n\n    data() {\n        return {\n            active: false,\n        };\n    },\n\n    methods: {\n        setActive(active) {\n            this.active = active;\n        },\n    },\n});\n","export default \"{% block swag_migration_tab_card_item %}\\n    <div class=\\\"swag-migration-tab-card-item\\\">\\n        <div v-show=\\\"active\\\">\\n            <slot>\\n                {% block swag_migration_tab_card_item_slot %}{% endblock %}\\n            </slot>\\n        </div>\\n    </div>\\n{% endblock %}\";","export default \"{% block swag_migration_grid_selection %}\\n    <div class=\\\"swag-migration-grid-selection\\\">\\n\\n        {% block swag_migration_grid_selection_grid %}\\n            <sw-grid ref=\\\"tableDataGrid\\\"\\n                     :items=\\\"items\\\"\\n                     :selectable=\\\"false\\\">\\n                <template #columns=\\\"{ item }\\\">\\n\\n                    {% block swag_migration_grid_selection_grid_column_description %}\\n                        <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.premappingCard.previousTitle')\\\">\\n                            {{ item.description }}\\n                        </sw-grid-column>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_grid_selection_grid_column_choice %}\\n                        <sw-grid-column class=\\\"swag-migration-grid-selection__choice-column\\\"\\n                                        flex=\\\"1fr\\\"\\n                                        :label=\\\"$tc('swag-migration.index.premappingCard.newAssignmentTitle')\\\">\\n\\n                            {% block swag_migration_grid_selection_grid_column_choice_field %}\\n                                <sw-select-field v-model=\\\"item.destinationUuid\\\"\\n                                                 class=\\\"swag-migration-grid-selection__choice-field\\\"\\n                                                 :class=\\\"getClassesAfterValidation(item)\\\"\\n                                                 :placeholder=\\\"$tc('swag-migration.index.premappingCard.placeholder')\\\"\\n                                                 @change=\\\"onInput\\\">\\n                                    <option v-for=\\\"choice in choices\\\" :key=\\\"choice.uuid\\\" :value=\\\"choice.uuid\\\">\\n                                        {{ choice.description }}\\n                                    </option>\\n                                </sw-select-field>\\n                            {% endblock %}\\n                        </sw-grid-column>\\n                    {% endblock %}\\n                </template>\\n\\n                {% block swag_migration_grid_selection_grid_pagination %}\\n                    <template #pagination>\\n                        <sw-pagination\\n                                :page=\\\"page\\\"\\n                                :limit=\\\"limit\\\"\\n                                :total=\\\"total\\\"\\n                                :total-visible=\\\"7\\\"\\n                                :steps=\\\"paginationSteps\\\"\\n                                @page-change=\\\"onPageChange\\\">\\n                        </sw-pagination>\\n                    </template>\\n                {% endblock %}\\n            </sw-grid>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-grid-selection.html.twig';\nimport './swag-migration-grid-selection.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-grid-selection', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        choices: {\n            type: Array,\n            required: true,\n        },\n        mapping: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            items: [],\n            disableRouteParams: true,\n            limit: 10,\n            paginationSteps: [5, 10, 15, 20, 25, 30],\n        };\n    },\n\n    methods: {\n        getList() {\n            this.total = this.mapping.length;\n            const start = (this.page - 1) * this.limit;\n            const end = Math.min(start + this.limit, this.total);\n            this.items = [];\n\n            // Copy the object references into the display items array (for pagination). Note: Array.slice dont work\n            for (let i = start; i < end; i += 1) {\n                this.items.push(this.mapping[i]);\n            }\n\n            return this.items;\n        },\n\n        onInput() {\n            this.$emit('input');\n        },\n\n        getClassesAfterValidation(item) {\n            const hasError = item.destinationUuid === null || item.destinationUuid.length === 0;\n            return { 'has--error': hasError };\n        },\n    },\n});\n","import template from './swag-migration-expand-div.html.twig';\nimport './swag-migration-expand-div.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-expand-div', {\n    template,\n\n    props: {\n        expandTitle: {\n            type: String,\n            default: '',\n            required: false,\n        },\n\n        collapseTitle: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    data() {\n        return {\n            isExpanded: false,\n        };\n    },\n\n    methods: {\n        onClick() {\n            this.isExpanded = !this.isExpanded;\n        },\n    },\n});\n","export default \"{% block swag_migration_expand_div %}\\n    <div class=\\\"swag-migration-expand-div\\\">\\n        <div class=\\\"swag-migration-expand-div__title\\\">\\n            <div class=\\\"swag-migration-expand-div__link\\\"\\n                 @click=\\\"onClick\\\">\\n                <div v-if=\\\"isExpanded\\\">\\n                    {{ expandTitle }}\\n                    <sw-icon class=\\\"swag-migration-expand-div__icon\\\"\\n                             name=\\\"regular-chevron-circle-up\\\"\\n                             size=\\\"16px\\\">\\n                    </sw-icon>\\n                </div>\\n                <div v-else>\\n                    {{ collapseTitle }}\\n                    <sw-icon class=\\\"swag-migration-expand-div__icon\\\"\\n                             name=\\\"regular-chevron-circle-down\\\"\\n                             size=\\\"16px\\\">\\n                    </sw-icon>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div v-if=\\\"isExpanded\\\" class=\\\"swag-migration-expand-div__slot\\\">\\n            <slot>\\n\\n                {% block swag_migration_expand_div_slot %}\\n                {% endblock %}\\n            </slot>\\n        </div>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-shop-avatar.html.twig';\nimport './swag-migration-shop-avatar.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-shop-avatar', {\n    template,\n\n    props: {\n        size: {\n            type: String,\n            required: true,\n        },\n        color: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            fontSize: 16,\n            lineHeight: 16,\n        };\n    },\n\n    computed: {\n        avatarStyle() {\n            return {\n                width: this.size,\n                height: this.size,\n                'background-color': this.color,\n                'font-size': `${this.fontSize}px`,\n                'line-height': `${this.lineHeight}px`,\n            };\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.generateAvatarInitialsSize();\n        },\n\n        generateAvatarInitialsSize() {\n            const avatarSize = this.$refs.shopAvatar.offsetHeight;\n\n            this.fontSize = Math.round(avatarSize * 0.4);\n            this.lineHeight = Math.round(avatarSize * 0.98);\n        },\n    },\n});\n","export default \"{% block swag_migration_shop_avatar %}\\n    <span class=\\\"swag-migration-shop-avatar\\\"\\n          :style=\\\"avatarStyle\\\"\\n          role=\\\"img\\\"\\n          ref=\\\"shopAvatar\\\">\\n        <slot></slot>\\n    </span>\\n{% endblock %}\";","import template from './swag-migration-settings-icon.html.twig';\nimport './swag-migration-settings-icon.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-settings-icon', {\n    template,\n});\n","export default \"{% block swag_migration_settings_icon %}\\n    <img class=\\\"swag-migration-settings_icon__img\\\" :src=\\\"'/swagmigrationassistant/static/img/migration-assistant-plugin.svg' | asset\\\">\\n{% endblock %}\\n\";","import template from './swag-migration-dashboard-card.html.twig';\nimport './swag-migration-dashboard-card.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-dashboard-card', {\n    template,\n});\n","export default \"{% block swag_migration_dashboard_card %}\\n    <sw-card class=\\\"swag-migration-dashboard-card\\\" position-identifier=\\\"swag-migration-dashboard-card\\\">\\n\\n        {% block swag_migration_dashboard_card_wrapper %}\\n            {%  block swag_migration_dashboard_card_title %}\\n                <template #title>\\n                    <span class=\\\"swag-migration-dashboard-card__title\\\">\\n                        {{ $tc('swag-migration.dashboard.title') }}\\n                    </span>\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_migration_dashboard_card_container %}\\n                <sw-container class=\\\"swag-migration-shop-information\\\" rows=\\\"auto auto\\\">\\n                    {% block fuuuu %}\\n                    {% endblock %}\\n\\n                    {%  block swag_migration_dashboard_card_content %}\\n                        <div class=\\\"swag-migration-dashboard-card__content\\\">\\n\\n                            {%  block swag_migration_dashboard_card_wrapper %}\\n                                <div class=\\\"swag-migration-dashboard-card__wrapper\\\">\\n\\n                                    {%  block swag_migration_dashboard_card_left_content %}\\n                                        <div class=\\\"swag-migration-dashboard-card__left-content\\\">\\n\\n                                            {%  block swag_migration_dashboard_card_headline %}\\n                                                <div class=\\\"swag-migration-dashboard-card__headline\\\">\\n                                                    {{ $tc('swag-migration.dashboard.headline') }}\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            {%  block swag_migration_dashboard_card_information %}\\n                                                <div class=\\\"swag-migration-dashboard-card__information\\\">\\n                                                    {{ $tc('swag-migration.dashboard.information') }}\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            {%  block swag_migration_dashboard_card_button %}\\n                                                <sw-button variant=\\\"primary\\\" :routerLink=\\\"{ name: 'swag.migration.index.main'}\\\">\\n                                                    {{ $tc('swag-migration.dashboard.button') }}\\n                                                </sw-button>\\n                                            {%  endblock %}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {%  block swag_migration_dashboard_card_right_content %}\\n                                        <div class=\\\"swag-migration-dashboard-card__right-content\\\">\\n                                            <img :src=\\\"'/swagmigrationassistant/static/img/wizard-introduction.svg' | asset\\\">\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </sw-container>\\n            {% endblock %}\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-index.html.twig';\n\nconst { Component } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-index', {\n    template,\n\n    inject: {\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    data() {\n        return {\n            storesInitializing: true,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'isMigrating',\n            'environmentInformation',\n            'connectionId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isLoading',\n            'dataSelectionTableData',\n        ]),\n\n        ...mapGetters({\n            storeIsMigrationAllowed: 'swagMigration/ui/isMigrationAllowed',\n        }),\n\n        isMigrationAllowed() {\n            return this.storeIsMigrationAllowed &&\n                this.environmentInformation.migrationDisabled === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonDisabled() {\n            return this.isLoading ||\n                this.isMigrating ||\n                !this.isMigrationAllowed;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.connectionId === null\n                || Object.keys(this.environmentInformation).length === 0\n            ) {\n                return this.migrationProcessStoreInitService.initProcessStore().then(() => {\n                    return this.migrationUiStoreInitService.initUiStore();\n                }).catch(() => {}).finally(() => {\n                    this.storesInitializing = false;\n                });\n            }\n\n            if (this.dataSelectionTableData.length === 0) {\n                return this.migrationUiStoreInitService.initUiStore().then(() => {\n                    this.storesInitializing = false;\n                }).catch(() => {\n                    this.storesInitializing = false;\n                });\n            }\n\n            this.storesInitializing = false;\n            return Promise.resolve();\n        },\n\n        onMigrate() {\n            if (this.$refs.contentComponent.onMigrate !== undefined) {\n                this.$refs.contentComponent.onMigrate();\n            } else {\n                this.$nextTick(() => {\n                    this.$router.push({ name: 'swag.migration.index.main', params: { startMigration: true } });\n                });\n            }\n        },\n\n        /**\n         * Calls methods on the child router view component (contentComponent) dynamically\n         * if existing. This is used to trigger some method on the child via action button.\n         *\n         * @param methodName\n         */\n        onActionButtonClick(methodName) {\n            if (this.$refs.contentComponent[methodName] !== undefined) {\n                this.$refs.contentComponent[methodName]();\n            }\n        },\n    },\n});\n","export default \"{% block swag_migration_index %}\\n    <sw-page class=\\\"swag-migration-index\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template v-if=\\\"!storesInitializing\\\" #smart-bar-actions>\\n                <sw-button variant=\\\"primary\\\" @click=\\\"onMigrate\\\" :disabled=\\\"migrateButtonDisabled\\\">\\n                    {{ $tc('swag-migration.index.migrateButton') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_content %}\\n            <template #content>\\n                <sw-card-view v-if=\\\"!storesInitializing\\\">\\n\\n                    {% block swag_migration_index_tabs %}\\n                        <sw-tabs class=\\\"swag-migration-index-tabs\\\" position-identifier=\\\"swag-migration-index-tabs\\\">\\n\\n                            {% block swag_migration_index_tab_main %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.main' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabMain')\\\">\\n                                    {{ $tc('swag-migration.general.tabMain') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_index_tab_data_selector %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.dataSelector' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabDataSelector')\\\">\\n                                    {{ $tc('swag-migration.general.tabDataSelector') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_index_tab_history %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.history' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabHistory')\\\">\\n                                    {{ $tc('swag-migration.general.tabHistory') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n                        </sw-tabs>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_index_content_view %}\\n                        <router-view ref=\\\"contentComponent\\\">\\n                        </router-view>\\n                    {% endblock %}\\n                </sw-card-view>\\n\\n                {% block swag_migration_index_loader_content %}\\n                    <sw-loader v-if=\\\"storesInitializing\\\"></sw-loader>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './swag-migration-empty-screen.html.twig';\nimport './swag-migration-empty-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-empty-screen', {\n    template,\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    methods: {\n        onConnectClick() {\n            this.$router.push({name: 'swag.migration.wizard.introduction'});\n        },\n    },\n});\n","export default \"{% block swag_migration_empty_screen %}\\n    <sw-page class=\\\"swag-migration-empty-screen\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n                <sw-button variant=\\\"primary\\\" disabled>\\n                    {{ $tc('swag-migration.index.migrateButton') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_content %}\\n            <template #content>\\n                <sw-empty-state :title=\\\"$tc('swag-migration.emptyScreen.title')\\\">\\n                    <i18n class=\\\"swag-migration-empty-screen__description\\\"\\n                          path=\\\"swag-migration.emptyScreen.description\\\"\\n                          tag=\\\"p\\\">\\n                        <br place=\\\"linebreak\\\">\\n                        <a class=\\\"link\\\"\\n                           place=\\\"link\\\"\\n                           href=\\\"https://docs.shopware.com/en/migration-en\\\"\\n                           target=\\\"_blank\\\">\\n                            {{ $tc('swag-migration.emptyScreen.link') }}\\n                        </a>\\n                    </i18n>\\n                    <sw-button variant=\\\"primary\\\"\\n                               @click=\\\"onConnectClick\\\">\\n                        {{ $tc('swag-migration.emptyScreen.connectButton') }}\\n                    </sw-button>\\n                </sw-empty-state>\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './swag-migration-main-page.html.twig';\nimport './swag-migration-main-page.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-main-page', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n            'connectionId',\n            'isMigrating',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isLoading',\n        ]),\n\n        displayWarnings() {\n            return this.environmentInformation.displayWarnings;\n        },\n\n        connectionEstablished() {\n            return this.environmentInformation !== undefined &&\n                (\n                    this.environmentInformation.requestStatus.isWarning === true ||\n                    (\n                        this.environmentInformation.requestStatus.isWarning === false &&\n                        this.environmentInformation.requestStatus.code === ''\n                    )\n                );\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            if (this.connectionId === null) {\n                this.$router.push({ name: 'swag.migration.wizard.introduction' });\n                return;\n            }\n\n            if (Object.keys(this.environmentInformation).length < 1) {\n                this.$router.push({ name: 'swag.migration.emptyScreen' });\n                return;\n            }\n\n            if (this.isMigrating) {\n                this.$router.push({ name: 'swag.migration.processScreen' });\n                return;\n            }\n\n            let isTakeoverForbidden = false;\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                isTakeoverForbidden = isRunning;\n            });\n\n            let isMigrationRunning = isTakeoverForbidden;\n            if (!isTakeoverForbidden) {\n                await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    isMigrationRunning = runState.isMigrationRunning;\n                });\n            }\n\n            if (isMigrationRunning) {\n                this.$router.push({ name: 'swag.migration.processScreen' });\n                return;\n            }\n\n            if (this.$route.params.startMigration) {\n                await this.onMigrate();\n            }\n\n            State.commit('swagMigration/ui/setIsLoading', false);\n        },\n\n        async onMigrate() {\n            this.$nextTick().then(() => {\n                State.commit('swagMigration/process/setIsMigrating', true);\n                /**\n                 * reset the premapping because it does not get fetched again if not empty\n                 * this will ensure that the user can navigate outside of the module and keep the premapping\n                 */\n                State.commit('swagMigration/ui/setPremapping', []);\n\n                // navigate to process screen\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.$router.push({ name: 'swag.migration.processScreen', params: { startMigration: true } });\n            });\n        },\n    },\n});\n","export default \"{% block swag_migration_index_main_page %}\\n    <div class=\\\"swag-migration-index-main-page\\\">\\n\\n        {% block swag_migration_index_main_page_content %}\\n            <div v-if=\\\"!isLoading\\\">\\n\\n                {% block swag_migration_index_main_page_warnings %}\\n                    <div class=\\\"swag-migration-index-main-page__warnings\\\">\\n                        <sw-alert v-for=\\\"warning in displayWarnings\\\"\\n                                  class=\\\"swag-migration-index-main-page__warning\\\"\\n                                  :key=\\\"warning.snippetKey\\\"\\n                                  variant=\\\"warning\\\">\\n                            {{ $tc(warning.snippetKey, warning.pluralizationCount, warning.snippetArguments) }}\\n                        </sw-alert>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_shopInformation %}\\n                    <swag-migration-shop-information :connected=\\\"connectionEstablished\\\">\\n                    </swag-migration-shop-information>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_main_page_assistant %}\\n            <swag-migration-assistant v-if=\\\"!isLoading\\\"></swag-migration-assistant>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_main_page_loader %}\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","export default \"{% block swag_migration_history %}\\n    <sw-card class=\\\"swag-migration-history\\\"\\n             :isLoading=\\\"isLoading\\\"\\n             :large=\\\"true\\\"\\n             position-identifier=\\\"swag-migration-history\\\">\\n        <template #grid>\\n\\n            {% block swag_migration_history_grid %}\\n                <sw-data-grid v-if=\\\"migrationRuns.length > 0\\\"\\n                              identifier=\\\"swag-migration-history\\\"\\n                              :dataSource=\\\"migrationRuns\\\"\\n                              :columns=\\\"migrationColumns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"true\\\"\\n                              :allowColumnEdit=\\\"true\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_grid_column_status %}\\n                        <template #column-status=\\\"{ item }\\\">\\n                            <sw-icon v-if=\\\"item.status === 'finished'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--finished\\\"\\n                                     name=\\\"regular-checkmark\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                            <sw-icon v-else-if=\\\"item.status === 'aborted'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--aborted\\\"\\n                                     name=\\\"regular-times\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                            <sw-icon v-else-if=\\\"item.status === 'running'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--loading\\\"\\n                                     name=\\\"regular-circle\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_profile %}\\n                        <template #column-connection.profile=\\\"{ item }\\\">\\n                            {{ item.connection.profileName }} /\\n                            {{ item.connection.gatewayName }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_createdAt %}\\n                        <template #column-createdAt=\\\"{ item }\\\">\\n                            {{ item.createdAt | date(migrationDateOptions) }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_sourceSystemName %}\\n                        <template #column-environmentInformation.sourceSystemName=\\\"{ item }\\\">\\n                            {{ item.environmentInformation.sourceSystemName }}\\n                            {{ item.environmentInformation.sourceSystemVersion }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_selectedData %}\\n                        <template #column-progress=\\\"{ item }\\\">\\n                            <swag-migration-history-selected-data :entityGroups=\\\"item.progress\\\">\\n                            </swag-migration-history-selected-data>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_actions %}\\n                        <template #actions=\\\"{ item }\\\">\\n                            <sw-context-menu-item :routerLink=\\\"{ name: 'swag.migration.index.history.detail', params:{ id:item.id } }\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.details') }}\\n                            </sw-context-menu-item>\\n                            <sw-context-menu-item @click=\\\"onContextDownloadLogFile(item.id)\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.downloadLogs') }}\\n                            </sw-context-menu-item>\\n                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onContextClearRunClicked(item.id)\\\" :disabled=\\\"isMediaProcessing\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.clearLogs') }}\\n                            </sw-context-menu-item>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_pagination %}\\n                        <template #pagination>\\n                                <sw-pagination :page=\\\"page\\\"\\n                                               :limit=\\\"limit\\\"\\n                                               :total=\\\"total\\\"\\n                                               :total-visible=\\\"7\\\"\\n                                               @page-change=\\\"onPageChange\\\">\\n                                </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n\\n                </sw-data-grid>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_no_data %}\\n                <div v-if=\\\"migrationRuns.length === 0\\\" class=\\\"swag-migration-history__no-data\\\">\\n                    <p class=\\\"swag-migration-history__no-data-label\\\">\\n                        {{ $tc('swag-migration.history.noData') }}\\n                    </p>\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_router_view %}\\n                <router-view></router-view>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_log_download_form %}\\n                <form class=\\\"swag-migration-history-detail-errors__download-form\\\"\\n                      ref=\\\"downloadLogsOfRunForm\\\"\\n                      :action=\\\"logDownloadEndpoint\\\"\\n                      method=\\\"POST\\\">\\n                    <input type=\\\"hidden\\\"\\n                           name=\\\"runUuid\\\"\\n                           :value=\\\"runIdForLogDownload\\\">\\n                </form>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_run_clear_confirm_modal %}\\n                <sw-modal v-if=\\\"showRunClearConfirmModal\\\"\\n                          class=\\\"swag-migration-history__run-clear-confirm-modal\\\"\\n                          :title=\\\"$tc('swag-migration.history.clearRunDialog.title')\\\"\\n                          :isLoading=\\\"runClearConfirmModalIsLoading\\\"\\n                          size=\\\"460px\\\"\\n                          @modal-close=\\\"showRunClearConfirmModal = false\\\">\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_content %}\\n                        <p class=\\\"swag-migration-history__run-clear-confirm-modal-content\\\">\\n                            {{ $tc('swag-migration.history.clearRunDialog.content') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_content_hint %}\\n                        <p class=\\\"swag-migration-history__run-clear-confirm-modal-content-hint\\\">\\n                            {{ $tc('swag-migration.history.clearRunDialog.contentHint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_history_run_clear_confirm_modal_abort %}\\n                                <sw-button size=\\\"small\\\"\\n                                           :disabled=\\\"runClearConfirmModalIsLoading\\\"\\n                                           @click=\\\"showRunClearConfirmModal = false\\\">\\n                                    {{ $tc('global.default.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_run_clear_confirm_modal_confirm %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"runClearConfirmModalIsLoading\\\"\\n                                           @click=\\\"onClearRunConfirmed\\\">\\n                                    {{ $tc('global.default.delete') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                        </template>\\n                    {% endblock %}\\n\\n                </sw-modal>\\n            {% endblock %}\\n\\n        </template>\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-history.html.twig';\nimport './swag-migration-history.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history', {\n    template,\n\n    inject: {\n        repositoryFactory: 'repositoryFactory',\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            migrationRuns: [],\n            migrationDateOptions: {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            },\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            oldParams: {},\n            context: Shopware.Context.api,\n            logDownloadEndpoint: '',\n            runIdForLogDownload: '',\n            runIdForRunClear: '',\n            showRunClearConfirmModal: false,\n            runClearConfirmModalIsLoading: false,\n            isMediaProcessing: true,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        migrationColumns() {\n            return this.getMigrationColumns();\n        },\n    },\n\n    created() {\n        this.migrationService.isMediaProcessing().then((response) => {\n            this.isMediaProcessing = response.data;\n        });\n        this.logDownloadEndpoint = '/api/_action/' +\n            `${this.migrationService.getApiBasePath()}/download-logs-of-run`;\n    },\n\n    methods: {\n        getMigrationColumns() {\n            return [\n                {\n                    property: 'connection.name',\n                    dataIndex: 'connection.name',\n                    label: this.$tc('swag-migration.history.connectionName'),\n                    primary: true,\n                    allowResize: true,\n                },\n                {\n                    property: 'environmentInformation.sourceSystemDomain',\n                    dataIndex: 'environmentInformation.sourceSystemDomain',\n                    label: this.$tc('swag-migration.history.shopDomain'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'environmentInformation.sourceSystemName',\n                    dataIndex: 'environmentInformation.sourceSystemName',\n                    label: this.$tc('swag-migration.history.shopSystem'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'connection.profile',\n                    dataIndex: 'connection.profileName',\n                    label: this.$tc('swag-migration.history.profileAndGateway'),\n                    allowResize: true,\n                },\n                {\n                    property: 'status',\n                    dataIndex: 'status',\n                    label: this.$tc('swag-migration.history.status'),\n                    align: 'center',\n                    allowResize: true,\n                },\n                {\n                    property: 'progress',\n                    dataIndex: 'progress',\n                    label: this.$tc('swag-migration.history.selectedData'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'createdAt',\n                    dataIndex: 'createdAt',\n                    label: this.$tc('swag-migration.history.importDateTime'),\n                    align: 'right',\n                    allowResize: true,\n                },\n            ];\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const params = this.normalizeListingParams(\n                this.getMainListingParams(),\n            );\n\n            if (JSON.stringify(this.oldParams) === JSON.stringify(params)) {\n                // Do not request the data again if the parameters don't change.\n                // For example if the detail window (child route) is opened.\n                this.isLoading = false;\n                return Promise.resolve(this.migrationRuns);\n            }\n\n            this.oldParams = params;\n            const criteria = new Criteria(params.page, params.limit);\n            criteria.addSorting(Criteria.sort(params.sortBy, params.sortDirection, params.naturalSorting));\n\n            return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n                this.total = runs.total;\n                this.migrationRuns = runs;\n                this.isLoading = false;\n\n                return this.migrationRuns;\n            });\n        },\n\n        /**\n         * This will convert string values to int values in the param object.\n         * It is needed because Vue Routers '$router.go(-1)' method will mix up\n         * the types of the original params object for integers to strings.\n         *\n         * @param {Object} params\n         * @returns {Object}\n         */\n        normalizeListingParams(params) {\n            params.limit = parseInt(params.limit, 10);\n            params.page = parseInt(params.page, 10);\n\n            return params;\n        },\n\n        onMigrateButtonClick() {\n            this.$router.push({ name: 'swag.migration.index.main', params: { startMigration: true } });\n        },\n\n        onContextDownloadLogFile(runId) {\n            this.runIdForLogDownload = runId;\n            this.$nextTick(() => {\n                this.$refs.downloadLogsOfRunForm.submit();\n            });\n        },\n\n        clearDataOfRun(runId) {\n            this.runClearConfirmModalIsLoading = true;\n            return this.migrationService.clearDataOfRun(runId).then(() => {\n                this.showRunClearConfirmModal = false;\n                this.runClearConfirmModalIsLoading = false;\n                this.$router.go();\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message'),\n                    growl: true,\n                });\n            });\n        },\n\n        onContextClearRunClicked(runId) {\n            this.runIdForRunClear = runId;\n            this.showRunClearConfirmModal = true;\n        },\n\n        onClearRunConfirmed() {\n            this.clearDataOfRun(this.runIdForRunClear);\n        },\n    },\n});\n","export default \"{% block swag_migration_history_detail %}\\n    <div class=\\\"swag-migration-history-detail\\\">\\n        <sw-modal v-if=\\\"showModal\\\"\\n                  class=\\\"swag-migration-history-detail__modal\\\"\\n                  size=\\\"800px\\\"\\n                  :title=\\\"$tc('swag-migration.history.detailPage.title')\\\"\\n                  :isLoading=\\\"isLoading\\\"\\n                  @modal-close=\\\"onCloseModal\\\">\\n\\n            {% block swag_migration_history_detail_modal_content %}\\n                <div v-if=\\\"isLoading\\\"\\n                     class=\\\"swag-migration-history-detail__loading-placeholder\\\">\\n                </div>\\n                <div v-if=\\\"!isLoading\\\"\\n                     class=\\\"swag-migration-history-detail__content\\\">\\n\\n                    {% block swag_migration_history_detail_header %}\\n                        <div class=\\\"swag-migration-history-detail__header\\\">\\n\\n                            {% block swag_migration_history_detail_connectin_avatar %}\\n                                <template v-if=\\\"profileIcon === null || profileIcon === ''\\\">\\n                                    <swag-migration-shop-avatar class=\\\"swag-migration-shop-information__connection-avatar\\\"\\n                                                                color=\\\"#189EFF\\\"\\n                                                                size=\\\"80px\\\">\\n                                        {{ shopFirstLetter }}\\n                                    </swag-migration-shop-avatar>\\n                                </template>\\n\\n                                <template v-else>\\n                                    <img class=\\\"swag-migration-shop-information__profile-avatar\\\"\\n                                         :src=\\\"profileIcon | asset\\\"\\n                                         size=\\\"80px\\\">\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_connection_info %}\\n                                <div class=\\\"swag-migration-history-detail__connection-info\\\">\\n\\n                                    {% block swag_migration_history_detail_shop_system %}\\n                                        <div class=\\\"swag-migration-history-detail__connection-name\\\">\\n                                            {{ connectionName }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_shop_domain %}\\n                                        <div v-if=\\\"shopUrl !== ''\\\" class=\\\"swag-migration-history-detail__shop-domain\\\">\\n                                                        <span class=\\\"swag-migration-history-detail__shop-domain-prefix\\\"\\n                                                              :class=\\\"shopUrlPrefixClass\\\">\\n                                                            <sw-icon v-if=\\\"sslActive\\\"\\n                                                                     class=\\\"swag-migration-history-detail__shop-domain-prefix-icon\\\"\\n                                                                     name=\\\"regular-lock\\\"\\n                                                                     size=\\\"12px\\\">\\n                                                            </sw-icon>\\n                                                            <sw-icon v-else\\n                                                                     class=\\\"swag-migration-history-detail__shop-domain-prefix-icon\\\"\\n                                                                     name=\\\"regular-lock-open-s\\\"\\n                                                                     size=\\\"12px\\\">\\n                                                            </sw-icon>\\n                                                            {{ shopUrlPrefix }}</span>{{ shopUrl }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_profile %}\\n                                        <div class=\\\"swag-migration-history-detail__profile\\\">\\n                                            {{ profileName }} / {{ gatewayName }}\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_run_info %}\\n                                <div class=\\\"swag-migration-history-detail__run-info\\\">\\n                                    <div class=\\\"swag-migration-history-detail__run-timestamp-label\\\">\\n                                        {{ $tc('swag-migration.history.detailPage.timestamp') }}\\n                                    </div>\\n                                    <div class=\\\"swag-migration-history-detail__run-timestamp-value\\\">\\n                                        {{ migrationRun.createdAt | date(migrationDateOptions) }}\\n                                    </div>\\n\\n                                    <div class=\\\"swag-migration-history-detail__run-status-label\\\">\\n                                        {{ $tc('swag-migration.history.detailPage.runStatus') }}\\n                                    </div>\\n                                    <div class=\\\"swag-migration-history-detail__run-status-value\\\" :class=\\\"runStatusClasses\\\">\\n                                        {{ $tc(runStatusSnippet) }}\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_body %}\\n                        <div class=\\\"swag-migration-history-detail__body\\\">\\n\\n                            {% block swag_migration_history_detail_body_tabs %}\\n                                <sw-tabs\\n                                    ref=\\\"tabReference\\\"\\n                                    @new-item-active=\\\"newActiveTabItem\\\"\\n                                    position-identifier=\\\"swag-migration-history-detail-body-tabs\\\"\\n                                >\\n\\n                                    {% block swag_migration_history_detail_body_tabs_data %}\\n                                        <sw-tabs-item name=\\\"data\\\" ref=\\\"dataTabItem\\\">\\n                                            {{ $tc('swag-migration.history.detailPage.data') }}\\n                                        </sw-tabs-item>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_body_tabs_errors %}\\n                                        <sw-tabs-item name=\\\"errors\\\" ref=\\\"errorsTabItem\\\">\\n                                            {{ $tc('swag-migration.history.detailPage.errors') }}\\n                                        </sw-tabs-item>\\n                                    {% endblock %}\\n                                </sw-tabs>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_body_data %}\\n                                <swag-migration-history-detail-data v-show=\\\"currentTab === 'data'\\\"\\n                                                                    :migrationRun=\\\"migrationRun\\\">\\n                                </swag-migration-history-detail-data>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_body_errors %}\\n                                <swag-migration-history-detail-errors v-show=\\\"currentTab === 'errors'\\\"\\n                                                                      :migrationRun=\\\"migrationRun\\\">\\n                                </swag-migration-history-detail-errors>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_footer %}\\n                <template #modal-footer>\\n                    <sw-button size=\\\"small\\\" @click=\\\"onCloseModal\\\">\\n                        {{ $tc('swag-migration.history.detailPage.close') }}\\n                    </sw-button>\\n                </template>\\n            {% endblock %}\\n        </sw-modal>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-history-detail.html.twig';\nimport './swag-migration-history-detail.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    data() {\n        return {\n            runId: '',\n            migrationRun: {},\n            showModal: true,\n            isLoading: true,\n            migrationDateOptions: {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            },\n            currentTab: 'data',\n            context: Shopware.Context.api,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        shopFirstLetter() {\n            return this.migrationRun.environmentInformation.sourceSystemName === undefined ? 'S' :\n                this.migrationRun.environmentInformation.sourceSystemName[0];\n        },\n\n        profileIcon() {\n            return this.migrationRun.connection === null ||\n                this.migrationRun.connection.profile === undefined ||\n                this.migrationRun.connection.profile.icon === undefined ? null : this.migrationRun.connection.profile.icon;\n        },\n\n        connectionName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.name;\n        },\n\n        shopUrl() {\n            return this.migrationRun.environmentInformation.sourceSystemDomain === undefined ? '' :\n                this.migrationRun.environmentInformation.sourceSystemDomain.replace(/^\\s*https?:\\/\\//, '');\n        },\n\n        shopUrlPrefix() {\n            if (this.migrationRun.environmentInformation.sourceSystemDomain === undefined) {\n                return '';\n            }\n\n            const match = this.migrationRun.environmentInformation.sourceSystemDomain.match(/^\\s*https?:\\/\\//);\n            if (match === null) {\n                return '';\n            }\n\n            return match[0];\n        },\n\n        sslActive() {\n            return (this.shopUrlPrefix === 'https://');\n        },\n\n        shopUrlPrefixClass() {\n            return this.sslActive ? 'swag-migration-shop-information__shop-domain-prefix--is-ssl' : '';\n        },\n\n        profileName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.profileName;\n        },\n\n        gatewayName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.gatewayName;\n        },\n\n        runStatusSnippet() {\n            return this.migrationRun.status === null ? '' :\n                `swag-migration.history.detailPage.status.${this.migrationRun.status}`;\n        },\n\n        runStatusClasses() {\n            return this.migrationRun.status === null ? '' :\n                `swag-migration-history-detail__run-status-value--${this.migrationRun.status}`;\n        },\n    },\n\n    created() {\n        if (!this.$route.params.id) {\n            this.isLoading = false;\n            this.onCloseModal();\n            return Promise.resolve();\n        }\n\n        this.runId = this.$route.params.id;\n        const criteria = new Criteria(1, 1);\n        criteria.addFilter(Criteria.equals('id', this.runId));\n\n        return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n            if (runs.length < 1) {\n                this.isLoading = false;\n                this.onCloseModal();\n                return Promise.resolve();\n            }\n\n            this.migrationRun = runs.first();\n\n            return this.migrationService.getProfileInformation(this.migrationRun.connection.profileName, this.migrationRun.connection.gatewayName).then((profileInformation) => {\n                this.migrationRun.connection.profile = profileInformation.profile;\n\n                this.isLoading = false;\n                this.$nextTick(() => {\n                    this.$refs.tabReference.setActiveItem(this.$refs.dataTabItem);\n                });\n            });\n        }).catch(() => {\n            this.isLoading = false;\n            this.onCloseModal();\n        });\n    },\n\n    methods: {\n        onCloseModal() {\n            this.showModal = false;\n            this.$nextTick(() => {\n                this.$router.go(-1);\n            });\n        },\n\n        newActiveTabItem(item) {\n            this.currentTab = item.name;\n        },\n    },\n});\n","import template from './swag-migration-history-detail-errors.html.twig';\nimport './swag-migration-history-detail-errors.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail-errors', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        migrationRun: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            allMigrationErrors: null,\n            migrationErrors: [],\n            sortBy: 'count',\n            sortDirection: 'DESC',\n            disableRouteParams: true,\n            limit: 10,\n            downloadUrl: '',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return [\n                {\n                    property: 'title',\n                    dataIndex: 'title',\n                    label: this.$tc('swag-migration.history.detailPage.errorCode'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: true,\n                },\n                {\n                    property: 'count',\n                    dataIndex: 'count',\n                    label: this.$tc('swag-migration.history.detailPage.errorCount'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: true,\n                },\n            ];\n        },\n    },\n\n    methods: {\n        async getList() {\n            this.isLoading = true;\n            const params = this.getMainListingParams();\n\n            if (this.allMigrationErrors === null) {\n                await this.loadAllMigrationErrors();\n            }\n\n            this.applySorting(params);\n\n            const startIndex = (params.page - 1) * this.limit;\n            const endIndex = Math.min((params.page - 1) * this.limit + this.limit, this.allMigrationErrors.length);\n            this.migrationErrors = [];\n            for (let i = startIndex; i < endIndex; i += 1) {\n                this.migrationErrors.push(this.allMigrationErrors[i]);\n            }\n\n            this.isLoading = false;\n            return this.migrationErrors;\n        },\n\n        loadAllMigrationErrors() {\n            return this.migrationService.getGroupedLogsOfRun(\n                this.migrationRun.id,\n            ).then((response) => {\n                this.total = response.total;\n                this.allMigrationErrors = response.items;\n                this.allMigrationErrors.forEach((item) => {\n                    item.title = this.$tc(this.getErrorTitleSnippet(item), 0, { entity: item.entity });\n                });\n                this.downloadUrl = response.downloadUrl;\n                return this.allMigrationErrors;\n            });\n        },\n\n        applySorting(params) {\n            this.allMigrationErrors.sort((first, second) => {\n                if (params.sortDirection === 'ASC') {\n                    if (first[params.sortBy] < second[params.sortBy]) {\n                        return -1;\n                    }\n\n                    return 1;\n                }\n\n                if (first[params.sortBy] > second[params.sortBy]) {\n                    return -1;\n                }\n\n                return 1;\n            });\n        },\n\n        getErrorTitleSnippet(item) {\n            const snippetKey = item.titleSnippet;\n            if (this.$te(snippetKey)) {\n                return snippetKey;\n            }\n\n            return 'swag-migration.index.error.unknownError';\n        },\n\n        submitDownload() {\n            this.$refs.downloadForm.submit();\n        },\n    },\n});\n","export default \"{% block swag_migration_history_detail_errors %}\\n    <div class=\\\"swag-migration-history-detail-errors\\\">\\n        <div v-if=\\\"!isLoading\\\">\\n\\n            {% block swag_migration_history_detail_errors_grid %}\\n                <sw-data-grid v-if=\\\"migrationErrors.length > 0\\\"\\n                              identifier=\\\"swag-migration-history-detail-errors\\\"\\n                              :dataSource=\\\"migrationErrors\\\"\\n                              :columns=\\\"columns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"false\\\"\\n                              :allowColumnEdit=\\\"false\\\"\\n                              :showActions=\\\"false\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_detail_errors_grid_code%}\\n                        <template #column-title=\\\"{ item }\\\">\\n                            {{ item.title }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_errors_grid_count %}\\n                        <template #column-count=\\\"{ item }\\\">\\n                            {{ item.count }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_errors_grid_pagination %}\\n                        <template #pagination>\\n                            <sw-pagination :page=\\\"page\\\"\\n                                           :limit=\\\"limit\\\"\\n                                           :total=\\\"total\\\"\\n                                           :steps=\\\"[5,10]\\\"\\n                                           :total-visible=\\\"7\\\"\\n                                           @page-change=\\\"onPageChange\\\">\\n                            </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n                </sw-data-grid>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_noError %}\\n                <p v-if=\\\"migrationErrors.length === 0\\\"\\n                   class=\\\"swag-migration-history-detail-errors__no-error\\\">\\n                    {{ $tc('swag-migration.history.detailPage.noErrorsOccurred') }}\\n                </p>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_download_form %}\\n                <form class=\\\"swag-migration-history-detail-errors__download-form\\\"\\n                      ref=\\\"downloadForm\\\"\\n                      :action=\\\"downloadUrl\\\"\\n                      method=\\\"POST\\\">\\n                    <input type=\\\"hidden\\\"\\n                           name=\\\"runUuid\\\"\\n                           :value=\\\"migrationRun.id\\\">\\n                </form>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_description %}\\n                <i18n class=\\\"swag-migration-history-detail-errors__description\\\"\\n                      path=\\\"swag-migration.history.detailPage.logDescription\\\"\\n                      tag=\\\"p\\\">\\n                    <a class=\\\"link\\\"\\n                       place=\\\"link\\\"\\n                       href=\\\"#\\\"\\n                       @click.prevent=\\\"submitDownload\\\">\\n                        {{ $tc('swag-migration.history.detailPage.logDownload') }}\\n                    </a>\\n                </i18n>\\n            {% endblock %}\\n\\n        </div>\\n\\n        {% block swag_migration_history_detail_errors_noError__loader %}\\n            <div v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-history-detail-errors__loading-placeholder\\\"></div>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_history_detail_data %}\\n    <div class=\\\"swag-migration-history-detail-data\\\">\\n        <div v-if=\\\"!isLoading\\\">\\n\\n            {% block swag_migration_history_detail_data_grid %}\\n                <sw-data-grid identifier=\\\"swag-migration-history-detail-data\\\"\\n                              :dataSource=\\\"migrationData\\\"\\n                              :columns=\\\"columns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"false\\\"\\n                              :allowColumnEdit=\\\"false\\\"\\n                              :showActions=\\\"false\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_detail_data_grid_name %}\\n                        <template #column-name=\\\"{ item }\\\">\\n                            {{ $tc(item.snippet) }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_data_grid_count %}\\n                        <template #column-count=\\\"{ item }\\\">\\n                            {{ item.total }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_data_grid_pagination %}\\n                        <template #pagination>\\n                            <sw-pagination :page=\\\"page\\\"\\n                                           :limit=\\\"limit\\\"\\n                                           :total=\\\"total\\\"\\n                                           :steps=\\\"[5,10]\\\"\\n                                           :total-visible=\\\"7\\\"\\n                                           @page-change=\\\"onPageChange\\\">\\n                            </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n                </sw-data-grid>\\n            {% endblock %}\\n        </div>\\n\\n        {% block swag_migration_history_detail_data_noError__loader %}\\n            <div v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-history-detail-data__loading-placeholder\\\"></div>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-history-detail-data.html.twig';\nimport './swag-migration-history-detail-data.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail-data', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        migrationRun: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            allMigrationData: [],\n            migrationData: [],\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            disableRouteParams: true,\n            limit: 10,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return [\n                {\n                    property: 'name',\n                    label: this.$tc('swag-migration.history.detailPage.dataName'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: false,\n                },\n                {\n                    property: 'count',\n                    label: this.$tc('swag-migration.history.detailPage.dataCount'),\n                    allowResize: true,\n                    sortable: false,\n                },\n            ];\n        },\n\n        entityGroups() {\n            return this.migrationRun.progress.filter((group) => (group.id !== 'processMediaFiles'));\n        },\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n\n            // ToDo MIG-35 - Implement sorting\n\n            this.total = this.entityGroups.length;\n            const start = (this.page - 1) * this.limit;\n            const end = Math.min(start + this.limit, this.total);\n            this.migrationData = [];\n\n            // Copy the object references into the display items array (for pagination). Note: Array.slice dont work\n            for (let i = start; i < end; i += 1) {\n                this.migrationData.push(this.entityGroups[i]);\n            }\n\n            this.isLoading = false;\n            return this.items;\n        },\n    },\n});\n","const utils = Shopware.Utils;\n\n/**\n * @package services-settings\n */\nexport default class StorageBroadcastService {\n    constructor(receiveCallback = () => {}, channelKey) {\n        this._clientId = utils.createId();\n        this._channelKey = channelKey; // To identify the messages of all StorageBroadcastServices\n        this._receiveCallback = receiveCallback;\n\n        window.addEventListener('storage', this.messageReceived.bind(this));\n    }\n\n    getClientId() {\n        return this._clientId;\n    }\n\n    setClientId(id) {\n        this._clientId = id;\n    }\n\n    /**\n     * Send a data packet to all other browser tabs that listens\n     *\n     * @param data\n     */\n    sendMessage(data) {\n        if (!data.id || !data.id.length) {\n            data.id = this._clientId;\n        }\n\n        data = JSON.stringify(data);\n\n        localStorage.setItem(this._channelKey, data);\n    }\n\n    /**\n     * Handles receive logic, so only data from other tabs trigger the callback\n     *\n     * @param event\n     * @returns {boolean}\n     */\n    messageReceived(event) {\n        if (event.key !== this._channelKey) {\n            return false;\n        }\n\n        const data = JSON.parse(localStorage.getItem(this._channelKey));\n        localStorage.removeItem(this._channelKey);\n\n        if (!data || data.id === this._clientId) {\n            return false;\n        }\n\n        this._receiveCallback.call(null, data);\n        return true;\n    }\n}\n","import { WORKER_INTERRUPT_TYPE } from './swag-migration-worker.service';\n\nconst { Application, State } = Shopware;\n\n/**\n * Describes the current API endpoint.\n * Can be easily used together with the MIGRATION_STATUS.\n *\n * Example to get the API operation from status:\n * WORKER_API_OPERATION[MIGRATION_STATUS.FETCH_DATA]\n *\n * @type {Readonly<{\"0\": string, \"1\": string, \"2\": string}>}\n * @package services-settings\n */\nexport const WORKER_API_OPERATION = Object.freeze({\n    1: 'fetchData',\n    2: 'writeData',\n    3: 'processMedia',\n});\n\n/**\n * @package services-settings\n */\nexport class WorkerRequest {\n    /**\n     * @param {Object} requestParams\n     * @param {WorkerStatusManager} workerStatusManager\n     * @param {MigrationApiService} migrationService\n     * @param {function} onInterruptCB\n     */\n    constructor(\n        requestParams,\n        workerStatusManager,\n        migrationService,\n        onInterruptCB,\n    ) {\n        this._MAX_REQUEST_TIME = 10000; // in ms\n        this._DEFAULT_CHUNK_SIZE = 25; // in data sets\n\n        // how much does the chunk factor manipulate the chunk size for under target request times\n        this._CHUNK_PROPORTION_UP_WEIGHT = 0.1;\n\n        // how much does the chunk factor manipulate the chunk size for above target request times\n        this._CHUNK_PROPORTION_DOWN_WEIGHT = 0.9;\n\n        this._migrationProcessState = State.get('swagMigration/process');\n        this._runId = requestParams.runUuid;\n        this._requestParams = requestParams;\n        this._workerStatusManager = workerStatusManager;\n        this._migrationService = migrationService;\n        this._interrupt = '';\n        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n        this._lastChunkSize = this._DEFAULT_CHUNK_SIZE;\n        this._successfulChunk = this._DEFAULT_CHUNK_SIZE;\n\n        // callbacks\n        this._onInterruptCB = onInterruptCB;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get operation() {\n        return WORKER_API_OPERATION[this._migrationProcessState.statusIndex];\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get interrupt() {\n        return this._interrupt;\n    }\n\n    /**\n     * @param {boolean} value\n     */\n    set interrupt(value) {\n        this._interrupt = value;\n    }\n\n    /**\n     * @param {function} value\n     */\n    set onInterruptCB(value) {\n        this._callInterruptCB = value;\n    }\n\n    /**\n     * @private\n     */\n    _callInterruptCB() {\n        if (this._onInterruptCB !== null) {\n            this._onInterruptCB(this._interrupt);\n        }\n    }\n\n    /**\n     * Do all the API requests for all entities with the given methodName\n     *\n     * @param {number} statusIndex\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     */\n    async migrateProcess(statusIndex, groupStartIndex = 0, entityStartIndex = 0, entityOffset = 0) {\n        /* eslint-disable no-await-in-loop */\n        return new Promise(async (resolve) => {\n            let statusChangedError = false;\n            await this._workerStatusManager.changeStatus(this._runId, statusIndex).catch(() => {\n                statusChangedError = true;\n            });\n\n            if (statusChangedError === true) {\n                this.interrupt = WORKER_INTERRUPT_TYPE.STOP;\n                this._callInterruptCB();\n                resolve();\n                return;\n            }\n\n            // Reference to store state, don't mutate this!\n            const entityGroups = this._migrationProcessState.entityGroups;\n            for (let groupIndex = groupStartIndex; groupIndex < entityGroups.length; groupIndex += 1) {\n                let groupProgress = 0;\n                for (let entityIndex = 0; entityIndex < entityGroups[groupIndex].entities.length; entityIndex += 1) {\n                    const entityName = entityGroups[groupIndex].entities[entityIndex].entityName;\n                    const entityCount = entityGroups[groupIndex].entities[entityIndex].total;\n\n                    if (entityIndex >= entityStartIndex) {\n                        await this._migrateEntity(\n                            entityName,\n                            entityCount,\n                            entityGroups[groupIndex],\n                            groupProgress,\n                            entityOffset,\n                        );\n\n                        if (this._interrupt !== '') {\n                            this._callInterruptCB();\n                            resolve();\n                            return;\n                        }\n\n                        entityOffset = 0;\n                    }\n\n                    groupProgress += entityCount;\n                }\n                entityStartIndex = 0;\n            }\n\n            resolve();\n        });\n        /* eslint-enable no-await-in-loop */\n    }\n\n    /**\n     * Do all the API requests for one entity in chunks\n     *\n     * @param {string} entityName\n     * @param {number} entityCount\n     * @param {Object} group\n     * @param {number} groupProgress\n     * @param {number} currentOffset\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _migrateEntity(entityName, entityCount, group, groupProgress, currentOffset = 0) {\n        /* eslint-disable no-await-in-loop */\n        while (currentOffset < entityCount) {\n            if (this._interrupt !== '') {\n                return;\n            }\n\n            await this._migrateEntityRequest(entityName, currentOffset);\n            let newOffset = currentOffset + this._successfulChunk;\n            if (newOffset > entityCount) {\n                newOffset = entityCount;\n            }\n\n            // update State\n            State.commit('swagMigration/process/setEntityProgress', {\n                groupId: group.id,\n                groupCurrentCount: groupProgress + newOffset,\n                groupTotal: group.total,\n            });\n\n            currentOffset += this._successfulChunk;\n        }\n        /* eslint-enable no-await-in-loop */\n\n        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n    }\n\n    /**\n     * Do a single API request for the given entity with given offset.\n     *\n     * @param {string} entityName\n     * @param {number} offset\n     * @returns {Promise}\n     * @private\n     */\n    _migrateEntityRequest(entityName, offset) {\n        return new Promise(async (resolve) => {\n            this._requestParams.entity = entityName;\n            this._requestParams.offset = offset;\n            this._requestParams.limit = this._chunkSize;\n\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                const beforeRequestTime = new Date();\n                await this._migrationService[this.operation](this._requestParams).then((response) => {\n                    if (!response) {\n                        // Request timeout behavior: scale chunk size down on first occur and back to default on second\n                        requestFailedCount += 1;\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                            this._requestParams.limit = this._chunkSize;\n                        } else {\n                            this._handleChunkSize();\n                            this._lastChunkSize = this._chunkSize; // next time reset to default chunk size\n                            this._requestParams.limit = this._chunkSize;\n                        }\n                        return;\n                    }\n\n                    if (response.validToken === undefined) {\n                        // Memory limit behavior: If occurs the validToken is not in the response\n                        // Then we scale the limit down to default and retry\n                        // If the retry also fails with memory limit exceeded we skip this chunk\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._successfulChunk = this._requestParams.limit;\n                            requestRetry = false;\n                            return;\n                        }\n\n                        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                        this._lastChunkSize = this._chunkSize;\n                        this._requestParams.limit = this._chunkSize;\n                        return;\n                    }\n\n                    if (!response.validToken) {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.TAKEOVER;\n                        this._successfulChunk = 0;\n                        requestRetry = false;\n                        return;\n                    }\n\n                    this._successfulChunk = this._requestParams.limit;\n                    const afterRequestTime = new Date();\n                    this._handleChunkSize(afterRequestTime.getTime() - beforeRequestTime.getTime());\n                    requestRetry = false;\n                }).catch((response) => {\n                    if (!response || !response.response) {\n                        // Request timeout behavior: scale chunk size down on first occur and back to default on second\n                        requestFailedCount += 1;\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                            this._requestParams.limit = this._chunkSize;\n                        } else {\n                            this._handleChunkSize();\n                            this._lastChunkSize = this._chunkSize; // next time reset to default chunk size\n                            this._requestParams.limit = this._chunkSize;\n                        }\n                        return;\n                    }\n\n                    if (response.response.status === 500) {\n                        // Don't retry if server errors happen, only if something is wrong with the connection.\n                        this._successfulChunk = this._requestParams.limit;\n                        requestRetry = false;\n                        return;\n                    }\n\n                    const afterRequestTime = new Date();\n                    this._handleChunkSize(afterRequestTime.getTime() - beforeRequestTime.getTime());\n\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    this._successfulChunk = 0;\n                    requestRetry = false;\n                    if (this.operation === WORKER_API_OPERATION[1]) {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.CONNECTION_LOST;\n                    } else {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.PAUSE;\n                    }\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    /**\n     * Update the chunkSize depending on the requestTime / maxRequestTime proportion\n     *\n     * @param {number} requestTime Request time in milliseconds (fallback to 30s for timeout simulation)\n     * @private\n     */\n    _handleChunkSize(requestTime = 30000) {\n        this._lastChunkSize = this._chunkSize;\n        const factor = this._MAX_REQUEST_TIME / requestTime;\n\n        if (requestTime < this._MAX_REQUEST_TIME) {\n            // Scale chunk size up\n            const weightedFactor = (factor - 1) * this._CHUNK_PROPORTION_UP_WEIGHT + 1;\n            this._chunkSize = Math.ceil(this._chunkSize * weightedFactor);\n            return;\n        }\n\n        // Scale chunk size down\n        const weightedFactor = (factor - 1) * this._CHUNK_PROPORTION_DOWN_WEIGHT + 1;\n        this._chunkSize = Math.ceil(this._chunkSize * weightedFactor);\n\n        if (this._chunkSize < this._DEFAULT_CHUNK_SIZE) {\n            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n        }\n    }\n\n    /**\n     * @returns {Boolean|Vue}\n     */\n    get applicationRoot() {\n        if (this._applicationRoot) {\n            return this._applicationRoot;\n        }\n        this._applicationRoot = Application.getApplicationRoot();\n        return this._applicationRoot;\n    }\n}\n\nexport default WorkerRequest;\n","import StorageBroadcastService from '../storage-broadcaster.service';\nimport { WorkerRequest } from './swag-migration-worker-request.service';\nimport { MIGRATION_STATUS, WorkerStatusManager } from './swag-migration-worker-status-manager.service';\n\nconst { Application, State } = Shopware;\n\n/**\n * @package services-settings\n */\nexport const MIGRATION_ACCESS_TOKEN_NAME = 'swagMigrationAccessToken';\n\n/**\n * @package services-settings\n */\nexport const WORKER_INTERRUPT_TYPE = Object.freeze({\n    TAKEOVER: 'takeover',\n    STOP: 'stop',\n    PAUSE: 'pause',\n    CONNECTION_LOST: 'connectionLost',\n});\n\n/**\n * @package services-settings\n */\nclass MigrationWorkerService {\n    /**\n     * @param {MigrationApiService} migrationService\n     * @param {MigrationIndexingWorker} migrationIndexingWorker\n     */\n    constructor(\n        migrationService,\n        migrationIndexingWorker,\n    ) {\n        // will be toggled when we receive a response for our 'migrationWanted' request\n        this._broadcastResponseFlag = false;\n\n        // handles cross browser tab communication\n        this._broadcastService = new StorageBroadcastService(\n            this._onBroadcastReceived.bind(this),\n            'swag-migration-service',\n        );\n\n        this._migrationService = migrationService;\n        this._migrationIndexingWorker = migrationIndexingWorker;\n        this._workerStatusManager = new WorkerStatusManager(\n            this._migrationService,\n        );\n        this._workRunner = null;\n\n        /** @type MigrationProcessStore */\n        this._migrationProcessState = State.get('swagMigration/process');\n        // state variables\n        this._interruptSubscriber = null;\n        this._restoreState = {};\n\n        window.addEventListener('beforeunload', this.onBrowserTabClosing.bind(this));\n    }\n\n    /**\n     * Show the browser tab closing prompt to confirm the page leave.\n     * Custom text support is deprecated so it will display the browser specific default message.\n     * For more information look here:\n     * https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n     *\n     * @param {Event} e\n     * @returns {string}\n     */\n    onBrowserTabClosing(e) {\n        if (this._migrationProcessState.isMigrating &&\n            this._migrationProcessState.statusIndex !== MIGRATION_STATUS.FINISHED) {\n            e.preventDefault();\n            e.returnValue = '';\n            return '';\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns the accessToken out of the local storage\n     *\n     * @returns {string}\n     */\n    static get migrationAccessToken() {\n        let token = localStorage.getItem(MIGRATION_ACCESS_TOKEN_NAME);\n\n        if (token === null) {\n            token = '';\n        }\n\n        return token;\n    }\n\n    _onInterrupt(value) {\n        State.commit('swagMigration/process/setIsMigrating', false);\n        this._callInterruptSubscriber(value);\n    }\n\n    /**\n     * Check if the last migration was not finished, the accessToken is valid and set the restoreState.\n     *\n     * @returns {Promise<{\n     *   runUuid: null,\n     *   isMigrationRunning: boolean,\n     *   isMigrationAccessTokenValid: boolean,\n     *   status: object|null,\n     *   accessToken: string|null\n     * }>}\n     */\n    checkForRunningMigration() {\n        return new Promise((resolve) => {\n            this._migrationService.getState({\n                swagMigrationAccessToken: MigrationWorkerService.migrationAccessToken,\n            }).then((state) => {\n                resolve(this.processStateResponse(state));\n            }).catch((error) => {\n                const returnValue = {\n                    runUuid: null,\n                    isMigrationRunning: false,\n                    isMigrationAccessTokenValid: false,\n                    status: null,\n                    accessToken: null,\n                    requestErrorCode: error !== undefined && error.response !== undefined ? error.response.code : '',\n                };\n\n                returnValue.isMigrationAccessTokenValid = true;\n                this._restoreState = {};\n                resolve(returnValue);\n            });\n        });\n    }\n\n    /**\n     * Try to create a new migration run and process the return state.\n     *\n     * @returns {Promise<{\n     *   runUuid: null,\n     *   isMigrationRunning: boolean,\n     *   isMigrationAccessTokenValid: boolean,\n     *   status: object|null,\n     *   accessToken: string|null\n     * }>}\n     */\n    createMigration(dataSelectionIds) {\n        return new Promise((resolve) => {\n            this._migrationService.createMigration(\n                this._migrationProcessState.connectionId,\n                dataSelectionIds,\n            ).then((state) => {\n                const returnState = this.processStateResponse(state);\n\n                if (returnState.isMigrationRunning === false && returnState.isMigrationAccessTokenValid === true) {\n                    State.commit('swagMigration/process/setStatusIndex', MIGRATION_STATUS.PREMAPPING);\n                }\n\n                State.commit('swagMigration/process/setRunId', returnState.runUuid);\n                resolve(returnState);\n            }).catch(() => {\n                const returnValue = {\n                    runUuid: null,\n                    isMigrationRunning: false,\n                    isMigrationAccessTokenValid: true,\n                    status: null,\n                    accessToken: null,\n                };\n\n                this._restoreState = {};\n                resolve(returnValue);\n            });\n        });\n    }\n\n    /**\n     * Check if the migration was not finished, the accessToken is valid and set the restoreState.\n     *\n     * @param {Object} state\n     * @return {{\n     *          runUuid: null,\n     *          isMigrationRunning: boolean,\n     *          isMigrationAccessTokenValid: boolean,\n     *          status: object|null,\n     *          accessToken: string|null\n     *          }}\n     */\n    processStateResponse(state) {\n        const returnValue = {\n            runUuid: null,\n            isMigrationRunning: false,\n            isMigrationAccessTokenValid: false,\n            status: null,\n            accessToken: null,\n            runProgress: null,\n        };\n\n        this._restoreState = state;\n        returnValue.runUuid = state.runId;\n        returnValue.accessToken = state.accessToken;\n        returnValue.runProgress = state.runProgress;\n\n        if (state.validMigrationRunToken === false) {\n            State.commit('swagMigration/process/setRunId', state.runId);\n            returnValue.isMigrationRunning = true;\n            returnValue.status = state.status;\n\n            return returnValue;\n        }\n\n        if (state.migrationRunning === true) {\n            State.commit('swagMigration/process/setRunId', this._restoreState.runId);\n            returnValue.isMigrationRunning = true;\n            returnValue.isMigrationAccessTokenValid = true;\n            returnValue.status = state.status;\n\n            return returnValue;\n        }\n\n        returnValue.isMigrationAccessTokenValid = true;\n        return returnValue;\n    }\n\n    /**\n     * Continue the migration (possible after checkForRunningMigration resolved true).\n     */\n    restoreRunningMigration(startMigration = true) {\n        if (this._restoreState === null || this._restoreState === {}) {\n            return;\n        }\n\n        if (this._restoreState.migrationRunning === false) {\n            return;\n        }\n\n        State.commit('swagMigration/process/setRunId', this._restoreState.runId);\n        State.commit('swagMigration/process/setEntityGroups', this._restoreState.runProgress);\n        State.commit('swagMigration/process/setStatusIndex', this._restoreState.status);\n\n        if (!startMigration) {\n            return;\n        }\n\n        // Get current group and entity index\n        const indicies = this._getIndiciesByEntityName(this._restoreState.entity);\n\n        this.startMigration(\n            this._migrationProcessState.runId,\n            this._migrationProcessState.statusIndex,\n            indicies.groupIndex,\n            indicies.entityIndex,\n            this._restoreState.finishedCount,\n        );\n    }\n\n    stopMigration() {\n        if (this._workRunner === null) {\n            this._callInterruptSubscriber(WORKER_INTERRUPT_TYPE.STOP);\n            return;\n        }\n\n        this._workRunner.interrupt = WORKER_INTERRUPT_TYPE.STOP;\n    }\n\n    pauseMigration() {\n        this._workRunner.interrupt = WORKER_INTERRUPT_TYPE.PAUSE;\n    }\n\n    /**\n     * Takeover the current migration and save the given accessToken into the localStorage.\n     *\n     * @return {Promise}\n     */\n    takeoverMigration() {\n        return new Promise((resolve) => {\n            this._migrationService.takeoverMigration(this._migrationProcessState.runId)\n                .then((migrationAccessToken) => {\n                    localStorage.setItem(MIGRATION_ACCESS_TOKEN_NAME, migrationAccessToken.accessToken);\n                    resolve();\n                });\n        });\n    }\n\n    /**\n     * Get the groupIndex and the entityIndex from the entityGroups for the specified entityName.\n     *\n     * @param {string} entityName\n     * @returns {{groupIndex: number, entityIndex: number}}\n     * @private\n     */\n    _getIndiciesByEntityName(entityName) {\n        for (let groupIndex = 0; groupIndex < this._migrationProcessState.entityGroups.length; groupIndex += 1) {\n            for (let entityIndex = 0;\n                entityIndex < this._migrationProcessState.entityGroups[groupIndex].entities.length;\n                entityIndex += 1\n            ) {\n                if (this._migrationProcessState.entityGroups[groupIndex]\n                    .entities[entityIndex].entityName === entityName\n                ) {\n                    return {\n                        groupIndex,\n                        entityIndex,\n                    };\n                }\n            }\n        }\n\n        return {\n            groupIndex: -1,\n            entityIndex: -1,\n        };\n    }\n\n    /**\n     * @param {function} callback\n     */\n    subscribeInterrupt(callback) {\n        this._interruptSubscriber = callback;\n    }\n\n    unsubscribeInterrupt() {\n        this._interruptSubscriber = null;\n    }\n\n    /**\n     * @private\n     */\n    _callInterruptSubscriber(value) {\n        if (this._interruptSubscriber !== null) {\n            this._interruptSubscriber(value);\n        }\n    }\n\n    /**\n     * @param {String} runId\n     * @param {number} statusIndex\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     */\n    startMigration(\n        runId,\n        statusIndex = MIGRATION_STATUS.FETCH_DATA,\n        groupStartIndex = 0,\n        entityStartIndex = 0,\n        entityOffset = 0,\n    ) {\n        return new Promise(async (resolve) => {\n            // Wait for the 'migrationWanted' request and response to allow or deny the migration\n            State.commit('swagMigration/process/setIsMigrating', true);\n            State.commit('swagMigration/process/setRunId', runId);\n\n            let processMediaFiles = false;\n            this._migrationProcessState.entityGroups.forEach((group) => {\n                if (group.processMediaFiles) {\n                    processMediaFiles = true;\n                }\n            });\n\n            const params = {\n                swagMigrationAccessToken: MigrationWorkerService.migrationAccessToken,\n                runUuid: this._migrationProcessState.runId,\n            };\n\n            this._workRunner = new WorkerRequest(\n                params,\n                this._workerStatusManager,\n                this._migrationService,\n                this._onInterrupt.bind(this),\n            );\n\n            // fetch\n            if (statusIndex <= MIGRATION_STATUS.FETCH_DATA) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.FETCH_DATA,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // write\n            if (statusIndex <= MIGRATION_STATUS.WRITE_DATA) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.WRITE_DATA,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // download\n            if (statusIndex <= MIGRATION_STATUS.PROCESS_MEDIA_FILES && processMediaFiles) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.PROCESS_MEDIA_FILES,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // finish\n            await this._migrateFinish();\n            resolve();\n        });\n    }\n\n    /**\n     * Start the WorkerRequest or WorkerMediaFiles runner.\n     *\n     * @param {number} status\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     * @private\n     */\n    _startWorkRunner(status, groupStartIndex, entityStartIndex, entityOffset) {\n        return new Promise(async (resolve) => {\n            if (!this._migrationProcessState.isMigrating) {\n                resolve();\n                return;\n            }\n\n            if (groupStartIndex === 0 && entityStartIndex === 0 && entityOffset === 0) {\n                this._resetProgress();\n            }\n\n            await this._workRunner.migrateProcess(\n                status,\n                groupStartIndex,\n                entityStartIndex,\n                entityOffset,\n            );\n\n            resolve();\n        });\n    }\n\n    /**\n     * Resolves with true if a migration is already running in another tab. otherwise false.\n     * It will resolve after 300ms.\n     *\n     * @returns {Promise}\n     * @private\n     */\n    isMigrationRunningInOtherTab() {\n        return new Promise(async (resolve) => {\n            this._broadcastService.sendMessage({\n                migrationMessage: 'migrationWanted',\n            });\n\n            const oldFlag = this._broadcastResponseFlag;\n            setTimeout(() => {\n                if (this._broadcastResponseFlag !== oldFlag) {\n                    resolve(true);\n                    return;\n                }\n\n                resolve(false);\n            }, 300);\n        });\n    }\n\n    /**\n     * Gets called with data from another browser tab\n     *\n     * @param {Object} data\n     * @private\n     */\n    _onBroadcastReceived(data) {\n        // answer incoming migration wanted request based on current migration state.\n        if (data.migrationMessage === 'migrationWanted') {\n            if (this._migrationProcessState.isMigrating) {\n                this._broadcastService.sendMessage({\n                    migrationMessage: 'migrationDenied',\n                });\n            }\n        }\n\n        // allow own migration if no migrationDenied response comes back.\n        if (data.migrationMessage === 'migrationDenied') {\n            this._broadcastResponseFlag = !this._broadcastResponseFlag;\n        }\n    }\n\n    /**\n     * @returns {Promise}\n     * @private\n     */\n    _migrateFinish() {\n        if (!this._migrationProcessState.isMigrating) {\n            return Promise.resolve();\n        }\n\n        return this._workerStatusManager.changeStatus(\n            this._migrationProcessState.runId,\n            MIGRATION_STATUS.FINISHED,\n        ).then(() => {\n            this._showFinishNotification(this._migrationProcessState.runId);\n            this._resetProgress();\n            this._assignThemes().finally(() => {\n                this._handleIndexing();\n            });\n\n            return Promise.resolve();\n        });\n    }\n\n    _showFinishNotification(runId) {\n        State.dispatch('notification/createNotification', {\n            title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.title'),\n            message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.message'),\n            variant: 'info',\n            growl: false,\n            actions: [\n                {\n                    label: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.actionLabel'),\n                    route: { name: 'swag.migration.index.history.detail', params: { id: runId } },\n                },\n            ],\n        });\n    }\n\n    _assignThemes() {\n        return this._migrationService.assignThemes(this._migrationProcessState.runId);\n    }\n\n    _handleIndexing() {\n        let notificationId = null;\n        State.dispatch('notification/createNotification', {\n            title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.running.title'),\n            message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.running.message'),\n            variant: 'info',\n            isLoading: true,\n            growl: false,\n        }).then((id) => {\n            notificationId = id;\n            return this._migrationIndexingWorker.start();\n        }).then(() => {\n            // indexing finished\n            State.dispatch('notification/updateNotification', {\n                uuid: notificationId,\n                title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.finished.title'),\n                message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.finished.message'),\n                variant: 'info',\n                isLoading: false,\n                visited: false,\n                growl: true,\n            });\n        });\n    }\n\n    _resetProgress() {\n        State.commit('swagMigration/process/resetProgress');\n    }\n\n    /**\n     * @returns {Boolean|Vue}\n     */\n    get applicationRoot() {\n        if (this._applicationRoot) {\n            return this._applicationRoot;\n        }\n        this._applicationRoot = Application.getApplicationRoot();\n        return this._applicationRoot;\n    }\n}\n\nexport default MigrationWorkerService;\n","import template from './swag-migration-process-screen.html.twig';\nimport './swag-migration-process-screen.scss';\nimport { UI_COMPONENT_INDEX } from '../../../../core/data/migrationUI.store';\nimport { MIGRATION_STATUS } from '../../../../core/service/migration/swag-migration-worker-status-manager.service';\nimport {\n    MIGRATION_ACCESS_TOKEN_NAME,\n    WORKER_INTERRUPT_TYPE,\n} from '../../../../core/service/migration/swag-migration-worker.service';\n\nconst { Component, State, Mixin } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-process-screen', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            errorList: [],\n            isTakeoverForbidden: false,\n            isMigrationInterrupted: false,\n            isOtherMigrationRunning: false,\n            showAbortMigrationConfirmDialog: false,\n            isPausedBeforeAbortDialog: false,\n            UI_COMPONENT_INDEX: UI_COMPONENT_INDEX,\n            displayFlowChart: true,\n            flowChartItemIndex: 0,\n            flowChartItemVariant: 'info',\n            flowChartInitialItemVariants: [],\n            isWarningConfirmed: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'statusIndex',\n            'isMigrating',\n            'connectionId',\n            'environmentInformation',\n            'runId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'componentIndex',\n            'isPaused',\n            'isLoading',\n            'isPremappingValid',\n            'unfilledPremapping',\n            'premapping',\n            'dataSelectionIds',\n        ]),\n\n        /**\n         * @returns {string}\n         */\n        abortMigrationBackText() {\n            if (this.isPausedBeforeAbortDialog) {\n                return this.$tc('swag-migration.index.confirmAbortDialog.cancelPause');\n            }\n\n            return this.$tc('swag-migration.index.confirmAbortDialog.cancelRunning');\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        componentIndexIsResult() {\n            return this.componentIndex === UI_COMPONENT_INDEX.RESULT_SUCCESS;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        abortButtonVisible() {\n            return this.isPaused || (\n                this.isMigrating &&\n                !this.isLoading &&\n                !this.componentIndexIsResult\n            );\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        backButtonVisible() {\n            return this.componentIndexIsResult;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonVisible() {\n            return (!this.isMigrating && !this.isPaused) ||\n                (this.statusIndex === MIGRATION_STATUS.FETCH_DATA &&\n                    this.isMigrating) ||\n                (this.componentIndexIsResult && this.isMigrating);\n        },\n\n        isFetching() {\n            return this.statusIndex === MIGRATION_STATUS.FETCH_DATA &&\n                this.isMigrating;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonDisabled() {\n            return this.isLoading ||\n                this.isFetching ||\n                this.componentIndexIsResult;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        startButtonVisible() {\n            return !this.isLoading &&\n                this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.isMigrating;\n        },\n\n        premappingIsNotReady() {\n            return this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.componentIndex !== UI_COMPONENT_INDEX.WARNING_CONFIRM &&\n                this.isMigrating &&\n                !this.isPremappingValid;\n        },\n\n        warningIsNotReady() {\n            return this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM &&\n                this.isWarningConfirmed === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        startButtonDisabled() {\n            return this.isLoading ||\n                this.premappingIsNotReady ||\n                this.warningIsNotReady;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        pauseButtonVisible() {\n            return this.isMigrating &&\n                !this.isPaused &&\n                !this.componentIndexIsResult &&\n                [\n                    MIGRATION_STATUS.WAITING,\n                    MIGRATION_STATUS.PREMAPPING,\n                ].includes(this.statusIndex) === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        pauseButtonDisabled() {\n            return this.isLoading;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        continueButtonVisible() {\n            return this.isPaused;\n        },\n    },\n\n    watch: {\n        statusIndex: {\n            immediate: true,\n            /**\n             * @param {number} status\n             */\n            handler(status) {\n                if (this.isLoading) {\n                    return;\n                }\n\n                if (status === MIGRATION_STATUS.WAITING) {\n                    return;\n                }\n\n                if (status === MIGRATION_STATUS.PREMAPPING) {\n                    this.$nextTick(() => {\n                        this.flowChartItemIndex = status;\n                    });\n                    return;\n                }\n\n                this.$nextTick(() => {\n                    this.flowChartItemIndex = status;\n\n                    if (status !== MIGRATION_STATUS.FINISHED) {\n                        this.flowChartItemVariant = 'info';\n                    } else {\n                        this.flowChartItemVariant = 'success';\n                    }\n\n                    if (this.flowChartInitialItemVariants.length < this.flowChartItemIndex) {\n                        while (this.flowChartInitialItemVariants.length < this.flowChartItemIndex) {\n                            this.flowChartInitialItemVariants.push('success');\n                        }\n                    }\n                });\n\n                if (status === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                    this.onProcessMediaFiles();\n                }\n\n                if (status === MIGRATION_STATUS.FINISHED) {\n                    this.isOtherMigrationRunning = false;\n                    this.onFinishWithoutErrors();\n                }\n            },\n        },\n\n        isPremappingValid: {\n            handler(valid) {\n                if (valid) {\n                    this.flowChartItemVariant = 'success';\n                    return;\n                }\n\n                this.flowChartItemVariant = 'error';\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeDestroy() {\n        this.beforeDestroyedComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            let otherInstanceMigrating = this.isMigrating;\n            if (this.isMigrating === false) {\n                await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                    if (isRunning) {\n                        otherInstanceMigrating = true;\n                        this.isTakeoverForbidden = true;\n                        this.onInvalidMigrationAccessToken();\n                    }\n                });\n\n                if (!this.isTakeoverForbidden) {\n                    await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                        if (runState.isMigrationAccessTokenValid === false && runState.isMigrationRunning === true) {\n                            otherInstanceMigrating = true;\n                            this.onInvalidMigrationAccessToken();\n                            return;\n                        }\n\n                        State.commit('swagMigration/ui/setIsPaused', runState.isMigrationRunning);\n                        if (this.isPaused) {\n                            otherInstanceMigrating = true;\n                            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                        }\n\n                        this.restoreFlowChart(runState.status);\n                    });\n                }\n            }\n\n            if (\n                this.connectionId === null\n                || this.environmentInformation === null\n            ) {\n                await this.migrationProcessStoreInitService.initProcessStore();\n            }\n\n            if (this.connectionId === null) {\n                this.$router.push({ name: 'swag.migration.wizard.introduction' });\n                return Promise.resolve();\n            }\n\n            // Do connection check\n            return this.migrationService.checkConnection(this.connectionId)\n                .then(async (connectionCheckResponse) => {\n                    State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n\n                    if (\n                        (\n                            connectionCheckResponse.requestStatus.isWarning === false &&\n                            connectionCheckResponse.requestStatus.code !== ''\n                        ) ||\n                        (!otherInstanceMigrating && !this.$route.params.startMigration)\n                    ) {\n                        this.$router.push({ name: 'swag.migration.index.main' });\n                        return Promise.resolve();\n                    }\n\n                    this.migrationWorkerService.restoreRunningMigration(false);\n\n                    if (\n                        (this.isMigrating ||\n                        this.migrationWorkerService.status === MIGRATION_STATUS.FINISHED) &&\n                        !this.$route.params.startMigration\n                    ) {\n                        this.restoreRunningMigration();\n                    }\n\n                    if (this.$route.params.startMigration) {\n                        await this.onMigrate();\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n\n                    return Promise.resolve();\n                }).catch(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                });\n        },\n\n        beforeDestroyedComponent() {\n            this.migrationWorkerService.unsubscribeInterrupt();\n        },\n\n        restoreFlowChart(currentStatus) {\n            this.flowChartItemIndex = currentStatus;\n\n            if (currentStatus !== MIGRATION_STATUS.FINISHED) {\n                this.flowChartItemVariant = 'info';\n            } else {\n                this.flowChartItemVariant = 'success';\n            }\n\n            if (currentStatus === MIGRATION_STATUS.PREMAPPING && this.unfilledPremapping.length > 0) {\n                this.flowChartItemVariant = 'error';\n            }\n\n            this.flowChartInitialItemVariants = [];\n            for (let i = 0; i < currentStatus; i += 1) {\n                this.flowChartInitialItemVariants.push('success');\n            }\n        },\n\n        resetFlowChart() {\n            this.flowChartItemIndex = 0;\n            this.flowChartItemVariant = 'info';\n            this.flowChartInitialItemVariants = [];\n        },\n\n        restoreRunningMigration() {\n            this.displayFlowChart = true;\n\n            // show loading or premapping screen\n            if (this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.WARNING_CONFIRM);\n            } else if (this.statusIndex === MIGRATION_STATUS.PREMAPPING) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n            } else if (this.statusIndex === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                this.onProcessMediaFiles();\n            } else if (this.statusIndex === MIGRATION_STATUS.FINISHED) {\n                this.onFinishWithoutErrors();\n            } else {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n            }\n\n            if (this.statusIndex !== MIGRATION_STATUS.WAITING) {\n                this.restoreFlowChart(this.statusIndex);\n            }\n\n            // subscribe to the interrupt event again\n            this.migrationWorkerService.subscribeInterrupt(this.onInterrupt);\n        },\n\n        onAbortButtonClick() {\n            this.isOtherMigrationRunning = false;\n\n            if (this.statusIndex === MIGRATION_STATUS.PREMAPPING) {\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.onInterrupt(WORKER_INTERRUPT_TYPE.STOP);\n                return;\n            }\n\n            this.showAbortMigrationConfirmDialog = true;\n            this.isPausedBeforeAbortDialog = this.isPaused;\n\n            if (!this.isPaused) {\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.migrationWorkerService.pauseMigration();\n            }\n        },\n\n        onSaveButtonClick() {\n            this.migrationService.writePremapping(\n                this.runId,\n                this.premapping,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$t('swag-migration.index.savePremapping.message'),\n                    growl: true,\n                });\n            });\n        },\n\n        onBackButtonClick() {\n            this.migrationWorkerService.status = MIGRATION_STATUS.WAITING;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            this.isOtherMigrationRunning = false;\n            this.$router.push({ name: 'swag.migration.index.main' });\n        },\n\n        onStartButtonClick() {\n            if (this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n                return Promise.resolve();\n            }\n\n            State.commit('swagMigration/ui/setIsLoading', true);\n            return this.migrationService.writePremapping(\n                this.runId,\n                this.premapping,\n            ).then(() => {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                return this.migrationWorkerService.startMigration(\n                    this.runId,\n                ).then(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                }).catch(() => {\n                    this.onInvalidMigrationAccessToken();\n                });\n            });\n        },\n\n        onPauseButtonClick() {\n            this.migrationWorkerService.pauseMigration();\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsLoading', true);\n        },\n\n        async onContinueButtonClick() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n            this.isOtherMigrationRunning = false;\n            State.commit('swagMigration/process/setIsMigrating', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (!this.isTakeoverForbidden) {\n                await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    if (runState.requestErrorCode !== undefined &&\n                        runState.requestErrorCode !== '500') {\n                        // Something is wrong with the connection\n                        State.commit('swagMigration/ui/setIsLoading', false);\n                        return;\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    State.commit('swagMigration/ui/setIsPaused', false);\n\n                    if (runState.isMigrationAccessTokenValid === false) {\n                        this.onInterrupt(WORKER_INTERRUPT_TYPE.TAKEOVER);\n                        return;\n                    }\n\n                    if (runState.isMigrationRunning === false) {\n                        State.commit('swagMigration/process/setIsMigrating', false);\n                        this.$router.push({ name: 'swag.migration.index.main' });\n                        return;\n                    }\n\n                    this.migrationWorkerService.restoreRunningMigration();\n                    this.restoreRunningMigration();\n                });\n            }\n        },\n\n        async onMigrate() {\n            this.isOtherMigrationRunning = false;\n\n            this.$nextTick().then(async () => {\n                this.resetFlowChart();\n                State.commit('swagMigration/process/setIsMigrating', true);\n                this.errorList = [];\n\n                // show loading screen\n                State.commit('swagMigration/ui/setIsLoading', true);\n                State.commit('swagMigration/process/resetProgress');\n\n                let isMigrationRunningInOtherTab = false;\n                await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                    isMigrationRunningInOtherTab = isRunning;\n                });\n\n                if (isMigrationRunningInOtherTab) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                    return;\n                }\n\n                this.migrationWorkerService.subscribeInterrupt(this.onInterrupt.bind(this));\n\n                await this.migrationWorkerService.createMigration(\n                    this.dataSelectionIds,\n                ).then((runState) => {\n                    State.commit('swagMigration/process/setEntityGroups', runState.runProgress);\n\n                    if (\n                        runState.isMigrationAccessTokenValid === false ||\n                        runState.isMigrationRunning === true ||\n                        runState.runUuid === null ||\n                        runState.accessToken === null\n                    ) {\n                        this.onInvalidMigrationAccessToken();\n                        return;\n                    }\n\n                    localStorage.setItem(MIGRATION_ACCESS_TOKEN_NAME, runState.accessToken);\n                    State.commit('swagMigration/process/setRunId', runState.runUuid);\n\n                    if (this.environmentInformation.sourceSystemCurrency !== '' &&\n                        this.environmentInformation.targetSystemCurrency !== '' &&\n                        this.environmentInformation.sourceSystemLocale !== '' &&\n                        this.environmentInformation.targetSystemLocale !== '' &&\n                        (\n                            this.environmentInformation.sourceSystemCurrency !==\n                            this.environmentInformation.targetSystemCurrency ||\n                            this.environmentInformation.sourceSystemLocale !==\n                            this.environmentInformation.targetSystemLocale\n                        )\n                    ) {\n                        State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.WARNING_CONFIRM);\n                    } else {\n                        State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                });\n            });\n        },\n\n        onFinishWithoutErrors() {\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.RESULT_SUCCESS);\n            this.$root.$emit('sales-channel-change');\n            this.$root.$emit('on-change-notification-center-visibility', true);\n        },\n\n        onCloseAbortMigrationConfirmDialog() {\n            this.showAbortMigrationConfirmDialog = false;\n\n            if (!this.isPausedBeforeAbortDialog) {\n                this.$nextTick(() => {\n                    this.onContinueButtonClick();\n                });\n            }\n        },\n\n        /**\n         * Check if a takeover is allowed, takeover migration and restore state\n         */\n        async onTakeoverMigration() {\n            State.commit('swagMigration/process/setIsMigrating', true);\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (this.isTakeoverForbidden) {\n                return;\n            }\n\n            await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                    return;\n                }\n\n                this.migrationWorkerService.takeoverMigration(runState.runUuid).then(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.migrationWorkerService.restoreRunningMigration();\n                    this.restoreRunningMigration();\n                });\n            });\n        },\n\n        /**\n         * Abort the running migration on the other client so this client can start a new one.\n         */\n        async onAbortOtherMigration() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n            State.commit('swagMigration/process/setIsMigrating', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (this.isTakeoverForbidden) {\n                return;\n            }\n\n            await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                    return;\n                }\n\n                this.migrationService.abortMigration(runState.runUuid).then(() => {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            });\n        },\n\n        /**\n         * If the current migration was interrupted through a takeover, pause or stop\n         *\n         * @param {number} type\n         */\n        onInterrupt(type) {\n            if (type === WORKER_INTERRUPT_TYPE.TAKEOVER) {\n                this.onConfiscatedMigration();\n            } else if (type === WORKER_INTERRUPT_TYPE.STOP) {\n                this.onStop();\n            } else if (type === WORKER_INTERRUPT_TYPE.PAUSE) {\n                this.onPause();\n            } else if (type === WORKER_INTERRUPT_TYPE.CONNECTION_LOST) {\n                this.onConnectionLost();\n            }\n        },\n\n        /**\n         * If the current migration was confiscated by a takeover from another client\n         */\n        onConfiscatedMigration() {\n            this.onInvalidMigrationAccessToken();\n            this.isMigrationInterrupted = true;\n            this.$nextTick(() => {\n                this.$refs.loadingScreenTakeover.refreshState();\n            });\n        },\n\n        /**\n         * If the current migration was stopped\n         */\n        onStop() {\n            return this.migrationService.abortMigration(this.runId).then(() => {\n                this.showAbortMigrationConfirmDialog = false;\n                this.isMigrationInterrupted = false;\n                State.commit('swagMigration/process/setIsMigrating', false);\n                State.commit('swagMigration/ui/setIsPaused', false);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                this.$nextTick(() => {\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            });\n        },\n\n        /**\n         * If the current migration was paused\n         */\n        onPause() {\n            this.isMigrationInterrupted = false;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', true);\n            State.commit('swagMigration/ui/setIsLoading', false);\n            this.isOtherMigrationRunning = false;\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PAUSE_SCREEN);\n        },\n\n        onConnectionLost() {\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', false);\n            State.commit('swagMigration/ui/setDataSelectionIds', []);\n            State.commit('swagMigration/ui/setDataSelectionTableData', []);\n            State.commit('swagMigration/ui/setIsLoading', false);\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.CONNECTION_LOST);\n        },\n\n        /**\n         * If the current accessToken is invalid and a migration is running\n         */\n        onInvalidMigrationAccessToken() {\n            this.displayFlowChart = false;\n            this.isMigrationInterrupted = false;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', false);\n            this.isOtherMigrationRunning = true;\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.TAKEOVER);\n            State.commit('swagMigration/ui/setIsLoading', false);\n        },\n\n        onWarningConfirmationChanged(confirmed) {\n            this.isWarningConfirmed = confirmed;\n        },\n\n        onProcessMediaFiles() {\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.MEDIA_SCREEN);\n        },\n    },\n});\n","export default \"{% block swag_migration_process_screen %}\\n    <sw-page class=\\\"swag-migration-process-screen\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n\\n                {% block swag_migration_index_smart_bar_abort_button %}\\n                    <sw-button v-if=\\\"abortButtonVisible\\\" @click=\\\"onAbortButtonClick\\\">\\n                        {{ $tc('swag-migration.index.abortButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_back_button %}\\n                    <sw-button v-if=\\\"backButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               @click=\\\"onBackButtonClick\\\">\\n                        {{ $tc('swag-migration.index.backButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_pause_button %}\\n                    <sw-button v-if=\\\"pauseButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               :disabled=\\\"pauseButtonDisabled\\\"\\n                               @click=\\\"onPauseButtonClick\\\">\\n                        {{ $tc('swag-migration.index.pauseButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_continue_button %}\\n                    <sw-button v-if=\\\"continueButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               @click=\\\"onContinueButtonClick\\\">\\n                        {{ $tc('swag-migration.index.continueButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_button_group %}\\n                    <sw-button-group\\n                        v-if=\\\"startButtonVisible\\\"\\n                        :splitButton=\\\"true\\\">\\n\\n                        {% block swag_migration_index_smart_bar_start_button %}\\n                            <sw-button variant=\\\"primary\\\"\\n                                       :disabled=\\\"startButtonDisabled\\\"\\n                                       @click=\\\"onStartButtonClick\\\">\\n                                {{ $tc('swag-migration.index.startButton') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_smart_bar_context_button %}\\n                            <sw-context-button :disabled=\\\"isLoading\\\">\\n                                <template slot=\\\"button\\\">\\n\\n                                    {% block swag_migration_index_smart_bar_context_button_content %}\\n                                        <sw-button square\\n                                            variant=\\\"primary\\\"\\n                                            :disabled=\\\"isLoading\\\">\\n                                            <sw-icon name=\\\"regular-chevron-down-xs\\\"></sw-icon>\\n                                        </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                {% block swag_migration_index_smart_bar_premapping_save_button %}\\n                                    <sw-context-menu-item @click=\\\"onSaveButtonClick\\\"\\n                                                          :disabled=\\\"isLoading\\\">\\n                                        {{ $tc('swag-migration.index.savePremapping.saveButton') }}\\n                                    </sw-context-menu-item>\\n                                {% endblock %}\\n                            </sw-context-button>\\n                        {% endblock %}\\n\\n                    </sw-button-group>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        <template #content>\\n            <sw-card-view v-if=\\\"!isLoading\\\" class=\\\"swag-migration-process-screen\\\">\\n\\n                {% block swag_migration_index_main_page_flow_chart %}\\n                    <sw-step-display v-if=\\\"displayFlowChart && componentIndex !== UI_COMPONENT_INDEX.WARNING_CONFIRM\\\"\\n                                     class=\\\"swag-migration-process-screen__step-display\\\"\\n                                     :itemIndex=\\\"flowChartItemIndex\\\"\\n                                     :itemVariant=\\\"flowChartItemVariant\\\"\\n                                     :initialItemVariants=\\\"flowChartInitialItemVariants\\\">\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.premapping') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.fetchData') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.writeData') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.processMedia') }}\\n                        </sw-step-item>\\n                        <sw-step-item disabledIcon=\\\"regular-checkmark-xs\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.finish') }}\\n                        </sw-step-item>\\n                    </sw-step-display>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_confirm_warning %}\\n                    <swag-migration-confirm-warning v-if=\\\"componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM\\\"\\n                                                    class=\\\"swag-migration-process-screen__confirm-warning\\\"\\n                                                    @confirmation-change=\\\"onWarningConfirmationChanged\\\">\\n                    </swag-migration-confirm-warning>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_premapping %}\\n                    <swag-migration-premapping v-if=\\\"componentIndex === UI_COMPONENT_INDEX.PREMAPPING\\\">\\n                    </swag-migration-premapping>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen %}\\n                    <swag-migration-loading-screen\\n                            v-if=\\\"componentIndex === UI_COMPONENT_INDEX.LOADING_SCREEN || componentIndex === UI_COMPONENT_INDEX.PAUSE_SCREEN\\\">\\n                    </swag-migration-loading-screen>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_media %}\\n                    <swag-migration-media-process v-if=\\\"componentIndex === UI_COMPONENT_INDEX.MEDIA_SCREEN\\\">\\n                    </swag-migration-media-process>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_success %}\\n                    <swag-migration-result-screen v-if=\\\"componentIndex === UI_COMPONENT_INDEX.RESULT_SUCCESS\\\"\\n                                                  :runId=\\\"runId\\\">\\n                    </swag-migration-result-screen>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_takeover %}\\n                    <swag-migration-loading-screen-takeover v-if=\\\"componentIndex === UI_COMPONENT_INDEX.TAKEOVER\\\"\\n                                                            ref=\\\"loadingScreenTakeover\\\"\\n                                                            :isTakeoverForbidden=\\\"isTakeoverForbidden\\\"\\n                                                            :isMigrationInterrupted=\\\"isMigrationInterrupted\\\"\\n                                                            @onTakeoverMigration=\\\"onTakeoverMigration\\\"\\n                                                            @onAbortMigration=\\\"onAbortOtherMigration\\\">\\n                    </swag-migration-loading-screen-takeover>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_connectionLost %}\\n                    <swag-migration-loading-screen-connection-lost v-if=\\\"componentIndex === UI_COMPONENT_INDEX.CONNECTION_LOST\\\">\\n                    </swag-migration-loading-screen-connection-lost>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog %}\\n                    <sw-modal v-if=\\\"showAbortMigrationConfirmDialog\\\"\\n                              class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog\\\"\\n                              :title=\\\"$tc('swag-migration.index.confirmAbortDialog.title')\\\"\\n                              variant=\\\"small\\\"\\n                              @modal-close=\\\"onCloseAbortMigrationConfirmDialog\\\">\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message %}\\n                            <p class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog-content\\\">\\n                                {{ $tc('swag-migration.index.confirmAbortDialog.content') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message_hint %}\\n                            <p class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog-hint\\\">\\n                                {{ $tc('swag-migration.index.confirmAbortDialog.hint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_cancelAction %}\\n                                    <sw-button size=\\\"small\\\" @click=\\\"onCloseAbortMigrationConfirmDialog\\\">\\n                                        {{ abortMigrationBackText }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_confirmAction %}\\n                                    <sw-button variant=\\\"primary\\\" size=\\\"small\\\" @click=\\\"onStop\\\">\\n                                        {{ $tc('swag-migration.index.confirmAbortDialog.confirm') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n            </sw-card-view>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_wizard %}\\n    <div class=\\\"swag-migration-wizard\\\">\\n        <sw-modal v-if=\\\"showModal\\\"\\n                  class=\\\"swag-migration-wizard__modal\\\"\\n                  :size=\\\"modalSize\\\"\\n                  :title=\\\"$tc(modalTitleSnippet)\\\"\\n                  :isLoading=\\\"isLoading\\\"\\n                  @modal-close=\\\"onCloseModal\\\">\\n\\n            {% block swag_migration_wizard_placeholder %}\\n                <div v-show=\\\"isLoading || childIsLoading\\\" class=\\\"swag-migration-wizard__placeholder\\\"></div>\\n            {% endblock %}\\n\\n            {% block swag_migration_router_view %}\\n                <router-view\\n                        v-show=\\\"!isLoading && !childIsLoading\\\"\\n                        :currentConnectionId=\\\"connection.id\\\"\\n                        :profileInformationComponent=\\\"profileInformationComponent\\\"\\n                        :credentialsComponent=\\\"credentialsComponent\\\"\\n                        :credentials=\\\"connection.credentialFields\\\"\\n                        :errorMessageSnippet=\\\"errorMessageSnippet\\\"\\n                        :connectionNameErrorCode=\\\"connectionNameErrorCode\\\"\\n                        @onChildRouteReadyChanged=\\\"onChildRouteReadyChanged\\\"\\n                        @onTriggerPrimaryClick=\\\"triggerPrimaryClick\\\"\\n                        @onProfileSelected=\\\"onProfileSelected\\\"\\n                        @onChangeConnectionName=\\\"onChangeConnectionName\\\"\\n                        @onConnectionSelected=\\\"onConnectionSelected\\\"\\n                        @onCredentialsChanged=\\\"onCredentialsChanged\\\"\\n                        @onIsLoadingChanged=\\\"onChildIsLoadingChanged\\\">\\n                </router-view>\\n            {% endblock %}\\n\\n            <template #modal-footer class=\\\"swag-migration-wizard__footer\\\">\\n\\n                {% block swag_migration_wizard_footer %}\\n\\n                    {% block swag_migration_wizard_arrow %}\\n                        <div class=\\\"swag-migration-wizard__left-actions\\\">\\n                            <sw-button v-show=\\\"buttonBackVisible\\\"\\n                                       class=\\\"swag-migration-wizard__buttonBack\\\"\\n                                       size=\\\"small\\\"\\n                                       @click=\\\"onButtonBackClick\\\">\\n                                {{ $tc(buttonBackSnippet) }}\\n                            </sw-button>\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_actions %}\\n                        <div class=\\\"swag-migration-wizard__right-actions\\\">\\n\\n                            {% block swag_migration_wizard_actions_previous %}\\n                                <sw-button v-show=\\\"buttonSecondaryVisible\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onButtonSecondaryClick\\\">\\n                                    {{ $tc(buttonSecondarySnippet) }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_actions_next %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"buttonPrimaryDisabled\\\"\\n                                           ref=\\\"primaryButton\\\"\\n                                           @click=\\\"onButtonPrimaryClick\\\">\\n                                    {{ $tc(buttonPrimarySnippet) }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                {% endblock %}\\n            </template>\\n\\n        </sw-modal>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard.html.twig';\nimport './swag-migration-wizard.scss';\n\nconst { Component, Mixin, State } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst SSL_REQUIRED_ERROR_CODE = 'SWAG_MIGRATION__SSL_REQUIRED';\n\nconst CONNECTION_NAME_ERRORS = Object.freeze({\n    NAME_TO_SHORT: 'SWAG_MIGRATION_CONNECTION_NAME_TO_SHORT',\n    NAME_ALREADY_EXISTS: 'SWAG_MIGRATION_CONNECTION_NAME_ALREADY_EXISTS',\n});\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    mixins: [\n        Mixin.getByName('swag-wizard'),\n    ],\n\n    data() {\n        const routes = this.getRoutes();\n\n        return {\n            context: Shopware.Context.api,\n            showModal: true,\n            isLoading: true,\n            childIsLoading: false,\n            routes,\n            connection: {},\n            connectionName: '',\n            selectedProfile: {},\n            childRouteReady: false, // child routes with forms will emit and change this value depending on their validation.\n            errorMessageSnippet: '',\n            connectionNameErrorCode: '',\n            currentErrorCode: '',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n\n        migrationGeneralSettingRepository() {\n            return this.repositoryFactory.create('swag_migration_general_setting');\n        },\n\n        modalSize() {\n            if ([\n                this.routes.credentialsSuccess,\n                this.routes.credentialsError,\n            ].includes(this.currentRoute)) {\n                return '460px';\n            }\n\n            return '688px';\n        },\n\n        modalTitleSnippet() {\n            return this.currentRoute.titleSnippet;\n        },\n\n        buttonBackSnippet() {\n            return 'swag-migration.wizard.buttonToProfileInformation';\n        },\n\n        buttonBackVisible() {\n            return (\n                !this.isLoading &&\n                this.currentRoute === this.routes.credentials &&\n                this.profileInformationComponentIsLoaded\n            );\n        },\n\n        buttonSecondarySnippet() {\n            if (this.currentRoute === this.routes.credentialsError) {\n                return 'swag-migration.wizard.buttonLater';\n            }\n\n            return 'swag-migration.wizard.buttonAbort';\n        },\n\n        buttonSecondaryVisible() {\n            return (this.currentRoute !== this.routes.credentialsSuccess);\n        },\n\n        buttonPrimarySnippet() {\n            if (this.currentRoute === this.routes.introduction) {\n                return 'swag-migration.wizard.buttonLetsGo';\n            }\n\n            if (this.currentRoute === this.routes.connectionCreate) {\n                return 'swag-migration.wizard.buttonConnectionCreate';\n            }\n\n            if (this.currentRoute === this.routes.connectionSelect) {\n                return 'swag-migration.wizard.buttonConnectionSelect';\n            }\n\n            if (this.currentRoute === this.routes.credentials) {\n                return 'swag-migration.wizard.buttonConnect';\n            }\n\n            if (this.currentRoute === this.routes.credentialsSuccess) {\n                return 'swag-migration.wizard.buttonFinish';\n            }\n\n            if (this.currentRoute === this.routes.credentialsError) {\n                if (this.currentErrorCode === SSL_REQUIRED_ERROR_CODE) {\n                    return 'swag-migration.wizard.buttonUseSsl';\n                }\n\n                return 'swag-migration.wizard.buttonEdit';\n            }\n\n            return 'swag-migration.wizard.buttonNext';\n        },\n\n        buttonPrimaryDisabled() {\n            if ([\n                this.routes.credentials,\n                this.routes.connectionCreate,\n                this.routes.connectionSelect,\n            ].includes(this.currentRoute)) {\n                return !this.childRouteReady || this.isLoading;\n            }\n\n            return this.isLoading;\n        },\n\n        profileInformationComponent() {\n            if (!this.connection || !this.connection.profileName || !this.connection.gatewayName) {\n                return '';\n            }\n\n            return `swag-migration-profile-${this.connection.profileName}-` +\n                `${this.connection.gatewayName}-page-information`;\n        },\n\n        profileInformationComponentIsLoaded() {\n            return Component.getComponentRegistry().has(this.profileInformationComponent);\n        },\n\n        credentialsComponent() {\n            if (!this.connection || !this.connection.profileName || !this.connection.gatewayName) {\n                return '';\n            }\n\n            return `swag-migration-profile-${this.connection.profileName}-${this.connection.gatewayName}-credential-form`;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    /**\n     * Close modal and after it is closed we redirect to next route.\n     * (note: without closing it first the sw-modal will stay in the DOM)\n     *\n     * @param to\n     * @param from\n     * @param next\n     */\n    beforeRouteLeave(to, from, next) {\n        this.showModal = false;\n        this.$nextTick(() => {\n            next();\n        });\n    },\n\n    methods: {\n        createdComponent() {\n            return this.loadSelectedConnection(this.$route.params.connectionId).then(() => {\n                this.onChildRouteChanged(); // update strings for current child\n                this.isLoading = false;\n            });\n        },\n\n        getRoutes() {\n            return {\n                introduction: {\n                    name: 'swag.migration.wizard.introduction',\n                    index: 0,\n                    titleSnippet: 'swag-migration.wizard.pages.introduction.title',\n                },\n                profileInstallation: {\n                    name: 'swag.migration.wizard.profileInstallation',\n                    index: 0.1,\n                    titleSnippet: 'swag-migration.wizard.pages.profileInstallation.title',\n                },\n                connectionCreate: {\n                    name: 'swag.migration.wizard.connectionCreate',\n                    index: 0.2, // not available through nextRoute (child from profile)\n                    titleSnippet: 'swag-migration.wizard.pages.connectionCreate.title',\n                },\n                connectionSelect: {\n                    name: 'swag.migration.wizard.connectionSelect',\n                    index: 0.3, // not available through nextRoute (child from profile)\n                    titleSnippet: 'swag-migration.wizard.pages.connectionSelect.title',\n                },\n                profileInformation: {\n                    name: 'swag.migration.wizard.profileInformation',\n                    index: 1,\n                    titleSnippet: 'swag-migration.wizard.pages.profileInformation.title',\n                },\n                credentials: {\n                    name: 'swag.migration.wizard.credentials',\n                    index: 2,\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.title',\n                },\n                credentialsSuccess: {\n                    name: 'swag.migration.wizard.credentialsSuccess',\n                    index: 2.1, // not available through nextRoute (child from credentials)\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.statusTitle',\n                },\n                credentialsError: {\n                    name: 'swag.migration.wizard.credentialsError',\n                    index: 2.1, // not available through nextRoute (child from credentials)\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.statusTitle',\n                },\n            };\n        },\n\n        /**\n         * Remove any whitespaces before or after the strings in the credentials object.\n         */\n        trimCredentials() {\n            Object.keys(this.connection.credentialFields).forEach((field) => {\n                this.connection.credentialFields[field] = this.connection.credentialFields[field].trim();\n            });\n        },\n\n        onConnect() {\n            this.isLoading = true;\n            this.errorMessageSnippet = '';\n\n            this.trimCredentials();\n            return this.migrationService.updateConnectionCredentials(\n                this.connection.id,\n                this.connection.credentialFields,\n            ).then((response) => {\n                if (response.errors && response.errors.length > 0) {\n                    this.isLoading = false;\n                    this.onResponseError('');\n                }\n\n                return this.doConnectionCheck();\n            }).catch((error) => {\n                this.isLoading = false;\n                this.onResponseError(error.response.data.errors[0].code);\n            });\n        },\n\n        doConnectionCheck() {\n            this.isLoading = true;\n            return this.migrationService.checkConnection(this.connection.id).then((connectionCheckResponse) => {\n                State.commit('swagMigration/process/setConnectionId', this.connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                this.isLoading = false;\n\n                if (!connectionCheckResponse) {\n                    this.onResponseError(-1);\n                    return;\n                }\n                State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n\n                if (connectionCheckResponse.requestStatus === undefined) {\n                    this.navigateToRoute(this.routes.credentialsSuccess);\n                    return;\n                }\n\n                if (\n                    connectionCheckResponse.requestStatus.code !== '' &&\n                    connectionCheckResponse.requestStatus.isWarning === false\n                ) {\n                    this.onResponseError(connectionCheckResponse.requestStatus.code);\n                    return;\n                }\n\n                // create warning for success page\n                this.errorMessageSnippet = '';\n                if (\n                    connectionCheckResponse.requestStatus.code !== '' &&\n                    connectionCheckResponse.requestStatus.isWarning === true\n                ) {\n                    this.errorMessageSnippet =\n                        `swag-migration.wizard.pages.credentials.success.${connectionCheckResponse.requestStatus.code}`;\n                }\n\n                this.navigateToRoute(this.routes.credentialsSuccess);\n            }).catch((error) => {\n                this.isLoading = false;\n                State.commit('swagMigration/process/setConnectionId', this.connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                State.commit('swagMigration/process/setEnvironmentInformation', {});\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n                this.onResponseError(error.response.data.errors[0].code);\n            });\n        },\n\n        onResponseError(errorCode) {\n            if (errorCode !== '') {\n                this.errorMessageSnippet = `swag-migration.wizard.pages.credentials.error.${errorCode}`;\n            } else {\n                this.errorMessageSnippet = '';\n            }\n\n            if (this.errorMessageSnippet === this.$tc(`swag-migration.wizard.pages.credentials.error.${errorCode}`)) {\n                this.errorMessageSnippet = 'swag-migration.wizard.pages.credentials.error.undefinedErrorMsg';\n            }\n\n            this.currentErrorCode = errorCode;\n\n            this.navigateToRoute(this.routes.credentialsError);\n        },\n\n        onCloseModal() {\n            this.showModal = false;\n\n            // navigate depending on the current state\n            if (Object.keys(this.connection).length) {\n                // navigate to module\n                this.$router.push({\n                    name: 'swag.migration.index',\n                    params: { connectionId: this.connection.id },\n                });\n\n                return;\n            }\n\n            this.$router.push({\n                name: 'swag.migration.emptyScreen',\n            });\n        },\n\n        onChildRouteChanged() {\n            this.checkForDisabledRoute();\n            if ([\n                this.routes.credentialsSuccess,\n                this.routes.credentialsError,\n            ].includes(this.currentRoute)) {\n                this.$nextTick(() => {\n                    this.$refs.primaryButton.$el.focus();\n                });\n            } else {\n                this.$refs.primaryButton.$el.focus();\n            }\n        },\n\n        checkForDisabledRoute() {\n            if (!Object.keys(this.connection).length) {\n                // there is no connection selected. redirect to the selection\n                this.onNoConnectionSelected();\n                return;\n            }\n\n            if (!this.profileInformationComponentIsLoaded) {\n                if (this.currentRoute === this.routes.profileInformation) {\n                    this.navigateToRoute(this.routes.credentials);\n                }\n\n                // make the profileInformation route a child if there is no component\n                // so navigation to this route is not possible for the user\n                this.routes.profileInformation.index = 0.1;\n            }\n        },\n\n        onButtonBackClick() {\n            this.navigateToRoute(this.routes.profileInformation);\n        },\n\n        onButtonSecondaryClick() {\n            // Abort / Later\n            this.onCloseModal();\n        },\n\n        triggerPrimaryClick() {\n            if (!this.buttonPrimaryDisabled) {\n                this.onButtonPrimaryClick();\n            }\n        },\n\n        onButtonPrimaryClick() {\n            if (this.currentRoute === this.routes.connectionCreate) {\n                // clicked Next (save selected profile)\n                this.createNewConnection().then(() => {\n                    this.navigateToNext();\n                }).catch(() => {\n                    this.connectionNameErrorCode = CONNECTION_NAME_ERRORS.NAME_ALREADY_EXISTS;\n                    this.isLoading = false;\n                });\n                return;\n            }\n\n            if (this.currentRoute === this.routes.connectionSelect) {\n                this.saveSelectedConnection(this.connection).then(() => {\n                    this.doConnectionCheck();\n                });\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentials) {\n                // clicked Connect.\n                this.onConnect();\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentialsSuccess) {\n                // clicked Finish.\n                this.onCloseModal();\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentialsError) {\n                if (this.currentErrorCode === SSL_REQUIRED_ERROR_CODE) {\n                    this.connection.credentialFields.endpoint = this.connection.credentialFields.endpoint.replace('http:', 'https:');\n                    this.onConnect();\n                    return;\n                }\n\n                // clicked Edit\n                this.navigateToRoute(this.routes.credentials);\n                return;\n            }\n\n            if (this.currentRoute === this.routes.profileInstallation) {\n                this.navigateToRoute(this.routes.connectionCreate);\n                return;\n            }\n\n            this.navigateToNext();\n        },\n\n        loadSelectedConnection(connectionId) {\n            return new Promise((resolve) => {\n                // resolve if connection is already loaded\n                if (Object.keys(this.connection).length) {\n                    resolve();\n                    return;\n                }\n\n                this.isLoading = true;\n\n                if (connectionId !== undefined) {\n                    this.fetchConnection(connectionId).then(() => {\n                        resolve();\n                    });\n                    return;\n                }\n\n                const criteria = new Criteria(1, 1);\n                this.migrationGeneralSettingRepository.search(criteria, this.context).then((items) => {\n                    if (items.length < 1) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    if (items.first().selectedConnectionId === null) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    this.fetchConnection(items.first().selectedConnectionId);\n                });\n            });\n        },\n\n        fetchConnection(connectionId) {\n            return new Promise((resolve) => {\n                const criteria = new Criteria(1, 1);\n                criteria.addFilter(Criteria.equals('id', connectionId));\n\n                this.migrationConnectionRepository.search(criteria, this.context).then((connectionResponse) => {\n                    if (connectionResponse.length === 0 || connectionResponse.first().id === null) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    this.connection = connectionResponse.first();\n                    this.isLoading = false;\n                    resolve();\n                });\n            });\n        },\n\n        onNoConnectionSelected() {\n            if ([\n                this.routes.chooseAction,\n                this.routes.profileInformation,\n                this.routes.credentials,\n                this.routes.credentialsSuccess,\n                this.routes.credentialsError,\n            ].includes(this.currentRoute)) {\n                this.navigateToRoute(this.routes.profileInstallation);\n            }\n        },\n\n        createNewConnection() {\n            this.isLoading = true;\n            return this.checkConnectionName(this.connectionName).then((valid) => {\n                if (!valid) {\n                    this.isLoading = false;\n                    return Promise.reject();\n                }\n\n                this.connectionNameErrorCode = '';\n                const newConnection = this.migrationConnectionRepository.create(this.context);\n                newConnection.profileName = this.selectedProfile.profile;\n                newConnection.gatewayName = this.selectedProfile.gateway;\n                newConnection.name = this.connectionName;\n                return this.migrationConnectionRepository.save(newConnection, this.context).then(() => {\n                    return this.saveSelectedConnection(newConnection);\n                });\n            });\n        },\n\n        checkConnectionName(name) {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('name', name));\n\n            return this.migrationConnectionRepository.search(criteria, this.context).then((res) => {\n                return res.length === 0;\n            });\n        },\n\n        saveSelectedConnection(connection) {\n            return new Promise((resolve, reject) => {\n                this.isLoading = true;\n\n                State.commit('swagMigration/process/setConnectionId', connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                State.commit('swagMigration/process/setEnvironmentInformation', {});\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n\n                const criteria = new Criteria(1, 1);\n\n                this.migrationGeneralSettingRepository.search(criteria, this.context).then((items) => {\n                    if (items.length < 1) {\n                        this.isLoading = false;\n                        reject();\n                        return;\n                    }\n\n                    const setting = items.first();\n                    setting.selectedConnectionId = connection.id;\n                    this.migrationGeneralSettingRepository.save(setting, this.context).then(() => {\n                        this.connection = connection;\n                        this.isLoading = false;\n                        resolve();\n                    }).catch(() => {\n                        this.isLoading = false;\n                        reject();\n                    });\n                }).catch(() => {\n                    this.isLoading = false;\n                    reject();\n                });\n            });\n        },\n\n        onChildRouteReadyChanged(value) {\n            this.childRouteReady = value;\n        },\n\n        onCredentialsChanged(value) {\n            this.connection.credentialFields = value;\n        },\n\n        onProfileSelected(value) {\n            this.selectedProfile = value;\n        },\n\n        onChangeConnectionName(value) {\n            this.connectionName = value;\n            if (this.connectionName !== null && this.connectionName.length > 5) {\n                this.connectionNameErrorCode = '';\n                return;\n            }\n\n            this.connectionNameErrorCode = CONNECTION_NAME_ERRORS.NAME_TO_SHORT;\n        },\n\n        onChildIsLoadingChanged(value) {\n            this.childIsLoading = value;\n        },\n\n        onConnectionSelected(value) {\n            this.connection = value;\n        },\n    },\n});\n","import template from './swag-migration-wizard-page-introduction.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-introduction', {\n    template,\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_introduction %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-introduction\\\">\\n\\n        {% block swag_migration_wizard_page_introduction_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_introduction_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_introduction_svg %}\\n                            <img class=\\\"swag-migration-wizard__illustration\\\" :src=\\\"'/swagmigrationassistant/static/img/wizard-introduction.svg' | asset\\\">\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_introduction_api_hint %}\\n                            <h3 class=\\\"swag-migration-wizard__headline\\\">\\n                                {{ $tc('swag-migration.wizard.pages.introduction.contentHeadline') }}\\n                            </h3>\\n\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.introduction.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","export default \"{% block swag_migration_wizard_page_profile_installation %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-profile-installation\\\">\\n\\n        {% block swag_migration_wizard_page_profile_installation_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_profile_installation_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n                        {{ $tc('swag-migration.wizard.pages.profileInstallation.content') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_profile_installation_plugins %}\\n                    <div class=\\\"swag-migration-wizard-profile-installation__plugins\\\">\\n\\n                        {% block swag_migration_wizard_page_profile_installation_availabilty_headline %}\\n                            <div class=\\\"swag-migration-wizard-profile-installation__availability-headline\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInstallation.availabilityHeadline') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_profile_installation_wrapper %}\\n                            <div class=\\\"swag-migration-wizard-profile-installation__wrapper\\\">\\n\\n                                {% block swag_migration_wizard_page_profile_installation_shopware_inner_wrapper %}\\n                                    <div class=\\\"swag-migration-wizard-profile-installation__inner_wrapper\\\">\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_shopware_plugin_icon %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_icon_column\\\">\\n                                                <img class=\\\"swag-migration-wizard-profile-installation__plugin-icon\\\"\\n                                                     :src=\\\"'/swagmigrationassistant/static/img/wizard-shopware6-profile-avatar.svg'|asset\\\">\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_shopware_plugin_information %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_information_column\\\">\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_headline\\\">\\n                                                         {{ $tc('swag-migration.wizard.pages.profileInstallation.shopwareProfileHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_manufacturer %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_manufacturer\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_available_version_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_available_version_list %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_list\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.4</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.5</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.6</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.7</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">6.3</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__last_version_box\\\">6.4</span>\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_installed_box %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__installed_img\\\">\\n                                                            <sw-icon name=\\\"regular-check-circle-s\\\" size=\\\"16px\\\"></sw-icon>\\n                                                        </span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__installed_title\\\">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span>\\n                                                    </div>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_wizard_page_profile_installation_magento_inner_wrapper %}\\n                                    <div class=\\\"swag-migration-wizard-profile-installation__shopware-plugin swag-migration-wizard-profile-installation__inner_wrapper\\\">\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_magento_plugin_icon %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_icon_column\\\">\\n                                                <img class=\\\"swag-migration-wizard-profile-installation__plugin-icon\\\"\\n                                                     :src=\\\"'/swagmigrationassistant/static/img/magento-profile-icon.svg'|asset\\\">\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_magento_plugin_information %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_information_column\\\">\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.magentoProfileHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_manufacturer %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_manufacturer\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_available_version_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_available_version_list %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_list\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">1.9</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.0</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.1</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.2</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__last_version_box\\\">2.3</span>\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_install_button_box %}\\n                                                    <div v-if=\\\"!isInstalled\\\" class=\\\"swag-migration-wizard-profile-installation__footer\\\">\\n\\n                                                        {% block swag_migration_wizard_page_profile_installation_magento_install_button_box_content %}\\n                                                            <sw-button-process\\n                                                                    class=\\\"swag-migration-wizard-profile-installation__installation_button\\\"\\n                                                                    size=\\\"small\\\"\\n                                                                    variant=\\\"primary\\\"\\n                                                                    :isLoading=\\\"pluginIsLoading\\\"\\n                                                                    :disabled=\\\"pluginIsLoading\\\"\\n                                                                    :processSuccess=\\\"pluginIsSaveSuccessful\\\"\\n                                                                    @click=\\\"onInstall\\\">\\n                                                                {{ $tc('swag-migration.wizard.pages.profileInstallation.installationButton') }}\\n                                                            </sw-button-process>\\n                                                        {% endblock %}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_installed_box %}\\n                                                    <div v-else class=\\\"swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box\\\">\\n\\n                                                        {% block swag_migration_wizard_page_profile_installation_magento_installed_box_content %}\\n                                                            <span class=\\\"swag-migration-wizard-profile-installation__installed_img\\\">\\n                                                                <sw-icon name=\\\"regular-check-circle-s\\\" size=\\\"16px\\\"></sw-icon>\\n                                                            </span>\\n                                                            <span class=\\\"swag-migration-wizard-profile-installation__installed_title\\\">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span>\\n                                                        {% endblock %}\\n                                                    </div>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-profile-installation.html.twig';\nimport './swag-migration-wizard-page-profile-installation.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-profile-installation', {\n    template,\n\n    inject: ['storeService', 'extensionHelperService', 'cacheApiService', 'repositoryFactory'],\n\n    data() {\n        return {\n            pluginIsLoading: false,\n            pluginIsSaveSuccessful: false,\n            isInstalled: false,\n            pluginName: 'SwagMigrationMagento',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        pluginRepository() {\n            return this.repositoryFactory.create('plugin');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.refreshPlugin();\n        },\n\n        refreshPlugin() {\n            const pluginCriteria = new Criteria();\n            pluginCriteria.addFilter(Criteria.equals('plugin.name', this.pluginName))\n                .addFilter(Criteria.equals('plugin.active', true))\n                .setLimit(1);\n\n            return this.pluginRepository.search(pluginCriteria, Shopware.Context.api).then((result) => {\n                if (result.total < 1) {\n                    return;\n                }\n\n                this.isInstalled = true;\n            });\n        },\n\n        onInstall() {\n            this.setupPlugin();\n        },\n\n        setupPlugin() {\n            this.pluginIsLoading = true;\n            this.pluginIsSaveSuccessful = false;\n\n            return this.extensionHelperService.downloadStoreExtension(this.pluginName)\n                .then(() => {\n                    this.pluginIsSaveSuccessful = true;\n\n                    return this.extensionHelperService.installStoreExtension(this.pluginName, 'plugin');\n                })\n                .then(() => {\n                    return this.extensionHelperService.activateStoreExtension(this.pluginName, 'plugin');\n                })\n                .finally(() => {\n                    this.pluginIsLoading = false;\n                    this.cacheApiService.clear().then(() => {\n                        window.location.reload();\n                    });\n                });\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_select_profile %}\\n    <div class=\\\"swag-migration-wizard-page-select-profile\\\">\\n\\n        {% block swag_migration_wizard_page_select_profile_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_select_profile_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_select_profile_description %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.connectionSelect.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_select_profile_selection %}\\n                    <div class=\\\"swag-migration-wizard__form\\\">\\n                        <sw-select-field v-model=\\\"selectedConnectionId\\\"\\n                                         :options=\\\"connections\\\"\\n                                         :label=\\\"$tc('swag-migration.wizard.pages.connectionSelect.connectionLabel')\\\"\\n                                         :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionSelect.connectionPlaceholder')\\\"\\n                                         @change=\\\"onConnectionSelected\\\">\\n                        </sw-select-field>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-wizard-page-connection-select.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-connection-select', {\n    template,\n\n    inject: {\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    props: {\n        currentConnectionId: {\n            type: String,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            selectedConnectionId: null,\n            connections: [],\n            context: Shopware.Context.api,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n    },\n\n    watch: {\n        currentConnectionId: {\n            immediate: true,\n            handler(newConnectionId) {\n                this.selectedConnectionId = newConnectionId;\n                this.onConnectionSelected();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('onChildRouteReadyChanged', false);\n            const criteria = new Criteria(1, 100);\n\n            return this.migrationConnectionRepository.search(criteria, this.context).then((items) => {\n                this.connections = items;\n                this.onConnectionSelected();\n            });\n        },\n\n        onConnectionSelected() {\n            const connection = this.connections.find((con) => {\n                return con.id === this.selectedConnectionId;\n            });\n\n            if (connection) {\n                this.$emit('onChildRouteReadyChanged', true);\n                this.$emit('onConnectionSelected', connection);\n            } else {\n                this.$emit('onChildRouteReadyChanged', false);\n            }\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_create_profile %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-create-profile\\\"\\n         @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n        {% block swag_migration_wizard_page_create_profile_content %}\\n            <div v-if=\\\"!isLoading\\\" class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_create_profile_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_create_profile_content_information %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.connectionCreate.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_create_profile_selection %}\\n                    <div class=\\\"swag-migration-wizard__form\\\">\\n                        <sw-text-field v-autofocus\\n                                       v-model=\\\"selection.connectionName\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionPlaceholder')\\\"\\n                                       validation=\\\"required\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionTooltip')\\\"\\n                                       :error=\\\"connectionNameError\\\"\\n                                       @input=\\\"onChangeConnectionName\\\">\\n                        </sw-text-field>\\n\\n                        <sw-single-select :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.profileLabel')\\\"\\n                                          :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.profilePlaceholder')\\\"\\n                                          :popoverClasses=\\\"['swag-migration-wizard-page-create-profile']\\\"\\n                                          :popoverConfig=\\\"{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}\\\"\\n                                          :options=\\\"profiles\\\"\\n                                          :value=\\\"selection.profile\\\"\\n                                          valueProperty=\\\"name\\\"\\n                                          :searchFunction=\\\"profileSearch\\\"\\n                                          validation=\\\"required\\\"\\n                                          @change=\\\"onSelectProfile\\\">\\n\\n                            {% block swag_migration_wizard_page_create_profile_form_profile_field_options %}\\n                                <template #selection-label-property=\\\"{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }\\\">\\n                                    <span v-html=\\\"getText(singleSelection)\\\"></span>\\n                                </template>\\n\\n                                <template #result-label-property=\\\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\\\">\\n                                    <div v-if=\\\"item.name === 'profileLink'\\\" class=\\\"swag-migration-wizard-create-connection__install-profile-link-wrapper\\\">\\n                                        <div>\\n                                            {{ $tc('swag-migration.wizard.pages.connectionCreate.profileInstall') }}\\n                                        </div>\\n                                        <div>\\n                                            <sw-icon name=\\\"regular-chevron-right-xs\\\" size=\\\"16\\\"></sw-icon>\\n                                        </div>\\n                                    </div>\\n                                    <span v-else v-html=\\\"getText(item)\\\"></span>\\n                                </template>\\n                            {% endblock %}\\n                        </sw-single-select>\\n\\n                        <sw-single-select :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayLabel')\\\"\\n                                          :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayPlaceholder')\\\"\\n                                          :helpText=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayTooltip')\\\"\\n                                          :popoverClasses=\\\"['swag-migration-wizard-page-create-profile']\\\"\\n                                          :popoverConfig=\\\"{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}\\\"\\n                                          :options=\\\"gateways\\\"\\n                                          :value=\\\"selection.gateway\\\"\\n                                          valueProperty=\\\"name\\\"\\n                                          :searchFunction=\\\"gatewaySearch\\\"\\n                                          validation=\\\"required\\\"\\n                                          @change=\\\"onSelectGateway\\\">\\n\\n                            {% block swag_migration_wizard_page_create_profile_form_gateway_field_options %}\\n                                <template #selection-label-property=\\\"{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }\\\">\\n                                    {{ $tc(singleSelection.snippet) }}\\n                                </template>\\n\\n                                <template #result-label-property=\\\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\\\">\\n                                    {{ $tc(item.snippet) }}\\n                                </template>\\n                            {% endblock %}\\n                        </sw-single-select>\\n\\n                        <sw-alert v-if=\\\"profileHint\\\">\\n                            {{ profileHint }}\\n                        </sw-alert>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-connection-create.html.twig';\nimport './swag-migration-wizard-page-connection-create.scss';\n\nconst { Component } = Shopware;\nconst ShopwareError = Shopware.Classes.ShopwareError;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-connection-create', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    props: {\n        connectionNameErrorCode: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            selection: {\n                profile: null,\n                gateway: null,\n                connectionName: null,\n            },\n            profiles: [],\n            gateways: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        isReady() {\n            return (\n                this.selection.profile !== null &&\n                this.selection.gateway !== null &&\n                this.selection.connectionName !== null &&\n                this.selection.connectionName.length > 5\n            );\n        },\n\n        connectionNameError() {\n            if (this.connectionNameErrorCode === '') {\n                return null;\n            }\n\n            return new ShopwareError({\n                code: this.connectionNameErrorCode,\n            });\n        },\n\n        profileHint() {\n            if (!this.selection.gateway) {\n                return '';\n            }\n\n            const snippet = `swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`;\n            if (this.$tc(snippet) !== `swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`) {\n                return this.$tc(snippet);\n            }\n\n            return '';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.setIsLoading(true);\n            this.emitOnChildRouteReadyChanged(false);\n\n            return this.migrationService.getProfiles().then((profiles) => {\n                this.profiles = profiles;\n                this.pushLinkToProfiles();\n\n                this.selectDefaultProfile();\n                this.setIsLoading(false);\n            });\n        },\n\n        pushLinkToProfiles() {\n            this.profiles.push({\n                name: 'profileLink',\n            });\n        },\n\n        profileSearch(searchParams) {\n            const searchTerm = searchParams.searchTerm;\n            return searchParams.options.filter(option => {\n                const label = `${option.sourceSystemName} ${option.version} - ${option.author}`;\n                return label.toLowerCase().includes(searchTerm.toLowerCase());\n            });\n        },\n\n        gatewaySearch(searchParams) {\n            const searchTerm = searchParams.searchTerm;\n            return searchParams.options.filter(option => {\n                const label = this.$tc(option.snippet);\n                return label.toLowerCase().includes(searchTerm.toLowerCase());\n            });\n        },\n\n        getText(item) {\n            return `${item.sourceSystemName} ${item.version} - <i>${item.author}</i>`;\n        },\n\n        selectDefaultProfile() {\n            this.onSelectProfile('shopware55').then(() => {\n                this.onSelectGateway('api');\n            });\n        },\n\n        setIsLoading(value) {\n            this.isLoading = value;\n            this.$emit('onIsLoadingChanged', this.isLoading);\n        },\n\n        onSelectProfile(value) {\n            if (this.selection.profile === value || value === null || value === undefined) {\n                return Promise.resolve();\n            }\n\n            if (value === 'profileLink') {\n                this.$router.push({ name: 'swag.migration.wizard.profileInstallation' });\n                return Promise.resolve();\n            }\n\n            this.selection.profile = value;\n\n            return new Promise((resolve) => {\n                this.emitOnChildRouteReadyChanged(false);\n                this.gateways = [];\n                this.selection.gateway = null;\n\n                if (this.selection.profile !== null) {\n                    this.migrationService.getGateways(this.selection.profile).then((gateways) => {\n                        this.gateways = gateways;\n                        this.selection.gateway = null;\n\n                        if (this.gateways.length === 1) {\n                            this.$nextTick(() => {\n                                this.selection.gateway = this.gateways[0].name;\n                                this.emitOnChildRouteReadyChanged(this.isReady);\n                            });\n                        }\n\n                        this.emitOnChildRouteReadyChanged(this.isReady);\n                        resolve();\n                    });\n                }\n            });\n        },\n\n        onSelectGateway(value) {\n            if (value !== null && value !== undefined) {\n                this.selection.gateway = value;\n            }\n\n            this.emitOnChildRouteReadyChanged(false);\n            this.$emit('onProfileSelected', this.selection);\n            this.emitOnChildRouteReadyChanged(this.isReady);\n        },\n\n        onChangeConnectionName(value) {\n            this.$emit('onChangeConnectionName', value);\n            this.emitOnChildRouteReadyChanged(this.isReady);\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_profile_information %}\\n    <div>\\n\\n        {% block swag_migration_wizard_page_profile_information_component %}\\n            <component v-if=\\\"profileInformationComponent !== '' && componentIsLoaded\\\"\\n                       :is=\\\"profileInformationComponent\\\">\\n            </component>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-wizard-page-profile-information.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-profile-information', {\n    template,\n\n    props: {\n        profileInformationComponent: {\n            type: String,\n            default: '',\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        componentIsLoaded() {\n            return Component.getComponentRegistry().has(this.profileInformationComponent);\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials %}\\n    <div class=\\\"swag-migration-wizard-page-credentials\\\">\\n\\n        {% block swag_migration_wizard_page_credentials_forms %}\\n            <component v-if=\\\"credentialsComponent !== '' && componentIsLoaded\\\"\\n                       :is=\\\"credentialsComponent\\\"\\n                       :credentials=\\\"credentials\\\"\\n                       @onCredentialsChanged=\\\"$emit('onCredentialsChanged', $event)\\\"\\n                       @onChildRouteReadyChanged=\\\"$emit('onChildRouteReadyChanged', $event)\\\"\\n                       @onTriggerPrimaryClick=\\\"$emit('onTriggerPrimaryClick')\\\">\\n            </component>\\n        {% endblock %}\\n\\n        {% block swag_migration_wizard_page_credentials_no_form_found %}\\n            <template v-else class=\\\"swag-migration-wizard-page-credentials__empty_state\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_no_form_found_content %}\\n                    <p class=\\\"swag-migration-wizard__emptyStateDescription\\\">\\n                        {{ $tc('swag-migration.wizard.pages.credentials.emptyState') }}\\n                    </p>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-wizard-page-credentials.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials', {\n    template,\n\n    props: {\n        credentialsComponent: {\n            type: String,\n            default: '',\n        },\n\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        componentIsLoaded() {\n            return Component.getComponentRegistry().has(this.credentialsComponent);\n        },\n    },\n});\n","import template from './swag-migration-wizard-page-credentials-success.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials-success', {\n    template,\n\n    props: {\n        errorMessageSnippet: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials_success %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials-success\\\">\\n\\n        {% block swag_migration_wizard_page_success_error_alert %}\\n            <sw-alert v-if=\\\"errorMessageSnippet !== ''\\\"\\n                      class=\\\"swag-migration-wizard-page-credentials-success__alert\\\"\\n                      id=\\\"alert-error-message\\\"\\n                      variant=\\\"warning\\\">\\n                {{ $tc(errorMessageSnippet) }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_migration_wizard_page_credentials_success_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_success_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_success_bubble %}\\n                            <div v-if=\\\"errorMessageSnippet === ''\\\"\\n                                 class=\\\"swag-migration-wizard__bubble swag-migration-wizard__bubble--success\\\">\\n                                <sw-icon class=\\\"swag-migration-wizard__success-icon\\\"\\n                                         name=\\\"regular-thumbs-up\\\"\\n                                         size=\\\"36px\\\"\\n                                         decorative>\\n                                </sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_credentials_success_title %}\\n                            <h3 class=\\\"swag-migration-wizard__information-header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.credentials.success.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_credentials_success_api_hint %}\\n                            {{ $tc('swag-migration.wizard.pages.credentials.success.contentInformation') }}\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-credentials-error.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials-error', {\n    template,\n\n    props: {\n        errorMessageSnippet: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials_error %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials-error\\\">\\n\\n        {% block swag_migration_wizard_page_credentials_error_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_error_information %}\\n            <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_success_bubble %}\\n                    <div class=\\\"swag-migration-wizard__bubble swag-migration-wizard__bubble--warning\\\">\\n                        <sw-icon class=\\\"swag-migration-wizard__warning-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_error_title %}\\n                    <h3 class=\\\"swag-migration-wizard__information-header\\\">\\n                        {{ $tc('swag-migration.wizard.pages.credentials.error.contentTitle') }}\\n                    </h3>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_error_api_hint %}\\n                    <template v-if=\\\"errorMessageSnippet !== ''\\\">\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc(errorMessageSnippet) }}\\n                        </p>\\n                    </template>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block sw_dashboard_index_content_intro_card %}\\n    {% parent %}\\n\\n    {%  block swag_migration_dashboard_card %}\\n\\n        {% block sw_dashboard_index_content_migration_card %}\\n            <swag-migration-dashboard-card v-if=\\\"acl.isAdmin()\\\"></swag-migration-dashboard-card>\\n        {% endblock %}\\n    {% endblock %}\\n{% endblock %}\\n\";","import template from './sw-dashboard-index.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.override('sw-dashboard-index', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    data() {\n        return {\n            context: Shopware.Context.api,\n            runExists: false,\n            loading: true,\n            run: {},\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent');\n\n            if (!this.acl.isAdmin()) {\n                return new Promise((resolve) => { resolve(); });\n            }\n\n            return this.migrationRunRepository.search(new Criteria(), this.context).then((items) => {\n                this.runExists = items.length > 0;\n\n                if (this.runExists) {\n                    this.run = items[0];\n                }\n\n                this.loading = false;\n            });\n        },\n    },\n});\n","/**\n * @type MIGRATION_STATUS\n */\nimport { MIGRATION_STATUS } from '../service/migration/swag-migration-worker-status-manager.service';\n\n/**\n * The vuex store for handling all global data that is needed for the migration process.\n * @module\n * @package services-settings\n */\nexport default {\n    namespaced: true,\n\n    state: {\n        /**\n         * The id of the currently selected connection to a source system.\n         */\n        connectionId: null,\n\n        /**\n         * The environment information of the connection check.\n         */\n        environmentInformation: {},\n\n        /**\n         * The id of the current migration run.\n         */\n        runId: null,\n\n        /**\n         * Is the migration currently running.\n         */\n        isMigrating: false,\n\n        /**\n         * The entity groups are generated in the backend depending on the selected data to migrate and contain entities.\n         * They are used for the requests to the backend and\n         * every entity in every group will be used for the fetch, write and download requests.\n         * During a migration their value can change multiple times\n         * (e.g. a state change from write to download).\n         * In general, they represent the progress and current status of the migration.\n         */\n        entityGroups: [],\n\n        /**\n         * Id of the entity group that is currently being processed.\n         */\n        currentEntityGroupId: '',\n\n        /**\n         * The current status of the migration.\n         * Each migration runs through different states (e.g. premapping, fetch, write, download)\n         */\n        statusIndex: MIGRATION_STATUS.WAITING,\n    },\n\n    mutations: {\n        setConnectionId(state, id) {\n            state.connectionId = id;\n        },\n\n        setEnvironmentInformation(state, environmentInformation) {\n            state.environmentInformation = environmentInformation;\n        },\n\n        setRunId(state, runId) {\n            state.runId = runId;\n        },\n\n        setIsMigrating(state, isMigrating) {\n            state.isMigrating = isMigrating;\n        },\n\n        setStatusIndex(state, newIndex) {\n            state.statusIndex = newIndex;\n        },\n\n        setCurrentEntityGroupId(state, newId) {\n            state.currentEntityGroupId = newId;\n        },\n\n        setEntityGroups(state, entityGroups) {\n            state.entityGroups = entityGroups;\n        },\n\n        setEntityProgress(state, { groupId, groupCurrentCount, groupTotal }) {\n            const targetGroup = state.entityGroups.find(group => group.id === groupId);\n\n            if (targetGroup === undefined) {\n                return;\n            }\n\n            if (targetGroup.total !== groupTotal) {\n                targetGroup.total = groupTotal;\n            }\n\n            targetGroup.currentCount = groupCurrentCount;\n            this.state.currentEntityGroupId = targetGroup.id;\n        },\n\n        resetProgress(state) {\n            state.entityGroups.forEach((data) => {\n                data.currentCount = 0;\n            });\n        },\n    },\n\n    getters: {\n        displayEntityGroups(state) {\n            if (state.statusIndex === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                return state.entityGroups.filter((group) => {\n                    return group.id === 'processMediaFiles';\n                });\n            }\n\n            return state.entityGroups.filter((group) => {\n                return group.id !== 'processMediaFiles';\n            });\n        },\n    },\n};\n","import './mixin';\nimport './component';\nimport './page';\nimport './extension/sw-dashboard-index';\nimport './profile';\nimport MigrationProcessStore from '../../core/data/migrationProcess.store';\nimport MigrationUIStore from '../../core/data/migrationUI.store';\n\nconst { Module, State } = Shopware;\n\nState.registerModule('swagMigration/process', MigrationProcessStore);\nState.registerModule('swagMigration/ui', MigrationUIStore);\n\n/**\n * @package services-settings\n */\nModule.register('swag-migration', {\n    type: 'plugin',\n    name: 'swag-migration',\n    title: 'swag-migration.general.mainMenuItemGeneral',\n    description: 'swag-migration.general.descriptionTextModule',\n    version: '0.9.0',\n    targetVersion: '0.9.0',\n    color: '#9AA8B5',\n    icon: 'regular-cog',\n\n    routes: {\n        emptyScreen: {\n            component: 'swag-migration-empty-screen',\n            path: 'empty',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'admin',\n            },\n        },\n        index: {\n            component: 'swag-migration-index',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n            },\n            redirect: { name: 'swag.migration.index.main' },\n            children: {\n                main: {\n                    path: 'main',\n                    component: 'swag-migration-main-page',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        resetMigration: false,\n                        privilege: 'admin',\n                    },\n                },\n                resetMigration: {\n                    path: 'reset-migration',\n                    component: 'swag-migration-main-page',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        resetMigration: true,\n                        privilege: 'admin',\n                    },\n                },\n                history: {\n                    path: 'history',\n                    component: 'swag-migration-history',\n                    children: {\n                        detail: {\n                            path: 'detail/:id',\n                            component: 'swag-migration-history-detail',\n                            meta: {\n                                parentPath: 'sw.settings.index',\n                                privilege: 'admin',\n                            },\n                        },\n                    },\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'admin',\n                    },\n                },\n                dataSelector: {\n                    path: 'dataSelector',\n                    component: 'swag-migration-data-selector',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'admin',\n                    },\n                },\n            },\n        },\n        processScreen: {\n            path: 'processScreen',\n            component: 'swag-migration-process-screen',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'admin',\n            },\n        },\n        wizard: {\n            component: 'swag-migration-wizard',\n            path: 'wizard',\n            redirect: { name: 'swag.migration.wizard.introduction' },\n            children: {\n                introduction: {\n                    path: 'introduction',\n                    component: 'swag-migration-wizard-page-introduction',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                profileInstallation: {\n                    path: 'profile/installation',\n                    component: 'swag-migration-wizard-page-profile-installation',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                connectionCreate: {\n                    path: 'connection/create',\n                    component: 'swag-migration-wizard-page-connection-create',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                connectionSelect: {\n                    path: 'connection/select',\n                    component: 'swag-migration-wizard-page-connection-select',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                profileInformation: {\n                    path: 'profile/information',\n                    component: 'swag-migration-wizard-page-profile-information',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentials: {\n                    path: 'credentials',\n                    component: 'swag-migration-wizard-page-credentials',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentialsSuccess: {\n                    path: 'credentials/success',\n                    component: 'swag-migration-wizard-page-credentials-success',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentialsError: {\n                    path: 'credentials/error',\n                    component: 'swag-migration-wizard-page-credentials-error',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n            },\n            meta: {\n                privilege: 'admin',\n            },\n        },\n    },\n\n    settingsItem: {\n        group: 'plugins',\n        to: 'swag.migration.index',\n        iconComponent: 'swag-migration-settings-icon',\n        privilege: 'admin',\n    },\n});\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * @package services-settings\n */\nclass MigrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'migration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.basicConfig = {\n            timeout: 30000,\n            version: Shopware.Context.api.apiVersion,\n        };\n    }\n\n    updateConnectionCredentials(connectionId, credentialFields, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-connection-credentials`, {\n            connectionId,\n            credentialFields,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    checkConnection(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/check-connection`, { connectionId }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDataSelection(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/data-selection`, {\n            ...this.basicConfig,\n            params: {\n                connectionId,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    createMigration(connectionId, dataSelectionIds) {\n        const params = {\n            connectionId,\n            dataSelectionIds,\n        };\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/create-migration`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    fetchData(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/fetch-data`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateWriteProgress(runUuid, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-write-progress`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateMediaFilesProgress(runUuid, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-media-files-progress`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    writeData(additionalParams = {}, additionalHeaders = { }) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/write-data`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    processMedia(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/process-media`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getState(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/get-state`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    takeoverMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/takeover-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    abortMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/abort-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    finishMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/finish-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    assignThemes(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/assign-themes`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    generatePremapping(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/generate-premapping`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    writePremapping(runUuid, premapping) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/write-premapping`, { runUuid, premapping }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getProfiles() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profiles`, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getGateways(profileName) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-gateways`, {\n            ...this.basicConfig,\n            params: {\n                profileName,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getProfileInformation(profileName, gatewayName) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profile-information`, {\n            ...this.basicConfig,\n            params: {\n                profileName,\n                gatewayName,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getGroupedLogsOfRun(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`${this.getApiBasePath()}/get-grouped-logs-of-run`, {\n            ...this.basicConfig,\n            params: {\n                runUuid,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    clearDataOfRun(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/clear-data-of-run`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    resetChecksums(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/reset-checksums`, {\n            connectionId,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    indexing(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.post('_action/index', {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n\n    cleanupMigrationData(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/cleanup-migration-data`, {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n\n    isMediaProcessing(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/is-media-processing`, {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n}\n\nexport default MigrationApiService;\n","const { State } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nclass ProcessStoreInitService {\n    constructor(migrationService, repositoryFactory, context) {\n        this._migrationService = migrationService;\n        this._migrationGeneralSettingRepository = repositoryFactory.create('swag_migration_general_setting');\n        this._context = context;\n    }\n\n    initProcessStore() {\n        return new Promise((resolve, reject) => {\n            State.commit('swagMigration/process/setEntityGroups', []);\n            State.commit('swagMigration/process/setEnvironmentInformation', {});\n            const criteria = new Criteria(1, 1);\n\n            this._migrationGeneralSettingRepository.search(criteria, this._context).then((settings) => {\n                if (settings.length === 0) {\n                    reject();\n                    return null;\n                }\n\n                const connectionId = settings.first().selectedConnectionId;\n\n                if (connectionId === null) {\n                    reject();\n                    return null;\n                }\n\n                State.commit('swagMigration/process/setConnectionId', connectionId);\n                return connectionId;\n            }).then((connectionId) => {\n                if (connectionId === null) {\n                    reject();\n                    return;\n                }\n\n                this._migrationService.checkConnection(connectionId)\n                    .then((connectionCheckResponse) => {\n                        State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n                        resolve();\n                    }).catch(() => {\n                        reject();\n                    });\n            }).catch(() => {\n                reject();\n            });\n        });\n    }\n}\n\nexport default ProcessStoreInitService;\n","const { State } = Shopware;\n\n/**\n * @package services-settings\n */\nclass UiStoreInitService {\n    constructor(migrationService) {\n        this._migrationService = migrationService;\n        this._migrationProcessState = State.get('swagMigration/process');\n    }\n\n    initUiStore() {\n        return new Promise((resolve, reject) => {\n            const connectionId = this._migrationProcessState.connectionId;\n\n            if (connectionId === undefined) {\n                resolve();\n                return;\n            }\n\n            this._migrationService.getDataSelection(connectionId).then((dataSelection) => {\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', dataSelection);\n                const selectedIds = dataSelection.filter(selection => selection.requiredSelection)\n                    .map(selection => selection.id);\n                State.commit('swagMigration/ui/setDataSelectionIds', selectedIds);\n                resolve();\n            }).catch(() => {\n                reject();\n            });\n        });\n    }\n}\n\nexport default UiStoreInitService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * @package services-settings\n */\nclass MigrationIndexingApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'migration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.basicConfig = {\n            timeout: 30000,\n        };\n    }\n\n    indexing(lastIndexer = null, offset = null, timestamp = null, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const params = {};\n        if (lastIndexer !== null && lastIndexer !== undefined) {\n            params.lastIndexer = lastIndexer;\n        }\n        if (offset !== null && offset !== undefined) {\n            params.offset = offset;\n        }\n        if (timestamp !== null && timestamp !== undefined) {\n            params.timestamp = timestamp;\n        }\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/indexing`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MigrationIndexingApiService;\n","import MigrationApiService from '../core/service/api/swag-migration.api.service';\nimport ProcessStoreInitService from '../core/service/migration/swag-migration-process-store-init.service';\nimport UiStoreInitService from '../core/service/migration/swag-migration-ui-store-init.service';\nimport MigrationIndexingApiService from '../core/service/api/swag-migration-indexing.api.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('migrationService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new MigrationApiService(initContainer.httpClient, container.loginService);\n});\n\nApplication.addServiceProvider('processStoreInitService', (container) => {\n    return new ProcessStoreInitService(\n        container.migrationService,\n        container.repositoryFactory,\n        Shopware.Context.api,\n    );\n});\n\nApplication.addServiceProvider('uiStoreInitService', (container) => {\n    return new UiStoreInitService(container.migrationService);\n});\n\nApplication.addServiceProvider('migrationIndexingApiService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new MigrationIndexingApiService(initContainer.httpClient, container.loginService);\n});\n","/**\n * @package services-settings\n */\nclass MigrationIndexingWorker {\n    /**\n     * @param {MigrationIndexingApiService} indexingApiService\n     */\n    constructor(indexingApiService) {\n        this._indexingApiService = indexingApiService;\n    }\n\n    start() {\n        return new Promise(async (resolve) => {\n            let running = true;\n            let lastResult = {};\n            while (running) {\n                // eslint-disable-next-line no-await-in-loop\n                await this._indexingApiService.indexing(\n                    lastResult.lastIndexer,\n                    lastResult.offset,\n                    lastResult.timestamp,\n                    // eslint-disable-next-line no-loop-func\n                ).then((result) => {\n                    if (result.done !== undefined && result.done === true) {\n                        running = false;\n                        return;\n                    }\n\n                    lastResult = result;\n                });\n            }\n            resolve();\n        });\n    }\n}\n\nexport default MigrationIndexingWorker;\n","import MigrationWorkerService from '../core/service/migration/swag-migration-worker.service';\nimport MigrationIndexingWorker from '../core/service/migration/swag-migration-indexing-worker.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('migrationWorkerService', (container) => {\n    return new MigrationWorkerService(\n        container.migrationService,\n        container.migrationIndexingWorkerService,\n    );\n});\n\nApplication.addServiceProvider('migrationIndexingWorkerService', (container) => {\n    return new MigrationIndexingWorker(\n        container.migrationIndexingApiService,\n    );\n});\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n","const { Mixin } = Shopware;\nconst { debug } = Shopware.Utils;\n\n/**\n * Mixin for the navigation logic inside a wizard.\n * See swag-migration-wizard as an example.\n *\n * @package services-settings\n */\nMixin.register('swag-wizard', {\n    data() {\n        return {\n            routes: {},\n            /* Example routes\n            routes: {\n                introduction: {\n                    name: 'swag.migration.wizard.introduction',\n                    index: 0 // the index defines the order of the navigation (it can be changed a runtime)\n                },\n                profile: {\n                    name: 'swag.migration.wizard.profile',\n                    index: 1\n                },\n                profileCreate: {\n                    name: 'swag.migration.wizard.profileCreate',\n                    index: 1.1 // not available through nextRoute (child from profile)\n                },\n                profileSelect: {\n                    name: 'swag.migration.wizard.profileSelect',\n                    index: 1.1 // not available through nextRoute (child from profile)\n                },\n                profileInformation: {\n                    name: 'swag.migration.wizard.profileInformation',\n                    index: 2\n                }\n            } */\n            currentRoute: {\n                name: '',\n                index: 0,\n            },\n        };\n    },\n\n    computed: {\n        /**\n         * Current route index (wizard step).\n         * This does not include child routes like 5.1\n         *\n         * @returns {number}\n         */\n        routeIndex() {\n            return Math.floor(this.currentRoute.index);\n        },\n\n        /**\n         * Get the number of steps that the wizard runs through.\n         * This includes all routes except for the child routes like 5.1\n         *\n         * @returns {number}\n         */\n        routeCount() {\n            const routeIndices = [];\n            Object.keys(this.routes).forEach((routeIndex) => {\n                if (!routeIndices.includes(Math.floor(this.routes[routeIndex].index))) {\n                    routeIndices.push(Math.floor(this.routes[routeIndex].index));\n                }\n            });\n\n            return routeIndices.length;\n        },\n\n        /**\n         * Returns the previous route (next round number that is smaller than the current index).\n         * If the user is on a child route for example 5.1 it will return the route with index of 5.\n         *\n         * @returns {Object|boolean<false>}\n         */\n        routePrevious() {\n            let previousRoute;\n            Object.keys(this.routes).forEach((route) => {\n                if (this.routes[route].index < this.currentRoute.index) {\n                    if (previousRoute === undefined ||\n                        Math.floor(this.routes[route].index) > previousRoute.index\n                    ) {\n                        previousRoute = this.routes[route];\n                    }\n                }\n            });\n\n            return previousRoute !== undefined ? previousRoute : false;\n        },\n\n        /**\n         * Returns the next route (next round number that is bigger than the current index).\n         * (except for child routes which are excluded like 5.1).\n         *\n         * @returns {Object|boolean<false>}\n         */\n        routeNext() {\n            let nextRoute;\n            Object.keys(this.routes).forEach((route) => {\n                if (Math.floor(this.routes[route].index) > this.routeIndex) {\n                    if (nextRoute === undefined ||\n                        Math.floor(this.routes[route].index) < nextRoute.index\n                    ) {\n                        nextRoute = this.routes[route];\n                    }\n                }\n            });\n\n            return nextRoute !== undefined ? nextRoute : false;\n        },\n\n        /**\n         * Checks if there is a previous route we can navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToPreviousPossible() {\n            return this.routePrevious !== false;\n        },\n\n        /**\n         * Checks if there is a next route we can navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToNextPossible() {\n            return this.routeNext !== false;\n        },\n    },\n\n    /**\n     * Match the current route when the component gets created.\n     */\n    created() {\n        // don't trigger the callback when the wizard is created.\n        // but set the right current route.\n        this.matchCurrentRoute(false);\n    },\n\n    updated() {\n        this.matchCurrentRoute(true);\n    },\n\n    methods: {\n        /**\n         * Logic for matching the current route.\n         * It searches for the route inside this.routes.\n         */\n        matchCurrentRoute(notifyCallback = true) {\n            // check for current child route\n            let currentRoute;\n            const currentRouteFound = Object.keys(this.routes).some((routeIndex) => {\n                if (this.routes[routeIndex].name === this.$router.currentRoute.name) {\n                    currentRoute = this.routes[routeIndex];\n                    return true;\n                }\n\n                return false;\n            });\n\n            if (currentRouteFound) {\n                this.currentRoute = currentRoute;\n                if (notifyCallback) {\n                    this.onChildRouteChanged();\n                }\n            }\n        },\n\n        /**\n         * Gets called when a route change has happened. This is useful to update texts inside the modal but\n         * outside of the router view (for example headlines, buttons, ...)\n         * Note: does not get called on created (to allow loading things from the api first)\n         */\n        onChildRouteChanged() {\n            debug.warn(\n                'swag-wizard Mixin',\n                'When using the wizard mixin you have to implement your custom \"onChildRouteChanged()\" method.',\n            );\n        },\n\n        /**\n         * Navigate to the specified route. You can get the route from this.routes\n         *\n         * @param {Object} route\n         */\n        navigateToRoute(route) {\n            this.$router.push({ name: route.name }).catch((error) => {\n                console.info(error.message)\n            });\n        },\n\n        /**\n         * Navigate to the previous route inside this.routes.\n         * It will skip route child indices like '3.1'\n         * It will return false if there is nothing to navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToPrevious() {\n            if (this.navigateToPreviousPossible) {\n                this.navigateToRoute(this.routePrevious);\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Navigate to the next route inside this.routes.\n         * It will skip route child indices like '3.1'.\n         * It will return false if there is nothing to navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToNext() {\n            if (this.navigateToNextPossible) {\n                this.navigateToRoute(this.routeNext);\n                return true;\n            }\n\n            return false;\n        },\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-shop-avatar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4aadbaf0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-pause-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4d5d70f8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-wizard-page-profile-installation.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"24b74a9b\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-loading-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0dbb3c6c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./swag-migration-media-process.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3203655a\", content, true, {});"],"sourceRoot":""}